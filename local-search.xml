<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Shell/Bash 腳本板子速查</title>
    <link href="/shell/230403ShellScripts/"/>
    <url>/shell/230403ShellScripts/</url>
    
    <content type="html"><![CDATA[<p>本篇不定期更新 Shell/Bash 的實用腳本，方便速查。</p><span id="more"></span><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash">stri=<span class="hljs-string">&quot;abcdABCD1234&quot;</span><br><br><span class="hljs-comment"># 獲取字符串長度</span><br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$&#123;#stri&#125;</span><br><span class="hljs-comment"># 預期輸出：12</span><br><br><span class="hljs-comment"># 匹配字符串開頭的子串長度</span><br><span class="hljs-comment"># 不支持 Regex 操作如：</span><br><span class="hljs-comment">#   a+ (aa*)</span><br><span class="hljs-comment">#  \d ([0-9]) 等</span><br><span class="hljs-built_in">echo</span> $(expr match <span class="hljs-string">&quot;<span class="hljs-variable">$stri</span>&quot;</span> <span class="hljs-string">&#x27;[a-z]*ABCD[0-9]*&#x27;</span>)<br><span class="hljs-comment"># 預期輸出：12</span><br><br></code></pre></td></tr></table></figure><h2 id="文件切割合併"><a href="#文件切割合併" class="headerlink" title="文件切割合併"></a>文件切割合併</h2><h3 id="cat"><a href="#cat" class="headerlink" title="cat"></a><code>cat</code></h3><h3 id="split"><a href="#split" class="headerlink" title="split"></a><code>split</code></h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 指定文件行數，逐 300 行分割</span><br><span class="hljs-comment"># 默認文件名：`xaa`，`xab`, ...</span><br>split -l 300 log.txt<br><br><span class="hljs-comment"># 指定文件大小，每 300M 分割</span><br><span class="hljs-comment"># 指定新文件名前綴 `newfile`</span><br><span class="hljs-comment"># 文件名：`newfileaa`, `newfileab`, ...</span><br>split -b 500m log.txt newfile<br></code></pre></td></tr></table></figure><h2 id="批量刪除進程"><a href="#批量刪除進程" class="headerlink" title="批量刪除進程"></a>批量刪除進程</h2><h3 id="指定進程號範圍"><a href="#指定進程號範圍" class="headerlink" title="指定進程號範圍"></a>指定進程號範圍</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-keyword">for</span> (( c=3452000; c&lt;=3455000; c++ )); <span class="hljs-keyword">do</span>  <span class="hljs-built_in">kill</span> -9 <span class="hljs-variable">$c</span>; <span class="hljs-keyword">done</span>;<br></code></pre></td></tr></table></figure><h3 id="指定關鍵詞"><a href="#指定關鍵詞" class="headerlink" title="指定關鍵詞"></a>指定關鍵詞</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">kill</span> $(ps aux | grep <span class="hljs-string">&#x27;train_task.py&#x27;</span> | awk <span class="hljs-string">&#x27;&#123;print $2&#125;&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">ls mono<span class="hljs-regexp">/bpe-cased-$name | xargs -t -i mv mono/</span>bpe-cased-<span class="hljs-variable">$name</span><span class="hljs-regexp">/&#123;&#125; mono/</span>bpe-cased-<span class="hljs-variable">$name</span>/&#123;&#125;.<span class="hljs-variable">$tgt</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>shell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>shell</tag>
      
      <tag>bash</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>230217 進程顯存佔用瑣記</title>
    <link href="/gpu/230217GPUProcessTrifies/"/>
    <url>/gpu/230217GPUProcessTrifies/</url>
    
    <content type="html"><![CDATA[<p>今天使用組裏服務器，發現某些顯卡利用率爲 0，但仍有不少顯存佔用，不管是<code>nvidia-smi</code>還是<code>gpustat</code>都看不出是誰的哪個進程。</p><p>解決方案：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo fuser -v /dev/nvidia*<br></code></pre></td></tr></table></figure><p>找到對應卡號的記錄（如 6 號卡）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">/dev/nvidia6:        nvidia-persistenced   1909 F.... nvidia-persiste<br>                     xxx       772677 F...m python<br>                     yyy       3591553 F.... python<br>                     yyy       3595089 F.... python<br>                     yyy       3595090 F.... python<br>                     yyy       3595091 F.... python<br></code></pre></td></tr></table></figure><p>找到那些<code>F...m</code>的進程，並確認它們不在<code>nvidia-smi</code>列出的進程中，殺死即可。</p><h1 id="參考"><a href="#參考" class="headerlink" title="參考"></a>參考</h1><ul><li><a href="https://forums.developer.nvidia.com/t/11-gb-of-gpu-ram-used-and-no-process-listed-by-nvidia-smi/44459/4">11 GB of GPU RAM used, and no process listed by nvidia-smi</a></li><li><a href="https://www.geeksforgeeks.org/fuser-command-in-linux/">fuser command in Linux</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>GPU</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GPU</tag>
      
      <tag>Nvidia</tag>
      
      <tag>fuser</tag>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《計算理論基礎》期末課程報告</title>
    <link href="/theory-of-computation/ComputationTheoryEssay/"/>
    <url>/theory-of-computation/ComputationTheoryEssay/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文修訂自個人《計算理論基礎》期末課程報告，就該課程知識系統作了一定梳理，並擴展了一些知識點的內容。正文（包括增補部分）採用簡體字。<br>本文並<strong>不是</strong>課程知識的完全總結。</p></blockquote><span id="more"></span><blockquote><p>230226跋：計算之學大有裨益，惜我輩淺嘗輒止耳。</p></blockquote><p>本学期的《计算理论基础》课程内容主要包含三个部分：计算模型、可计算性理论和计算复杂性理论。本报告尝试简要概括每部分的具体内容，并对部分知识点作一定扩展，体现个人对课程内容的思考。</p><h1 id="计算模型-Computational-Models"><a href="#计算模型-Computational-Models" class="headerlink" title="计算模型 Computational Models"></a>计算模型 Computational Models</h1><ul><li>计算理论概要、数学概念和术语</li><li>图灵机，确定性和非确定性，计算的形式化定义</li><li>程序设计语言P，递归函数，递归集</li><li>形式语言与自动机理论，LAMBDA-演算简介</li><li>计算模型之间的等价以及层级关系；其他形式的计算模型</li></ul><h2 id="乔姆斯基层次结构-Chomsky-Hierarchy"><a href="#乔姆斯基层次结构-Chomsky-Hierarchy" class="headerlink" title="乔姆斯基层次结构 Chomsky Hierarchy"></a>乔姆斯基层次结构 Chomsky Hierarchy</h2><p>我们重点学习了有穷自动机（Finite Automata）、下推自动机（Push-Down Automata，PDA）、图灵机（Turing Machine）等计算模型，在之后的章节还补充了线性有界自动机（Linear Bounded Automata，LBA）的概念。</p><p>我们重点学习了正则语言（Regular Language，RL）、上下文无关语言（Context-Free Language, CFL）等，粗略提及了上下文有关语言（Context-Sensitive Language，CSL）的概念。</p><p>事实上，在本科阶段的《编译原理》课程中，我们知道语言学家乔姆斯基（Noam Chomsky）定义了四类文法和四种形式语言类，这与我们本部分学到的内容密切相关。几类文法的差别在于对产生式施加不同的限制。</p><ul><li>0型文法（短语结构文法，phrase structure grammars），产生的语言称为0型语言（即递归可枚举语言，recursive enumerable language）；</li><li>1型文法（上下文有关文法，context-sensitive grammars，CSG），产生的语言称为1型语言（即CSL）；</li><li>2型文法（上下文无关文法，context-free grammars，CFG），产生的语言称为2型语言（即CFL）；</li><li>3型文法（正则文法，regular grammars），产生的语言称为3型语言（即正则语言）。</li></ul><p>从0型文法到3型文法存在包含关系，即0型文法包含1型文法，1型文法包含2型文法，2型文法包含3型文法。事实上，我们所学的计算模型层次关系即对应Chomsky层次结构。下面的表格给出了计算模型和语言之间的对应关系，这里补充了对应的文法和产生式。其中，$a$为终结符，$A$, $B$为非终结符，$\alpha$, $\beta$, $\gamma$为终结符和非终结符构成的串。</p><p>$$\begin{array}{|l|l|l|l|l|} \hline 计算模型 &amp; 语言 &amp; 文法 &amp; 产生式 &amp; 举例 \\ \hline \text{DFA} &amp; \text{RL} &amp; 3型文法 &amp; A\rightarrow{a}, A\rightarrow{aB} &amp; L=\{a^*b^*\} \\  \text{PDA} &amp; \text{CFL} &amp; 2型文法 &amp; A\rightarrow{\alpha} &amp; L=\{a^nb^n|n&gt;0\} \\ \text{LBA} &amp; \text{CSL} &amp; 1型文法 &amp; \alpha{A}\beta\rightarrow\alpha\gamma\beta &amp; L=\{a^nb^nc^n|n&gt;0\} \\ 图灵机 &amp; 递归可枚举语言 &amp; 0型文法 &amp; \gamma\rightarrow\alpha（\gamma非空） &amp; L=\{w|w描述了一个终止的图灵机\} \\ \hline \end{array} $$</p><p><em>230226补充：</em></p><p>RL $\subseteq$ CFL $\subseteq$ CSL $\subseteq$ 图灵可判定语言 $\subseteq$ 图灵可识别语言 $\subseteq$ 图灵不可识别语言</p><p>这里图灵可判定语言（Turing-decidable langauges）的范围大于CSL。</p><h2 id="上下文无关文法-Context-free-Grammars"><a href="#上下文无关文法-Context-free-Grammars" class="headerlink" title="上下文无关文法 Context-free Grammars"></a>上下文无关文法 Context-free Grammars</h2><p>上下文无关文法的概念在《编译原理》课程中已有所涉及。我们知道，对于对于任意一个CFG，不存在算法判定它是无二义性（歧义性，ambiguous）的；但能给出一组充分条件，满足这组充分条件的文法是无二义性的。有些歧义文法可以转化为非歧义文法，但有些文法是固有歧义的。</p><p>我们在使用CFG时，常常利用乔姆斯基范式来描述。可以通过规则将文法转化为乔姆斯基范式。</p><h2 id="正则运算-Regular-Operations"><a href="#正则运算-Regular-Operations" class="headerlink" title="正则运算 Regular Operations"></a>正则运算 Regular Operations</h2><p>课程介绍了一些正则运算的概念。正则语言在正则运算下封闭。</p><p><strong>CFL在并、连接、星号、闭包、正闭包、同态等正则运算下封闭，但在交、补运算下不封闭。</strong></p><h2 id="正则表达式-Regular-Expressions"><a href="#正则表达式-Regular-Expressions" class="headerlink" title="正则表达式 Regular Expressions"></a>正则表达式 Regular Expressions</h2><p>课程所讲的 <strong>正则表达式（Regular Expression，Regex）</strong> 在计算机科学领域有广泛应用，主流的编程语言基本都支持正则表达式的处理。根据所学的计算理论知识，我们可以知道普通正则表达式的一些不足，比如不支持递归，从而不能匹配任意深度的嵌套（如上表的$L=\{a^nb^n|n&gt;0\}$）。某些编程语言正则表达式处理模块所支持的递归特性已经不属于传统正则表达式定义的范畴，文法至少已经是CFG。</p><h2 id="确定性-Determinism"><a href="#确定性-Determinism" class="headerlink" title="确定性 Determinism"></a>确定性 Determinism</h2><p>当机器处于给定状态并读取下一个输入符号时，我们知道下一个状态将是什么，那么这个机器的计算是确定的。如果下一个状态可能存在多个选择，形成多个计算分支，那么机器就是非确定的。</p><p>每一台非确定型有穷自动机（NFA）都等价于某一台确定型有穷自动机（DFA）。</p><p>每一台非确定型图灵机都等价于某一台确定型图灵机。</p><h2 id="泵引理-Pumping-Lemma"><a href="#泵引理-Pumping-Lemma" class="headerlink" title="泵引理 Pumping Lemma"></a>泵引理 Pumping Lemma</h2><p>正则语言和CFL的泵引理是一个必要不充分条件，当一个语言不满足对应泵引理的条件时，可以证明它不是正则语言或CFL。但是不能用泵引理证明某个语言属于正则语言或CFL。</p><h2 id="lambda-演算-lambda-calculus"><a href="#lambda-演算-lambda-calculus" class="headerlink" title="$\lambda$演算 $\lambda$-calculus"></a>$\lambda$演算 $\lambda$-calculus</h2><p><strong>与不动点定理的关系</strong>：$\lambda$演算的共同主题是找到给出$\lambda$表达式的不动点。每个$\lambda$表达式都有一个不动点，不动点组合子是一个函数，即输入一个$\lambda$表达式并输出该表达式的一个不动点。</p><p><strong>应用</strong>：一些编程语言支持<strong>lambda表达式（又称匿名函数）</strong>，通常用于封装传递给算法或异步函数的少量代码行。</p><h1 id="可计算性理论-Theory-of-Computability"><a href="#可计算性理论-Theory-of-Computability" class="headerlink" title="可计算性理论 Theory of Computability"></a>可计算性理论 Theory of Computability</h1><ul><li>Church-Turing论题 (Chap3)</li><li>可判定性，可判定的计算问题 (Chap4)</li><li>计算问题的可归约性 (Chap5)</li><li>递归定理，逻辑理论的可判定性，Turing可归约 (Chap6)</li></ul><h2 id="可判定性-Decidability"><a href="#可判定性-Decidability" class="headerlink" title="可判定性 Decidability"></a>可判定性 Decidability</h2><p>图灵可识别语言是能被某个图灵机识别的语言，是递归可枚举的，这个图灵机可以接受或拒绝，也可以一直不停机。</p><p>图灵可判定语言是能被某个图灵机判定的语言，这个图灵机一定要返回接受或拒绝的结果。我们称对所有输入都停机的图灵机为判定器。</p><p>这里的定义显然不适用于DFA和PDA。</p><p>每个CFL都是可判定的。</p><p>$A_{DFA}$，$A_{NFA}$，$A_{LBA}$，$A_{REX}$，$A_{CFG}$是可判定的。</p><p>$E_{DFA}$，$E_{CFG}$是可判定的，但$E_{LBA}$是不可判定的。</p><p>$EQ_{DFA}$是可判定的。</p><p>$ALL_{CFG}$是不可判定的。</p><p>$A_{TM}$等与图灵机相关的都是不可判定的。由赖斯定理可知，确定某一图灵机的语言是否具有属性P这一问题是不可判定的。</p><p>通过康托对角化方法，我们可以证明，存在不能被任何图灵机识别的语言。</p><p><em>230226补充：</em></p><p>$EQ_{TM}$，$\overline{EQ_{TM}}$ 都图灵不可识别。对于后者，我们也可以称$EQ_{TM}$不是补图灵可识别（co-Turing recognizable）的。</p><h2 id="可归约性-Reducibility"><a href="#可归约性-Reducibility" class="headerlink" title="可归约性 Reducibility"></a>可归约性 Reducibility</h2><p>通过归约，我们将一个问题转化为另一个问题，这在本课程后半部分的证明中广泛应用。</p><p>映射可归约则是一种归约的形式化定义。</p><p><em>230226补充：</em></p><p>证明某语言A图灵不可识别：$\overline{A_{TM}}\leq_{m}{A} \Leftrightarrow A_{TM}\leq_{m}{\overline{A}}$</p><p>证明某语言A图灵可识别：$A\leq_{m}{A_{TM}}$</p><h2 id="递归定理与Quine程序-Recursive-Theorem-amp-Quine-Programs"><a href="#递归定理与Quine程序-Recursive-Theorem-amp-Quine-Programs" class="headerlink" title="递归定理与Quine程序 Recursive Theorem &amp; Quine Programs"></a>递归定理与Quine程序 Recursive Theorem &amp; Quine Programs</h2><p>课程介绍了图灵机$SELF$的自引用特性（忽略输入，且打印出它自己的描述），进而引出递归定理。</p><p>事实上，人们把自复制程序（self-reproducing / self-replicating / self-copying programs）称为Quine，这类程序以美国哲学家奎恩（Willard Van Orman Quine）的姓氏命名。<strong>Quine程序不接受输入，生成自己的源代码副本作为唯一输出。</strong></p><p>递归定理可以证明Quine程序的存在性，或者说，任何图灵完备的编程语言都可以构造出Quine程序。</p><p>下面给出用C编写的Quine程序示例。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-keyword">char</span>*f=<span class="hljs-string">&quot;char*f=%c%s%c;main()&#123;printf(f,34,f,34,10);&#125;%c&quot;</span>;main()&#123;<span class="hljs-built_in">printf</span>(f,<span class="hljs-number">34</span>,f,<span class="hljs-number">34</span>,<span class="hljs-number">10</span>);&#125;<br></code></pre></td></tr></table></figure><h2 id="谕示-Oracle"><a href="#谕示-Oracle" class="headerlink" title="谕示 Oracle"></a>谕示 Oracle</h2><p>语言B的一个谕示（oracle）是一个能够报告某个串$w$是否为B的成员的外部装置，谕示图灵机具有询问谕示的额外能力。显然，这是一个抽象概念，比如由于$A_{TM}$的不可判定性，实际上并不存在判定$A_{TM}$的谕示图灵机。</p><h1 id="计算复杂性理论-Theory-of-Computational-Complexity"><a href="#计算复杂性理论-Theory-of-Computational-Complexity" class="headerlink" title="计算复杂性理论 Theory of Computational Complexity"></a>计算复杂性理论 Theory of Computational Complexity</h1><ul><li>算法优劣的渐进分析与复杂性的度量 (Chap7)</li><li>时间复杂性及典型的问题，P与NP (Chap7)</li><li>多项式时间规约，NP完全性；空间复杂性及典型的问题 (Chap7.4; Chap8.1)</li><li>时间与空间复杂性上的层次定理 (Chap9.1)</li><li>PSPACE完全性，难解性、更难解问题、复杂性类之间的关系 (Chap8)</li><li>近似算法，概率算法，加强引理，交互式证明算法，抽象复杂性等 (Chap10)</li><li>计算模型、可计算性、计算复杂性等计算理论的主要方法、结论以及未解问题，未来计算的可能发展讨论</li></ul><h2 id="渐进分析-Asymptotic-Analysis"><a href="#渐进分析-Asymptotic-Analysis" class="headerlink" title="渐进分析 Asymptotic Analysis"></a>渐进分析 Asymptotic Analysis</h2><p>大O记法（渐进记法）：一个函数渐进地不大于（$\leq$）另一个函数</p><p>小o记法：一个函数渐进地小于另一个函数</p><p>$$\begin{array}{ll} \hline  f(n)=O(g(n)) &amp; \le \\ f(n)=o(g(n)) &amp; &lt; \\ f(n)=\Omega(g(n)) &amp; \ge \\ f(n)=\omega(g(n)) &amp; &gt; \\ f(n)=\theta(g(n)) &amp; = \\ \hline \end{array}$$</p><h2 id="P和NP-P-amp-NP"><a href="#P和NP-P-amp-NP" class="headerlink" title="P和NP P &amp; NP"></a>P和NP P &amp; NP</h2><p>P是<strong>确定型单带图灵机</strong>在<strong>多项式时间</strong>内可判定的语言类，存在多项式时间算法。</p><p>NP是具有多项式时间验证机的语言类，是非确定型单带图灵机在多项式时间内可判定的语言类。</p><p>目前并无$\rm{P}\ne\rm{NP}$的证明。某些NP问题中任何一个如果存在多项式时间算法，那么所有NP问题都是多项式时间可解的。这类问题称为NP完全的。</p><p><strong>NP完全性</strong>：如果语言B满足下面两个条件，就称为NP完全的：</p><ul><li>B属于NP</li><li>NP中的每个A都多项式时间可归约到B</li></ul><p>若B只满足条件2，则称它为NP难的。</p><h2 id="空间复杂性-Space-Complexity"><a href="#空间复杂性-Space-Complexity" class="headerlink" title="空间复杂性 Space Complexity"></a>空间复杂性 Space Complexity</h2><p>PSPACE是在<strong>确定型图灵机</strong>上，在<strong>多项式空间内</strong>可判定的语言类。</p><p>萨维奇定理（Savitch’s Theorem）：对于任何函数 $f:\bf{N}→\bf{R}^+$，其中$f(n)\ge{n}$，$\rm{NSPACE}(f(n))\subseteq\rm{SPACE}(f^2(n))$。</p><p>语言类的关系</p><p>$$\rm{P\subseteq NP\subseteq PSPACE=NPSPACE\subseteq EXPTIME\ \pmb{\subseteq EXPSPACE\subseteq SPACE \subseteq NSPACE}}$$</p><p><strong>PSPACE完全性</strong>：如果语言B满足下面两个条件，就称为PSPACE完全的：</p><ul><li>B属于PSPACE</li><li>PSPACE中的每一个语言A多项式时间可归约到B</li></ul><p>若B只满足条件2，则称它为PSPACE难的。</p><h2 id="层次定理-Hierarchy-Theorem"><a href="#层次定理-Hierarchy-Theorem" class="headerlink" title="层次定理 Hierarchy Theorem"></a>层次定理 Hierarchy Theorem</h2><p><strong>空间层次定理</strong>：对于任何空间可构造函数$ f:\bf{N}\rightarrow\bf{N}$，存在语言$A$，在空<br>间 $O(f(n))$ 内可判定，但不能在空间 $o(f(n))$ 内判定。</p><p><strong>时间层次定理</strong>：对于任何时间可构造函数$ t:\bf{N}\rightarrow\bf{N}$，存在语言$A$，在时间$O(t(n))$ 内可判定，但在时间 $o(t(n)/\log{⁡t(n)})$ 内不可判定。</p><h2 id="BPP"><a href="#BPP" class="headerlink" title="BPP"></a>BPP</h2><p>BPP是多项式时间的概率图灵机以错误概率$\frac{1}{3}$判定的语言类。根据引理10.5，我们可以通过错误概率为$\epsilon (0&lt;\epsilon&lt;\frac{1}{2})$的多项式时间概率图灵机构造判定BPP的多项式时间概率图灵机。</p><h1 id="参考文献-References"><a href="#参考文献-References" class="headerlink" title="参考文献 References"></a>参考文献 References</h1><ul><li>Sipser, Michael. <em>Introduction to the Theory of Computation</em>. Cengage Learning, 2012.</li><li><a href="https://www.pling.org.uk/cs/toc.html">Chris Northwood, Theory of Computation, Computer Science notes</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>計算理論</category>
      
    </categories>
    
    
    <tags>
      
      <tag>計算理論</tag>
      
      <tag>喬姆斯基</tag>
      
      <tag>計算複雜性</tag>
      
      <tag>理論計算機科學</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2022年終總結（節選）</title>
    <link href="/essay/2022Summary/"/>
    <url>/essay/2022Summary/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文節選自個人2022年12月的日記。</p></blockquote><span id="more"></span><p>時間終究來遘12月，距離2022年結束賰無三十日。先提前擬草稿仔，總結即蜀年兮事誌，爲今後提供參考借鑑。</p><p>（正文略）</p><h2 id="箴言"><a href="#箴言" class="headerlink" title="箴言"></a>箴言</h2><p>2022年年尾兮淡薄仔忠告：</p><ul><li>堅強勇毅。着算予時代框下在（khiong–hēe-tē）侷下在，着算概率下下下，只要有利於個人發展，攏愛儘量去嘗試，殘存兮蜀屑仔希望嘛值得堅持。爲此，哪怕是臨時守暝嘛毋驚。知影家己能力兮長短，充分利用發揮才調，克服心理障礙佮其他客觀不利因素，盡好人事。咱心中一定愛有目標追求，爲之拍拚。</li><li>強身健體。飲食愛張持，健身着注意。顧好身體，食好糜飯，捷去跑步，量力而行。</li><li>悶聲發財。人心難測，低調做儂，毋敢張揚。</li><li>真誠友愛。毋敢完全相信人性，毋敢數想啥貨姻緣，用誠懇兮態度對待身邊兮儂，用得體兮友愛善待疼惜兮儂。其一，固然看袂合「烏合之衆」，畢竟共事做位，關係也莫拍過㾀；有時猶是愛交流，正袂完全孤立去。其二，人生有真濟聚散，自然無一定有一直親身陪伴兮機會，那麼就儘量佇有限兮時間裏底充分給予怹美好而毋是焦慮。現代通訊發達，共摯友保持一定聯繫猶算易，當然現實要緊，知影體諒，減少猜疑，莫苛求。</li><li>甘心孤旅。家己兮路家己行，有真濟參考借鑑兮對象，但是無一模一樣兮軌跡佮境遇。罕得有理解咱兮儂，家己做孤獨之旅，「荷戟獨徬徨」。縱使艱難，若價值感充實，免畏懼免後悔。感念斯土，思慕先賢。做開拓進取、自立自強兮儂，不求人知。</li><li>自我約束。無有自律兮自由可比水中浮薸，數想啥貨快樂？貪圖一時苟安，則進取愈艱。</li></ul><p>$$\mathcal{Aujourd\text{‘}hui, marchons\text{-}nous!}$$</p><p>時壬寅冬月記。</p><h2 id="221229-孤旅與摯愛"><a href="#221229-孤旅與摯愛" class="headerlink" title="221229 孤旅與摯愛"></a>221229 孤旅與摯愛</h2><p>事業未竟，抱憾甚多。不宜執念幻想，甘當寂寞過客。<br>今日形勢不同2019，可以借鑑當時優點，不可汲汲於彼時的功利追求，要有更廣闊的視野和更大的抱負。<br>孤獨無代表無希望，無講因此倒平。善於利用各種工具約束和提升自我。娛樂量約撙節。熱愛生活，樂觀進取。</p>]]></content>
    
    
    <categories>
      
      <category>隨筆</category>
      
    </categories>
    
    
    <tags>
      
      <tag>2022</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多模態知識可解釋性 Multimodal Knowledge Interpretability</title>
    <link href="/nlp/MultimodalKnowledgeInterpretability/"/>
    <url>/nlp/MultimodalKnowledgeInterpretability/</url>
    
    <content type="html"><![CDATA[<p>本篇介紹三篇<strong>多模態知識可解釋性</strong>相關新近工作，這些工作做了多模態模型學習到的知識的可視化或分析性實驗。</p><span id="more"></span><h2 id="Finding-Structural-Knowledge-in-Multimodal-BERT"><a href="#Finding-Structural-Knowledge-in-Multimodal-BERT" class="headerlink" title="Finding Structural Knowledge in Multimodal-BERT"></a>Finding Structural Knowledge in Multimodal-BERT</h2><p><em>ACL2022, <a href="https://arxiv.org/abs/2203.09306">arXiv:2203.09306</a></em></p><p>探究多模態模型嵌入（每層編碼器的輸入。最底層即輸入的embedding，其他爲前一層輸出的隱狀態）表示蘊含的結構知識。</p><p><strong>研究問題</strong></p><ul><li>RQ 1: 多模態BERT的文本嵌入相比於文本BERT是否保留結構知識？<ul><li>Sub-RQ 1.1：文本-圖像聯合訓練是否有影響？</li></ul></li><li>RQ 2: 多模態BERT的視覺嵌入是否學習到如何編碼視覺<strong>場景樹（scene tree）</strong>？</li></ul><p><strong>主要貢獻</strong></p><ul><li>根據文本依存樹，爲圖像定義場景樹</li><li>利用<strong>結構探針（structural probe）</strong>，輸入文本/圖像結點的模型嵌入，預測文本依存樹或圖像場景樹結點深度和距離</li></ul><h3 id="構建場景樹"><a href="#構建場景樹" class="headerlink" title="構建場景樹"></a>構建場景樹</h3><p><img src="/images/multi-probe-scene-tree.png" alt="Scene tree"></p><p>輸入</p><ul><li>文本依存樹$T_t=\{ E_t, V_t \}$</li><li>視覺短語（phrase，含圖像區域和對應文本）集合$P$</li><li>圖像$I$</li></ul><p>輸出</p><ul><li>場景樹$T_s=\{ E_s, V_s \}$ (根結點$v_{s,0}$爲$I$) </li><li>結點之間的距離矩陣$\boldsymbol{D} \in \mathbb{D}^{n\times n}$</li><li>結點深度向量$\boldsymbol{d} \in \mathbb{D}^{n}$。</li></ul><h3 id="結構探針"><a href="#結構探針" class="headerlink" title="結構探針"></a>結構探針</h3><p>輸入：文本/圖像結點的嵌入<br>輸出：預測的文本依存樹/圖像場景樹距離矩陣、深度向量</p><ul><li>距離探針 $\boldsymbol{D}_{ij}=(\boldsymbol{B}(\boldsymbol{h}_i^l-\boldsymbol{h}_j^l))^\top(\boldsymbol{B}(\boldsymbol{h}_i^l-\boldsymbol{h}_j^l))$</li><li>深度探針 $\boldsymbol{d}_{i}=||\boldsymbol{h}_i||_{\boldsymbol{B}}^2=(\boldsymbol{B}\boldsymbol{h}_i^l)^\top(\boldsymbol{B}\boldsymbol{h}_i^l)$</li></ul><h3 id="實驗"><a href="#實驗" class="headerlink" title="實驗"></a>實驗</h3><p>純文本：Penn Treebank (PTB3)<br>圖文：Flickr30k</p><p>模型</p><ul><li>文本：BERT</li><li>單流：UNITER</li><li>雙流：ViLBERT</li></ul><p>基線：未作微調的zero-shot文本/圖像嵌入；原始RCNN特徵。</p><h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p><img src="/images/multi-probe-ptb3.png" alt="Text probe on PTB3"></p><p><em>模型中間層嵌入蘊含更多結構知識。</em></p><p><strong>RQ1</strong>結論：在PTB3數據集上，多模態模型保留的文本結構知識不及BERT。</p><hr><p><img src="/images/multi-probe-flickr1.png" alt="Text probe on Flickr30k"></p><p><img src="/images/multi-probe-flickr2.png" alt="Text probe on Flickr30k w/o visual embeddings"></p><p><strong>Sub-RQ1</strong>結論：在Flickr30k數據集上，效果和BERT差不多，但並非視覺嵌入參與訓練的貢獻。</p><p><em>（合理懷疑：Flickr30k畢竟是圖文數據；PTB3可能跨領域了）</em></p><hr><p><img src="/images/multi-probe-flickr3.png" alt="Visual probe on Flickr30k"></p><p><strong>RQ2</strong>結論：視覺嵌入構建場景樹的效果不如利用原始RCNN特徵。</p><h2 id="VL-InterpreT-An-Interactive-Visualization-Tool-for-Interpreting-Vision-Language-Transformers"><a href="#VL-InterpreT-An-Interactive-Visualization-Tool-for-Interpreting-Vision-Language-Transformers" class="headerlink" title="VL-InterpreT: An Interactive Visualization Tool for Interpreting Vision-Language Transformers"></a>VL-InterpreT: An Interactive Visualization Tool for Interpreting Vision-Language Transformers</h2><p><em><a href="https://arxiv.org/abs/2203.17247">arXiv:2203.17247</a></em></p><p><strong>（單流）</strong>多模態Transformer注意力和表示的<strong>可視化工具</strong></p><ul><li><strong>注意力</strong>：考慮每層的注意力頭，以及跨模態/模態內注意力，構成大小爲$(N_{layers},N_{heads},L_{v}+L_{l},L_{v}+L_{l})$的注意力矩陣。對各層各注意力頭注意力權重、各token注意力權重可繪製熱力圖。</li><li><strong>隱狀態表示</strong>：t-SNE降維到2維，可視化。</li></ul><p>對KD-VLP模型在兩個視覺問答任務VCR（Visual Commonsense Reasoning，視覺常識推理）和WebQA上做可視化分析（略）。</p><p><img src="/images/vl-interpret.png" alt="VL-InterpreT"></p><h2 id="Mind-the-Gap-Understanding-the-Modality-Gap-in-Multi-modal-Contrastive-Representation-Learning"><a href="#Mind-the-Gap-Understanding-the-Modality-Gap-in-Multi-modal-Contrastive-Representation-Learning" class="headerlink" title="Mind the Gap: Understanding the Modality Gap in Multi-modal Contrastive Representation Learning"></a>Mind the Gap: Understanding the Modality Gap in Multi-modal Contrastive Representation Learning</h2><p><em><a href="https://arxiv.org/abs/2203.02053">arXiv:2203.02053</a></em></p><p>探究多模態表示空間的間隔。如CLIP一類<strong>雙流</strong>模型的模態表示間隔是由於不同的<strong>模型初始化</strong>和對比學習<strong>優化</strong>所造成；非線性激活函數可造成圓錐效應；改變模態間隔，可改善下游zero-shot分類性能並減少種族偏見。</p><p>對模態間隔現象提供三个方面的解釋：</p><ul><li>深度神經結構的歸納偏置（inductive bias）產生<strong>圓錐效應（cone effect）</strong>：無論是否預訓練過，模型的向量空間均被限制在狹窄的圓錐中。</li><li>不同的隨機初始化產生不同的嵌入向量錐。</li><li>對比學習目標函數保留了這個間隔。</li></ul><p>理論分析表明，每個神經網絡層有大概率縮小了嵌入向量之間的角度，在更深的網絡結構下創建更窄的圓錐。</p><h3 id="模態間隔"><a href="#模態間隔" class="headerlink" title="模態間隔"></a>模態間隔</h3><p><img src="/images/modality-gap.png" alt="Modality gap"></p><ul><li>各種模態的（雙流）模型</li><li>隨機權重仍有此現象</li></ul><h3 id="圓錐效應致模態間隔"><a href="#圓錐效應致模態間隔" class="headerlink" title="圓錐效應致模態間隔"></a>圓錐效應致模態間隔</h3><p><img src="/images/cone-effect.png" alt="Cone effect"></p><h4 id="嵌入的狹窄圓錐"><a href="#嵌入的狹窄圓錐" class="headerlink" title="嵌入的狹窄圓錐"></a>嵌入的狹窄圓錐</h4><p>如上圖(a)：</p><ul><li>平均/最小相似度均爲正數</li><li>隨機權重的模型也存在該效應，甚於預訓練過的</li><li>隨機噪聲（視覺：正態分佈/文本：隨機數）+隨機權重的模型也存在該效應</li></ul><p><strong>結論</strong>：圓錐效應反映深度模型普遍的歸納偏置；先前工作的解釋稱「不平衡的詞頻分佈使優化有偏置」，不夠準確。</p><h4 id="非線性激活函數的影響"><a href="#非線性激活函數的影響" class="headerlink" title="非線性激活函數的影響"></a>非線性激活函數的影響</h4><p>如上圖(b)，考察各種MLP，無激活函數MLP隨層數增加圓錐效應不明顯，反之有激活函數的多層MLP餘弦相似度迅速上升（ReLU輸出非負，故餘弦相似度上升最快）。</p><p><strong>結論</strong>：非線性激活函數對圓錐效應有重要影響。</p><p><em>層歸一化的影響待探究。</em></p><h4 id="不同隨機初始化"><a href="#不同隨機初始化" class="headerlink" title="不同隨機初始化"></a>不同隨機初始化</h4><p>如上圖(c)。</p><p><strong>結論</strong>：不同隨機初始化產生不同的圓錐。</p><h3 id="理論分析"><a href="#理論分析" class="headerlink" title="理論分析"></a>理論分析</h3><p>對上述現象的數學證明（略）</p><ul><li>餘弦相似度隨層數加深逐漸增加</li><li>中間層輸出的方差主要源於模型的不同隨機初始化</li></ul><h3 id="CLIP一類對比學習保留模態間隔"><a href="#CLIP一類對比學習保留模態間隔" class="headerlink" title="CLIP一類對比學習保留模態間隔"></a>CLIP一類對比學習保留模態間隔</h3><p>分析CLIP的InfoNCE中溫度$\tau$的影響。</p><p>定義<strong>模態間隔</strong>爲兩個模態嵌入表示中心點的歐氏距離</p><p>$$\vec{\Delta}_{\mathrm{gap}}=\frac{1}{n}\sum_{i=1}^n\mathbf{x}_i - \frac{1}{n}\sum_{i=1}^n\mathbf{y}_i$$</p><p>於是可調整根據間隔方向調整模態差距</p><p>$$<br>\begin{array} \\<br>\mathbf{x}_i^\mathrm{shift}=\mathrm{Normalize}(\mathbf{x}_i - \lambda \vec{\Delta}_{\mathrm{gap}}) \\<br>\mathbf{y}_i^\mathrm{shift}=\mathrm{Normalize}(\mathbf{y}_i + \lambda \vec{\Delta}_{\mathrm{gap}})<br>\end{array}<br>$$</p><p>CLIP模型學習到的溫度$\tau$=0.01，在MSCOCO驗證集上計算得到的間隔$||\vec{\Delta}_{\mathrm{gap}}||$=0.82。</p><p>由下圖可知，$||\vec{\Delta}_{\mathrm{gap}}||$=0.82時在驗證集得到的損失最小；溫度爲1時，傾向於縮小間隔。</p><p><img src="/images/cl-preserves-gap.png" alt="Contrastive learning preserves modality gap"></p><p>進一步微調實驗證實，較大的溫度（$\tau\in \{ \frac{1}{10}, 1 \}$）縮小了間隔。</p><p><img src="/images/fine-tune-temperature.png" alt="Reduce the gap by fine-tuning with high temperature"></p><p>3維球坐標上存在部分不匹配圖文對（如圖中$T_1$和$I_0$更近）的模擬實驗也證明：設定較小溫度時，只有在球坐標上保持一定的角度差距，纔能使損失最低；設定較大的溫度則無此現象。額外的模擬實驗說明，如果圖文完全匹配則無此現象。</p><p align="center">  <img src="/images/mismatch-simulation.png" alt="with and without mismatched data" width="50%" height="50%"></p><h4 id="初始化和優化的共同作用"><a href="#初始化和優化的共同作用" class="headerlink" title="初始化和優化的共同作用"></a>初始化和優化的共同作用</h4><p>另有CLIP訓練實驗，一採用隨機初始化，模態間隔 $||\vec{\Delta}_{\mathrm{gap}}|| = 1.1891 \pm 0.0017$；一將文本模態通過線性變換拉近至$||\vec{\Delta}_{\mathrm{gap}}|| = 0.0388 ± 0.0351$。訓練後：1.1891±0.0017變1.2991±0.0389，0.0388±0.0351變0.7457±0.0633。</p><p><strong>結論</strong>：初始化和優化共同導致模態間隔。即使初始化幾乎無間隔，對比學習損失函數的優化仍然造成間隔，儘管間隔較小。</p><h4 id="實驗-1"><a href="#實驗-1" class="headerlink" title="實驗"></a>實驗</h4><p><img src="/images/modal-gap-exp.png" alt="Experiments"></p><p>適當調整模態間隔，有助於調整模型zero-shot性能，可減少模型在人臉識別任務上的種族偏見。<em>間隔太小：犯罪相關偏見；間隔太大：非人類偏見。</em></p>]]></content>
    
    
    <categories>
      
      <category>NLP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>多模態</tag>
      
      <tag>NLP</tag>
      
      <tag>CV</tag>
      
      <tag>對比學習</tag>
      
      <tag>可解釋性</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于Transformer的自然语言生成模型</title>
    <link href="/nlp/TransformerBasedNLGModels/"/>
    <url>/nlp/TransformerBasedNLGModels/</url>
    
    <content type="html"><![CDATA[<p>一些 Transformer 学习笔记。</p><span id="more"></span><p>以下说法多为特例，勿视为通用情况。</p><h1>多头注意力机制</h1><ul><li>查询序列：${\pmb Q}=[{\pmb q}_1;{\pmb q}_2;…;{\pmb q}_N]^\top \in {\Bbb R}_{N\times d}$，用于检索上下文信息。</li><li>键值序列：查询序列关注的对象，实际包含两个序列，构成键值对$({\pmb K},{\pmb V})$。<ul><li>键矩阵${\pmb K}=[{\pmb k}_1;{\pmb k}_2;…;{\pmb k}_M]^\top \in {\Bbb R}_{M\times d}$</li><li>值矩阵${\pmb V}=[{\pmb v}_1;{\pmb v}_2;…;{\pmb v}_M]^\top \in {\Bbb R}_{M\times d}$</li></ul></li></ul><p><strong>点乘注意力</strong>（Dot-Product Attention）：$\beta_{i,j}={\pmb q}_i\cdot{\pmb k}_j$</p><p>注意力分数归一化：$\alpha_{i,j}={\rm softmax}({\pmb q}_i,{\pmb k}_j)$</p><p>第$i$个位置的上下文向量：${\rm Dot\_Attention}({\pmb q}_i,{\pmb K},{\pmb V})=\sum_{j=1}^M \alpha_{i,j} {\pmb v}_j$</p><p>综上：$${\rm Attention}({\pmb Q},{\pmb K},{\pmb V})={\rm softmax}({\pmb Q}{\pmb K}^\top){\pmb V} \in {\Bbb R}_{N\times d}$$</p><p><strong>缩放点乘注意力</strong>（Scaled Dot-Product Attention）：随着隐向量维度$d$增大，${\pmb q}_i\cdot {\pmb k}_j$的方差也逐渐增大：</p><blockquote><p>设${\pmb x}, {\pmb y}$为$n$维独立向量且${\rm var}({\pmb x})={\rm var}({\pmb y})=1$，${\rm E}({\pmb x})={\rm E}({\pmb y})=0$，则${\pmb x}\cdot{\pmb y}=\sum_{i=1}^n x_i y_i$的均值为0，方差为$n$。</p></blockquote><p>为了解决归一化后注意力分布尖锐导致梯度消失的问题，提出缩放点乘注意力：$${\rm Attention}({\pmb Q},{\pmb K},{\pmb V})={\rm softmax}( \frac{ {\pmb Q}{\pmb K}^\top}{\sqrt{d}} ){\pmb V}$$</p><p><strong>多头注意力</strong>（Multi-Head Attention）：促使注意力能关注序列不同位置。将${\pmb Q},{\pmb K},{\pmb V}$通过$h$组映射矩阵${\pmb W}_i^q,{\pmb W}_i^k,{\pmb W}_i^v \in {\Bbb R}^{d\times d/h}$映射到$h$个子空间，进行注意力运算，再拼接，并通过输出映射矩阵${\pmb W}^O\in {\Bbb {R}}^{d\times d}$映射回原始空间${\Bbb{R}}^{N\times d}$：</p><p>$$<br>\begin{array}<br>\\<br>{\pmb H}_i={\rm Attention}({\pmb Q}{\pmb W}_i^q,{\pmb K}{\pmb W}_i^k,{\pmb V}{\pmb W}_i^v)\\<br>{\rm MHA}({\pmb Q},{\pmb K},{\pmb V})=({\pmb H}_1\oplus{\pmb H}_2\oplus…\oplus{\pmb H}_h){\pmb W}^O<br>\end{array}<br>$$</p><p><img src="/images/ScaledDotProductAttention_MultiHeadAttention.png" alt="两种注意力"></p><h1>Transformer基本单元</h1><p>Transformer基本单元主要由两部分构成：</p><ul><li>第一部分由多头自注意力机制、残差连接与层归一化组成。</li><li>第二部分由前馈全连接网络、残差连接与层归一化组成。</li></ul><p>形式化表示为：</p><p>$$\begin{array}<br>\\<br>{\pmb H}_{(1)}^l = {\rm{LayerNorm}}({\rm{MHA}}({\pmb H}^l,{\pmb H}^l,{\pmb H}^l)+{\pmb H}^l)\\<br>{\pmb H}^{l+1} = {\rm{LayerNorm}}({\rm{FeedForward}}({\pmb H}_{(1)}^l)+{\pmb H}_{(1)}^l)<br>\end{array}$$</p><p>下面具体介绍各个模块。</p><ul><li><strong>多头自注意力</strong>（Multi-Head Self Attention）机制：输入序列${\pmb{H}}$同时作为${\pmb{K}}$, ${\pmb{Q}}$, ${\pmb{V}}$，通过计算序列对其自身各个位置的注意力分布来建模序列的依赖关系，从而获得输入序列的上下文表示。</li><li><strong>残差连接</strong>（Residual Connection）：一般附加在另一模块之上，将该模块的输入${\pmb x}$与输出$f({\pmb {x}})$相加。此方法能够在模型层数较多时，将模型底层信息转递到模型的高层，一定程度上缓解梯度消失的问题。</li><li><strong>层归一化</strong>（Layer Normalization）：对输入的向量进行归一化操作。设输入向量${\pmb x}=[x_1,x_2,…,x_d]$的维度为$d$，利用其均值$\mu$和方差$\sigma$作归一化，使得特征的方差在不同深度的模块中保持一定的范围，让梯度更加稳定：$${\rm {LayerNorm}}({\pmb x})=\frac{\pmb g}{\sigma}\otimes({\pmb x}-\mu)+{\pmb b}$$其中${\pmb g}$和${\pmb b}$为可学习的权重向量。</li><li><strong>前馈网络</strong>（Feed-Forward Network）：$${\rm{FeedForward}}({\pmb x})={\rm ReLU}(x{\pmb W}_1+b_1){\pmb W}_2+b_2$$</li></ul><h1>Transformer结构</h1><p align="center">  <img src="/images/Transformer.jpg" width="300px" alt="Transformer结构"></p><h1>参考资料</h1><p>[1] 黄民烈等. 《现代自然语言生成》. 电子工业出版社, 2021.<br>[2] <a href="http://nlp.seas.harvard.edu/2018/04/03/attention.html">The Annotated Transformer</a></p>]]></content>
    
    
    <categories>
      
      <category>NLP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NLP</tag>
      
      <tag>Transformer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MathJax数学符号支持</title>
    <link href="/tex/MathSupport/"/>
    <url>/tex/MathSupport/</url>
    
    <content type="html"><![CDATA[<p>（不定時擴充）本篇主要介绍如何利用MathJax输入数学公式，并额外补充一些LaTeX和Office公式的输入方法。此外还会涉及MathJax解析与Hexo的Markdown解析冲突时的解决办法。</p><span id="more"></span><p>在Markdown中：</p><ul><li>行内插入公式：<code>$ 公式 $</code></li><li>独立公式：<code>$$ 公式 $$</code></li></ul><h1 id="上下标"><a href="#上下标" class="headerlink" title="上下标"></a>上下标</h1><ul><li><code>^</code>上标，<code>_</code>下标</li><li>内容多于一个字符，则需用<code>&#123;&#125;</code>包括</li><li>可嵌套使用（Hexo中需注意多个<code>_</code>带来的<a href="#MathJax%E8%A7%A3%E6%9E%90%E4%B8%8EHexo%E5%86%B2%E7%AA%81%E8%BD%AC%E4%B9%89">转义</a>问题）</li></ul><h1 id="基础数学"><a href="#基础数学" class="headerlink" title="基础数学"></a>基础数学</h1><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center"><code>\times</code> <code>\div</code></td><td align="center">$\times\div$</td><td align="center"><code>\pm</code> <code>\mp</code></td><td align="center">$\pm\mp$</td><td align="center"><code>\ne</code> <code>\neq</code> <code>\le</code> <code>\leq</code> <code>\ge</code> <code>\geq</code></td><td align="center">$\ne\neq$ $\le\leq$ $\ge\geq$</td><td align="center"><code>\approx</code></td><td align="center">$\approx$</td></tr><tr><td align="center"><code>\in</code> <code>\notin</code></td><td align="center">$\in\notin$</td><td align="center"><code>\subset</code> <code>\subseteq</code> <code>\subseteqq</code> <code>\subsetneq</code> <code>\subsetneqq</code></td><td align="center">$\subset$ $\subseteq\subseteqq$ $\subsetneq\subsetneqq$</td><td align="center"><code>\cup</code> <code>\cap</code></td><td align="center">$\cup\cap$</td><td align="center"><code>\infty</code></td><td align="center">$\infty$</td></tr></tbody></table><h1 id="括号和分隔符"><a href="#括号和分隔符" class="headerlink" title="括号和分隔符"></a>括号和分隔符</h1><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center"><code>$\langle a\rangle$</code></td><td align="center">$\langle a\rangle$</td><td align="center"><code>$\lfloor a\rfloor$</code></td><td align="center">$\lfloor a\rfloor$</td></tr><tr><td align="center"><code>$\lceil a\rceil$</code></td><td align="center">$\lceil a\rceil$</td><td align="center"><code>$\lbrace a\rbrace$</code></td><td align="center">$\lbrace a\rbrace$</td></tr></tbody></table><h1 id="Accents-amp-special-characters"><a href="#Accents-amp-special-characters" class="headerlink" title="Accents &amp; special characters"></a>Accents &amp; special characters</h1><p>MathJax不一定支持某些简写形式。</p><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th><th align="center">输入</th><th align="center">显示</th></tr></thead><tbody><tr><td align="center"><code>\acute&#123;x&#125;</code> <code>\&#39;&#123;x&#125;</code></td><td align="center">$\acute{x}$</td><td align="center"><code>\grave&#123;x&#125;</code> \`{x}</td><td align="center">$\grave{x}$</td><td align="center"><code>\hat&#123;x&#125;</code> <code>\^&#123;x&#125;</code></td><td align="center">$\hat{x}$</td><td align="center"><code>\check&#123;x&#125;</code> <code>\v&#123;x&#125;</code></td><td align="center">$\check{x}$</td></tr><tr><td align="center"><code>\breve&#123;x&#125;</code></td><td align="center">$\breve{x}$</td><td align="center"><code>\tilde&#123;x&#125;</code></td><td align="center">$\tilde{x}$</td><td align="center"><code>\vec&#123;x&#125;</code></td><td align="center">$\vec{x}$</td><td align="center"><code>\bar&#123;x&#125;</code> <code>\=&#123;x&#125;</code></td><td align="center">$\bar{x}$</td></tr><tr><td align="center"><code>\dot&#123;x&#125;</code> <code>\.&#123;x&#125;</code></td><td align="center">$\dot{x}$</td><td align="center"><code>\ddot&#123;x&#125;</code> <code>\&#39;&#39;&#123;x&#125;</code></td><td align="center">$\ddot{x}$</td><td align="center"><code>\overline&#123;x&#125;</code></td><td align="center">$\overline{x}$</td><td align="center"><code>\underline&#123;x&#125;</code></td><td align="center">$\underline{x}$</td></tr></tbody></table><h1 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h1><p><code>&#123;\字体 &#123;字符&#125;&#125;</code>或<code>\math字体&#123;字符&#125;</code>等。</p><table><thead><tr><th align="center">输入</th><th align="center">显示</th><th align="center">说明</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center"><code>\rm</code><br><code>\mathrm&#123;&#125;</code><br><code>\text&#123;&#125;</code></td><td align="center">${\rm {abcdABCD}}$<br>$\mathrm{abcdABCD}$<br>$\text{abcdABCD}$</td><td align="center">罗马体</td><td align="center"></td></tr><tr><td align="center"><code>\it</code><br><code>\mathit&#123;&#125;</code></td><td align="center">${\it {abcdABCD}}$<br>$\mathit{abcdABCD}$</td><td align="center">意大利体</td><td align="center"></td></tr><tr><td align="center"><code>\mit</code></td><td align="center">${\mit {abcdABCD}}$<br></td><td align="center">数学斜体</td><td align="center"></td></tr><tr><td align="center"><code>\Bbb</code><br><code>\mathbb&#123;&#125;</code></td><td align="center">${\Bbb {abcdABCD}}$<br>$\mathbb{abcdABCD}$</td><td align="center">黑板粗体</td><td align="center">Office：<code>\double字母</code></td></tr><tr><td align="center"><code>\bf</code><br><code>\mathbf&#123;&#125;</code></td><td align="center">${\bf {abcdABCD}}$<br>$\mathbf{abcdABCD}$</td><td align="center">粗体</td><td align="center"></td></tr><tr><td align="center"><code>\boldsymbol</code></td><td align="center">${\boldsymbol {abcdABCD}}$</td><td align="center">黑体</td><td align="center"></td></tr><tr><td align="center"><code>\pmb</code></td><td align="center">${\pmb {abcdABCD}}$</td><td align="center">粗体（叠字符）</td><td align="center"></td></tr><tr><td align="center"><code>\cal</code><br><code>\mathcal&#123;&#125;</code></td><td align="center">${\cal {abcdABCD}}$<br>$\mathcal{abcdABCD}$</td><td align="center">花体</td><td align="center">Office：<code>\script字母</code></td></tr><tr><td align="center"><code>\scr</code><br><code>\mathscr&#123;&#125;</code></td><td align="center">${\scr {abcdABCD}}$<br>$\mathscr{abcdABCD}$</td><td align="center">手写体</td><td align="center"><code>\scr</code>字距稍宽</td></tr><tr><td align="center"><code>\sf</code><br><code>\mathsf&#123;&#125;</code></td><td align="center">${\sf {abcdABCD}}$<br>$\mathsf{abcdABCD}$</td><td align="center">等线体</td><td align="center"></td></tr><tr><td align="center"><code>\tt</code><br><code>\mathtt&#123;&#125;</code></td><td align="center">${\tt {abcdABCD}}$<br>$\mathtt{abcdABCD}$</td><td align="center">打字机体</td><td align="center"></td></tr><tr><td align="center"><code>\frak</code><br><code>\mathfrak&#123;&#125;</code></td><td align="center">${\frak {abcdABCD}}$<br>$\mathfrak{abcdABCD}$</td><td align="center">旧德式字体</td><td align="center">Office：<code>\fraktur字母</code></td></tr></tbody></table><h1 id="MathJax解析与Hexo冲突转义"><a href="#MathJax解析与Hexo冲突转义" class="headerlink" title="MathJax解析与Hexo冲突转义"></a>MathJax解析与Hexo冲突转义</h1><blockquote><p>Hexo中如需使用公式，需在Markdown开头需附上<code>mathjax:true</code>（如<a href="https://github.com/theme-next/hexo-theme-next">NexT主题</a>）或<code>math:true</code>（如<a href="https://github.com/fluid-dev/hexo-theme-fluid">Fuild主题</a>）。</p></blockquote><ul><li>一行MathJax公式中出现多个<code>_</code><ul><li><code>$&#123;\rm a&#125;_b&#123;\rm a&#125;_b$</code>: ${\rm a}<em>{b}{\rm a}</em>{b}$</li><li><code>$&#123;\rm a&#125;\_b&#123;\rm a&#125;\_b$</code>✅: ${\rm a}_{b}{\rm a}_{b}$</li></ul></li><li>欲显示<code>_</code><ul><li><code>$Pax\_Romana$</code>: $Pax_Romana$</li><li><code>$Pax\\\_Romana$</code>✅: $Pax\_Romana$</li></ul></li><li>欲换行：<ul><li><code>$a\\b\\c$</code>：$a\b\c$</li><li><code>$a\\\\b\\\\c$</code>：$a\\b\\c$</li><li><code>$\begin&#123;array&#125; a\\\\b\\\\c \end&#123;array&#125;$</code>：$\begin{array} a\\b\\c \end{array}$</li><li><code>$\begin&#123;array&#125; \\\\a\\\\b\\\\c \end&#123;array&#125;$</code>✅：$\begin{array} \\a\\b\\c \end{array}$</li></ul></li></ul><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><ul><li><a href="https://www.jianshu.com/p/db7ed194e023">【Markdown】Markdown下的六种字体命令 - 简书 (jianshu.com)</a></li><li><a href="https://blog.csdn.net/Annie_0321/article/details/115764983">Markdown编辑器花体字母问题_Annie_0321的博客-CSDN博客</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>TeX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MathJax</tag>
      
      <tag>TeX</tag>
      
      <tag>LaTeX</tag>
      
      <tag>Office</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于RNN的语言生成模型</title>
    <link href="/nlp/RNNBasedNLGModels/"/>
    <url>/nlp/RNNBasedNLGModels/</url>
    
    <content type="html"><![CDATA[<p>本篇介绍RNN的基本原理及其在NLP的应用。</p><span id="more"></span><h1 id="RNN"><a href="#RNN" class="headerlink" title="RNN"></a>RNN</h1><p>循环神经网络（Recurrent Neural Network, RNN）为带层间反馈的神经网络模型。其算法框架包含<strong>输入层</strong>、<strong>隐藏层</strong>和<strong>输出层</strong>。</p><h2 id="基本原理（前馈计算）"><a href="#基本原理（前馈计算）" class="headerlink" title="基本原理（前馈计算）"></a>基本原理（前馈计算）</h2><p><strong>输入层</strong>：</p><p>给定一个词向量序列${\pmb X} = ({\pmb e}(w_1),{\pmb e}(w_2),…,{\pmb e}(w_n))$，其中${\pmb e}(w_i)\in{\Bbb R}^k$为单词$w_i$的向量表示，$k$为向量维度。</p><p><strong>隐藏层</strong>：</p><p>RNN隐状态${\pmb h}_t \in {\Bbb R}_d$（$d$为隐状态向量维度）的更新：</p><p>$$<br>{\pmb h}_t=<br>\begin{cases}<br>\begin{array}{ll}<br>0, &amp; t=0 \\ f_r({\pmb h}_{t-1}, {\pmb e}(w_t) ), &amp; t\ge 1<br>\end{array}<br>\end{cases}<br>$$</p><p>其中$f_r$为RNN隐藏层中的循环函数。RNN的记忆能力来源于RNN隐藏层每一时刻的输入包括上一时刻隐藏层的输出${\pmb h}_{t-1}$。</p><p>RNN中最简单的循环函数为</p><p>$$f_r({\pmb h}_{t-1},{\pmb e}(w_t))=f({\pmb Uh}_{t-1} + {\pmb We}(w_t) + {\pmb b} )$$</p><p>其中$f$为激活函数（如${\rm tanh}$或ReLU函数），${\pmb U}\in {\Bbb R}^{d\times d}$和${\pmb W}\in {\Bbb R}^{d\times k}$为可训练的网络权重，${\pmb b}\in{\Bbb R}^d$为偏置向量。</p><p><strong>输出层</strong>：</p><p>接收隐藏层的输出${\pmb h}_t$作为输入，根据输出函数$g_r$产生$t$时刻的输出${\pmb y}_t=g_r({\pmb h}_t)$，一般为类别集合或词表上的概率分布。</p><p>以上过程，循环的时间步数可变，但$f_r$和$g_r$的网络参数不随时间变化（在不同时刻使用同一套参数计算隐状态和输出）。</p><h2 id="训练算法（BPTT）"><a href="#训练算法（BPTT）" class="headerlink" title="训练算法（BPTT）"></a>训练算法（BPTT）</h2><p>基于时间的反向传播（Back Propagation Through Time,g，BPTT）：</p><ul><li>RNN输入的每个训练样本为一个时间序列，每一时刻都可能有输出，进而计算模型输出相对于真实标签的误差。</li><li>每一时刻的隐状态受前一时刻隐状态影响，故RNN的训练需要从最后一个时刻开始将误差的梯度回传</li></ul><p>RNN在时间步$t$的损失函数$J_t$即RNN的输出与目标输出之间的误差，是${\pmb y}_t$的函数，可用$J_t={\cal L}({\pmb y}_t)$表示。</p><p>RNN在所有时间步上的整体损失函数$J=\sum_{i=1}^T J_t$。</p><p>可得（推导过程略）：</p><p>$$\frac{\partial J}{\partial {\pmb U}}=\sum_{t=1}^T \sum_{k=1}^t \frac{\partial J_t}{\partial {\pmb y}_t}\frac{\partial {\pmb y}_t}{\partial {\pmb h}_t} \left( \prod_{i=k+1}^t {\rm diag}[f’( {\pmb h}_{i-1}, {\pmb e}(w_i) )]{\pmb U} \right) \frac{\partial {\pmb h}_k}{\partial{\pmb U}}$$</p><p>定义$\gamma_i=|| {\rm diag}[f’( {\pmb h}_{i-1}, {\pmb e}(w_i) )]{\pmb U} ||_2$：</p><ul><li>$\gamma_i&gt;1$：$\left[ \lim_{t-k\rightarrow\infty} \prod_{i=k+1}^t {\rm diag}[f’( {\pmb h}_{i-1}, {\pmb e}(w_i) )]{\pmb U} \right] \rightarrow \infty$，容易出现梯度爆炸；</li><li>$\gamma_i&lt;1$：$\left[ \lim_{t-k\rightarrow\infty} \prod_{i=k+1}^t {\rm diag}[f’( {\pmb h}_{i-1}, {\pmb e}(w_i) )]{\pmb U} \right] \rightarrow 0$，容易出现梯度消失。</li></ul><h2 id="LSTM"><a href="#LSTM" class="headerlink" title="LSTM"></a>LSTM</h2><p>长短期记忆（Long Short-term Memory, LSTM）神经网络可进一步改善RNN的记忆能力，并减轻梯度爆炸和梯度消失问题。</p><p>对RNN的主要修改：将循环函数$f_r$从全连接改进为使用三个控制门的记忆单元。</p><p>控制门：对于向量${\pmb y}$，希望通过向量${\pmb x}$来控制${\pmb y}$所保留的信息。</p><p>$${\pmb o} = \sigma({\pmb x})\otimes{\pmb y}$$</p><ul><li>$\otimes$：逐元素的向量乘法</li><li>$\sigma({\pmb x})$：sigmoid函数</li></ul><p>LSTM的循环函数可写为：</p><p>$$<br>\begin{array}{c}<br>{\pmb h}_t = {\pmb o}_t \otimes {\rm tanh}({\pmb c}_t) \\ {\pmb c}_t = {\pmb f}_t \otimes {\pmb c}_{t-1} + {\pmb i}_t \otimes {\hat {\pmb c}}_t \\ {\hat {\pmb c}}_t = {\rm tanh}({\pmb W}_c{\pmb e}(w_t)+{\pmb U}_c{\pmb h}_{t-1}+{\pmb b}_c)<br>\end{array}<br>$$</p><ul><li>${\pmb c}_t$：$t$时刻RNN的单元状态（Cell State），含序列历史信息。</li><li>${\pmb i}_t$, ${\pmb o}_t$, ${\pmb f}_t$：分别称为输入门、输出门、遗忘门。</li></ul><p>$$<br>\begin{array}{c}<br>{\pmb i}_t = \sigma({\pmb W}_i {\pmb e} (w_t) + {\pmb U}_i {\pmb h}_{t-1} + {\pmb b}_i) \\ {\pmb o}_t = \sigma({\pmb W}_o {\pmb e} (w_t) + {\pmb U}_o {\pmb h}_{t-1} + {\pmb b}_o)  \\ {\pmb f}_t = \sigma({\pmb W}_f {\pmb e} (w_t) + {\pmb U}_f {\pmb h}_{t-1} + {\pmb b}_f)<br>\end{array}<br>$$</p><p>LSTM在每个时间步上对当前输入和记忆的历史信息进行重新组合，有效减轻梯度爆炸/消失等问题。关键在于：</p><ul><li>更复杂的循环函数：使得梯度在回传过程中经历更多导数较小的激活函数，降低梯度爆炸发生的可能性。</li><li>遗忘门的使用：遗忘门中的偏置项${\pmb b}_f$通常在初始化时会设置得很大，使得${\pmb f}_t$接近1，即单元状态${\pmb c}_t$将尽量保留${\pmb c}_{t-1}$中的信息。<ul><li>训练时${\pmb c}_t$上的梯度通过${\pmb c}_{t-1}$一直回传，不易消失。</li><li>但${\pmb f}_t$中的元素可能会逐渐减小，故遗忘门无法完全避免梯度消失。</li><li>去掉遗忘门（相当于${\pmb f}_t$为1）可完全避免梯度消失，但有遗忘门的LSTM神经网络实际效果往往会更好。</li></ul></li></ul><p>LSTM效果优于标准RNN，但循环函数复杂，学习和推理能力较低，在大规模神经网络结构中时间性能较差。</p><h2 id="GRU"><a href="#GRU" class="headerlink" title="GRU"></a>GRU</h2><p>门控循环单元（Gated Recurrent Units, GRU）：简化LSTM神经网络的循环函数，达到相似的效果和时空效率。</p><p>$$<br>\begin{array}{c}<br>{\pmb h}_t = ( 1 - {\pmb z}_t ) \otimes {\pmb h}_{t-1} + {\pmb z}_t \otimes {\hat {\pmb c}}_t \\ {\hat {\pmb h}}_t = {\rm tanh}({\pmb W}_c{\pmb e}(w_t)+{\pmb U}_c( {\pmb r}_t \otimes {\pmb h}_{t-1} ) )<br>\end{array}<br>$$</p><ul><li>${\pmb r}_t$, ${\pmb z}_t$：分别称为重置门（Reset Gate）、更新门（Update Gate）。</li></ul><p>$$<br>\begin{array}{c}<br>{\pmb r}_t = \sigma({\pmb W}_r {\pmb e} (w_t) + {\pmb U}_r {\pmb h}_{t-1} ) \\ {\pmb z}_t = \sigma({\pmb W}_z {\pmb e} (w_t) + {\pmb U}_z {\pmb h}_{t-1} )<br>\end{array}<br>$$</p><h1 id="RNN的架构设计"><a href="#RNN的架构设计" class="headerlink" title="RNN的架构设计"></a>RNN的架构设计</h1><p>RNN及其变种对输入的较长序列，前向传播时难以有效记忆历史信息，反向传播时也很难沿时间轴进行有效梯度回传。</p><p>设计各种网络架构，一定程度上可解决上述问题。</p><h2 id="多层RNN"><a href="#多层RNN" class="headerlink" title="多层RNN"></a>多层RNN</h2><p>RNN隐藏层的循环函数$f_r$可以用多层全连接神经网络表示，从而得到更深的多层RNN。</p><ul><li>第一个隐藏层的输入：上一时刻的隐状态和当前的词向量</li><li>其他隐藏层的输入：上一时刻的隐状态和上一隐藏层当前时刻的隐状态</li><li>最后一个隐藏层的隐状态：预测输出</li></ul><p>多层RNN有更多的网络参数和更深的结构，能有效提高对更长时间序列的记忆能力。</p><h2 id="双向RNN"><a href="#双向RNN" class="headerlink" title="双向RNN"></a>双向RNN</h2><p>同时考虑当前位置的上下文信息，有助于更有效的序列特征表示。双向RNN的隐状态${\pmb h}_t$由两个方向编码得到的隐状态组成：</p><p>$${\pmb h}_t = {\overleftarrow {\pmb h} }_t \oplus {\overrightarrow {\pmb h} }_t $$<br>$${\overleftarrow {\pmb h} }_t =<br>\begin{cases}<br>    \begin{array}{ll}<br>        0, &amp; t=0 \\ f_r(\overleftarrow{\pmb h}_{t-1},{\pmb e}(w_t)), &amp; 1\le t\le n<br>    \end{array}<br>\end{cases}<br>$$</p><p>$${\overrightarrow {\pmb h} }_t =<br>\begin{cases}<br>    \begin{array}{ll}<br>        0, &amp; t=n+1 \\ f_r(\overrightarrow{\pmb h}_{t+1},{\pmb e}(w_t)), &amp; 1\le t\le n<br>    \end{array}<br>\end{cases}<br>$$</p><p>但目前语言生成任务多使用自回归的生成方式（生成时模型只知道已生成的前缀信息而不知道后缀信息），故双向RNN难以应用到语言生成任务中。</p><h1 id="基于RNN的语言模型"><a href="#基于RNN的语言模型" class="headerlink" title="基于RNN的语言模型"></a>基于RNN的语言模型</h1><p>RNN专为序列建模设计，能自然地作为语言模型建模语言序列。</p><p>语言模型的核心任务：确定词序列$Y=(y_1,y_2,…,y_n)$的概率$P(Y)$</p><p>自回归分解：$P(Y)=\prod_{t=1}^n P(y_t|Y_{&lt;t})$</p><p>使用RNN作为语言模型建模：</p><p>$$P(y_t|Y_{&lt;t})={\rm softmax}({\pmb W}_0 {\pmb h}_t + {\pmb b}_0)|_{y_t}$$</p><ul><li>可训练网络参数：${\pmb W}_0\in {\Bbb R}^{|{\cal V}|\times d}$, ${\pmb b}_0\in {\Bbb R}^{|{\cal V}|}$</li><li>${\pmb h}_t$：$t$时刻RNN的隐状态</li><li>$P(y_t|Y_{&lt;t})$：$t$时刻模型预测的在词表上的条件概率分布</li></ul><h2 id="模型结构"><a href="#模型结构" class="headerlink" title="模型结构"></a>模型结构</h2><p><strong>训练</strong>：教师强制（Teacher-forcing）模式</p><ul><li>最大似然估计</li><li>输入：<code>&lt;SOS&gt;</code>, $y_1$, …, $y_{n-1}$</li><li>输出：$p(y_1)$, $p(y_2|y_1)$, …, $p(y_n|y_1…y_{n-1})$</li><li>在语料集${\cal D}$上训练时的优化目标：${\pmb \theta}^* = {\rm argmax}_{ {\pmb \theta}} \sum_{k=1}^{|{\cal D}|} \sum_{t=1}^{l_k} \log P(y_t^k|Y_{&lt;t}^k;{\pmb \theta})$<ul><li>${\pmb \theta}$：RNN所有可训练参数</li><li>$y_1^ky_2^k…y_{l_k}^k$：${\cal D}$中的第$k$个文本</li></ul></li></ul><p><strong>测试（生成）</strong>：自由运行（Free-run）模式</p><ul><li>读入自己生成的前缀$\hat{Y}_{&lt;t}$再预测下一个词$\hat{y}_t$的分布，通过搜索或采样得到$\hat{y}|_t$，并送回模型输入端进行下一个词的生成，直到遇到<code>&lt;EOS&gt;</code>为止。</li></ul><h2 id="主要问题"><a href="#主要问题" class="headerlink" title="主要问题"></a>主要问题</h2><p>softmax预测整个词表的概率分布时，需计算归一化因子$\sum_{y\in{\cal V}}(\epsilon(y))$，其中$\epsilon(y)$为softmax之前的多层感知器（MLP）输出（可参考<a href="#%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84-1">下一节</a>）中单词$y$对应的结果，即$\epsilon(y_t)=({\pmb W}_0 {\pmb h}_t + {\pmb b}_0)|_{y_t}$。此过程时间复杂度为$O(|{\cal V}|)$，当词表较大时计算过程较为耗时。于是有一些解决方法。</p><p><strong>层次化softmax</strong>：将词表所有此表示在一棵二叉树上，将归一化因子的计算转换为一系列二分类问题，时间复杂度为$O(\log|{\cal V}|)$。</p><p><strong>重要性采样</strong>（Importance Sampling）<strong>近似</strong>：训练时不在整个词表作概率计算，而是通过随机或启发式采样，从词表采样一小部分进行概率估计和梯度计算。</p><p>归一化因子用重要性近似来估计：</p><p>$$\sum_{y\in{\cal V}}\exp(\epsilon(y))\approx\frac{1}{N}\sum_{y’\in{\cal J}} \frac{\exp(\epsilon(y’))}{Q(y’|Y_{&lt;t})}$$</p><ul><li>集合${\cal J}$含$N$个从预定义的便于采样的提议分布（Proposal distribution）$Q(y’|Y_{&lt;t})$中采样得到的词。</li><li>实际使用时可任意选择提议分布$Q(y’|Y_{&lt;t})$（一般设为均匀分布）和采样个数$N$。</li></ul><p>负对数似然的梯度（推导过程略，留作练习）：</p><p>$$-\frac{\partial \log P(y_t|Y_{&lt;t})}{\partial {\pmb \theta}}\approx-\frac{\partial \epsilon(y_t)}{\partial {\pmb \theta}}+\frac{ \sum_{y’\in{\cal J}} \frac{\partial \epsilon(y’)}{\partial {\pmb \theta}} \frac{\exp(\epsilon(y’))}{Q(y’|Y_{&lt;t})} }{ \sum_{y’\in{\cal J}} \frac{\exp(\epsilon(y’))}{Q(y’|Y_{&lt;t})} }$$</p><ul><li>优点：时间复杂度降至$O(N)$</li><li>缺点：每一步训练只调整与$y_t$和$\cal J$相关的一部分参数，使得整体估计存在方差，可能导致训练不稳定</li><li>改进：<ul><li>调整提议分布</li><li>扩大采样个数</li></ul></li></ul><h2 id="模型改进"><a href="#模型改进" class="headerlink" title="模型改进"></a>模型改进</h2><p><strong>缓存</strong>（Caching）<strong>机制</strong>：文本中刚出现过的词很可能在后面的句子中再次出现。</p><p>$$P(y_t|Y_{&lt;t})=\lambda P_{\mathrm{LM}}(y_t|Y_{&lt;t})+(1-\lambda)P_{\mathrm{cache}}(y_t|Y_{&lt;t})$$</p><p>$$P_{\mathrm{cache}}(y_t|Y_{&lt;t})=<br>\begin{cases}<br> \begin{array}{ll}<br>    \frac{\#(y)}{t-1}, &amp; y\in Y_{&lt;t} \\ 0, &amp; 其他<br>  \end{array}<br>\end{cases}<br>$$</p><ul><li>$\#(y)$：单词$y$在缓存中出现的次数。</li></ul><p><strong>字符感知模型</strong>（Character-aware Models）：将单词中字符级的信息通过层次RNN等方式与单词级的信息相结合，细粒度语言学特征，缓解低频词问题。</p><p><strong>因子模型</strong>（Factored Models）：将语言的形态、语法、词性、词袋等多种因子的信息融入语言模型，帮助模型学习单词的连续表示，但需人工标注及在不同数据或下游任务上实验确定融入哪些因子信息。</p><h1 id="Seq2Seq"><a href="#Seq2Seq" class="headerlink" title="Seq2Seq"></a>Seq2Seq</h1><p>序列到序列（Sequence to Sequence, Seq2seq）模型</p><h2 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h2><p>给定输入语句$X=(x_1,x_2,…,x_m)$，希望模型输出目标语句$Y=(y_1,y_2,..,y_n)$。通过编码$X$和解码$Y$来建模条件概率分布$P(Y|X)$。</p><p>$$P(Y|X)=\prod_{t=1}^n P(y_t|Y_{&lt;t},X)$$</p><h2 id="模型结构-1"><a href="#模型结构-1" class="headerlink" title="模型结构"></a>模型结构</h2><p>一般采用两个RNN分别作为编码器和解码器。在每个时间步$t$，编解码状态都由RNN隐状态表示：</p><p>$${\pmb h}_t=\mathrm{RNN} ( {\pmb h}_{t-1}, {\pmb e}(x_t) )$$</p><p>$${\pmb s}_t=\mathrm{RNN} ( {\pmb s}_{t-1}, {\pmb e}(y_{t-1}), {\pmb h}_m )$$</p><p>$$P(y_t|Y_{&lt;t},X)=\mathrm{softmax} ( \mathrm{MLP} ( {\pmb s}_t ) ) |_{y_t}$$</p><h2 id="Attention"><a href="#Attention" class="headerlink" title="Attention"></a>Attention</h2><p>使用Seq2Seq模型生成文本时，$X$中越靠后的词对解码器生成文本的影响越大，而靠前的词容易被忽略。<br>原因：最终编码状态${\pmb h}_m$更容易记住靠后的词的信息。</p><p>注意力机制（Attention mechanism）的提出正是为了解决这一问题。解码器在解码时的每一步都会评价$X$中每个词对当前词的重要性，从而使解码器在预测每个词时能动态地关注到$X$的不同部分。</p><p>根据Bahdanau等提出的注意力机制：</p><p>计算时间步$t$的解码状态${\pmb s}_t$时，输入${\pmb s}_{t-1}$和上一步解码生成的词$y_{t-1}$，同时考虑注意力机制基于编码器的$m$个编码状态计算出的上下文向量${\pmb c}_t$。</p><p>$${\pmb s}_t=\mathrm{RNN} ( {\pmb s}_{t-1}, {\pmb e} ( y_{t-1}, {\pmb c}_t ) )$$</p><p>其中${\pmb c}_t$为上下文向量，是对所有编码隐状态$\{ {\pmb h}_1,…,{\pmb h}_m \}$的动态加权和：</p><p>$${\pmb c}_t=\sum_{i=1}^{m}\alpha_{it}{\pmb h}_i$$</p><p>$$\alpha_{it}=\frac{ \exp (e_{it}) }{ \sum_{k=1}^m \exp (e_{kt}) }$$</p><p>$$e_{it}={\pmb V}_a\cdot \tanh ( {\pmb W}_a {\pmb s}_{t-1} + {\pmb U}_a {\pmb h}_i ) $$</p><ul><li>可训练参数：${\pmb V}_a \in {\Bbb R}^d$, ${\pmb W}_a \in {\Bbb R}^{d\times d}$, ${\pmb U}_a \in {\Bbb R}^{d\times d}$</li><li>$e_{it}$表示$t$时刻解码状态${\pmb s}_{t-1}$受编码状态${\pmb h}_i$的影响程度（对齐函数，描述上下文对齐关系）</li><li>$\alpha_{it}$：${\pmb s}_{t-1}$对所有编码的注意力权重</li><li>查询（<strong>Query</strong>）向量：${\pmb s}_{t-1}$</li><li>键（<strong>Key</strong>）和值（<strong>Value</strong>）向量：$\{ {\pmb h}_1,…,{\pmb h}_m \}$中的向量</li></ul><p>注意力机制：Query向量对每个Key向量分别计算影响度（即注意力分布），并在（softmax）归一化后将其作为权重对$m$个Value向量加权求和，得到基于注意力的上下文向量。得到解码器隐状态${\pmb s}_t$后，计算条件概率$P(y_t|Y_{&lt;t},X)$的方法与普通Seq2Seq模型相同。</p><p>作用：解码器在生成每个词时都能动态关注到不同位置的编码状态，从而使得模型具有更好的拟合能力和更强的可解释性。</p><h2 id="扩充和改进"><a href="#扩充和改进" class="headerlink" title="扩充和改进"></a>扩充和改进</h2><p>Luong等人提出的注意力机制与以上的不同点：</p><ul><li><strong>解码状态</strong>的计算方式：使用$t$时刻的隐状态作为查询向量</li></ul><p>$$P(y_t|Y_{&lt;t},X)=\mathrm{softmax}(\mathrm{MLP}(\tilde{\pmb s}_t))|_{y_t}$$</p><p>$$\tilde{\pmb s}_t=\tanh({\pmb W}_c({\pmb s}_t\oplus{\pmb c}_t))$$</p><ul><li><strong>对齐函数</strong>：</li></ul><p>$$e_{it}={\pmb s}_{t-1}\cdot{\pmb h}_i$$</p><p>$$e_{it}={\pmb s}_{t-1}{\pmb W}_a{\pmb h}_i$$</p><ul><li><strong>局部注意力机制</strong>：定义整型超参数$D$，在解码每一时刻$t$预测整数值$I_t$，Key和Value向量变为$\{ {\pmb h}_{I_t-D},{\pmb h}_{I_t-D+1},…,{\pmb h}_{I_t+D} \}$。其中$I_t$的计算方法：<ul><li>单调对齐：$I_t=t$</li><li>预测对齐：$I_t=m\cdot \sigma({\pmb V}_p\cdot\tanh({\pmb W}_p{\pmb h}_t))$<ul><li>${\pmb V}_p$, ${\pmb W}_p$：模型参数</li><li>同时注意力权重$\alpha_{it}$引入以$I_t$为中心的高斯权重：$\alpha_{it}=\frac{ \exp (e_{it}) }{ \sum_{k=1}^m \exp (e_{kt}) }\exp\left( - \frac{(i-I_t)^2}{2\sigma^2} \right)$<ul><li>$\sigma$一般设置为$\frac{D}{2}$</li></ul></li></ul></li></ul></li></ul><h1 id="解码器的解码方法"><a href="#解码器的解码方法" class="headerlink" title="解码器的解码方法"></a>解码器的解码方法</h1><p>生成文本时需要解决的问题：求一个单词序列${\hat Y}$，使其生成概率$P({\hat Y}|X)$最大。</p><ul><li>搜索空间大小：$|{\cal V}|^T$</li><li>$|{\cal V}|$：词表大小</li><li>$T$：句子的最大长度</li></ul><h2 id="基于搜索的解码方法"><a href="#基于搜索的解码方法" class="headerlink" title="基于搜索的解码方法"></a>基于搜索的解码方法</h2><h3 id="贪心搜索"><a href="#贪心搜索" class="headerlink" title="贪心搜索"></a>贪心搜索</h3><p>每个时间步$t$都选取当前概率分布最大的词，即$\hat{y}_t={\rm argmax}_y P(y|\hat{Y}_{&lt;t},X)$，直到$\hat{y}_t$为<code>&lt;EOS&gt;</code>时停止生成。</p><ul><li>复杂度低</li><li>不保证全局最优</li></ul><h3 id="集束搜索"><a href="#集束搜索" class="headerlink" title="集束搜索"></a>集束搜索</h3><p>集束搜索（柱状搜索，Beam Search）扩大搜索范围，有超参数$B$即束宽（Beam Size）。</p><p>$${\cal Y}_{[t]}={\rm argmax}_{Y_{[t]}^1,…,Y_{[t]}^B\in S_t} \sum_{b=1}^B\log P(Y_{[t]}^b|X) $$</p><p>$$\mathrm{s.t.}\ Y_{[t]}^i\ne Y_{[t]}^j, \forall i\ne j, i,j=1,2,…,B$$</p><p><strong>缺点</strong>：</p><ul><li>倾向于生成较短的序列<ul><li>改进：加上一个可调节参数$a\in[0,1]$</li></ul></li></ul><p>$${\cal Y}_{[t]}={\rm argmax}_{Y_{[t]}^1,…,Y_{[t]}^B\in S_t} \sum_{b=1}^B<br>\frac{1}{(n_{b,[t]})^a} \log P(Y_{[t]}^b|X) $$</p><p>$$\mathrm{s.t.}\ Y_{[t]}^i\ne Y_{[t]}^j, \forall i\ne j, i,j=1,2,…,B$$</p><ul><li>容易生成不断重复的语句<ul><li>人类文本并非总在文本序列的每个位置上都取最高概率的词</li></ul></li></ul><h2 id="基于采样的解码方法"><a href="#基于采样的解码方法" class="headerlink" title="基于采样的解码方法"></a>基于采样的解码方法</h2><h3 id="随机采样"><a href="#随机采样" class="headerlink" title="随机采样"></a>随机采样</h3><p>在生成时的每一步都从当前概率分布$P(y|Y_{&lt;t},X)$按照概率随机采样一个词，即${\hat y}\sim P(y|Y_{&lt;t},X)$。</p><ul><li><strong>优点</strong>：通常具有更高的多样性；一定程度上缓解生成通用或重复文本的问题。</li><li><strong>缺点</strong>：上下文不连贯。</li></ul><h3 id="带温度的随机采样"><a href="#带温度的随机采样" class="headerlink" title="带温度的随机采样"></a>带温度的随机采样</h3><p>目的：避免采样到低概率的词，导致上下文不连贯。</p><p>设置一个大于0的实数温度参数$\tau$，控制概率分布的弥漫程度。</p><p>$$P(y|Y_{&lt;t},X)={\rm softmax}(\mathrm{MLP}({\hat {\pmb s}}_t ) / \tau ) |_y$$</p><p>其中${\hat {\pmb s}}_t$为使用模型生成的前缀${\hat Y}_{&lt;t}$而非解码器隐状态。</p><p>合理设置$\tau \in (0,1)$可避免随机采到概率较小的词。</p><h3 id="Top-k-采样"><a href="#Top-k-采样" class="headerlink" title="Top-$k$采样"></a>Top-$k$采样</h3><p>Top-$k$采样（<a href="https://arxiv.org/abs/1805.04833">Fan et al., 2018</a>）：选择概率最高的$k$个词作为候选词，根据相对概率随机采样。</p><p>设在$t$时刻模型预测的在词表${\cal V}$上的概率分布为$P(y|{\hat Y}_{&lt;t},X)$，则它的Top-$k$词表为${\cal V}^{(k)} = {\rm argmax}_{ {\cal V}’^{(k)} }\sum_{y \in {\cal V} ^{(k)} } P(y|{ Y}_{&lt;t},X) $，其中${\cal V}’^{(k)}\subset {\cal V}$。</p><p>得新概率分布：</p><p>$$<br>{\tilde P}(y|{\hat Y}_{&lt;t},X)=<br>\begin{cases}<br>    \begin{array}{ll}<br>        \frac{P(y_t|{ Y}_{&lt;t},X)}{\sum_{y\in {\cal V}^{(k)} } P(y|{ Y}_{&lt;t},X)}, &amp; y_t\in {\cal V}^{(k)} \\ 0, &amp; 其他<br>    \end{array}<br>\end{cases}<br>$$</p><p>再按照概率随机采样得$\hat{y}_t$即可。</p><h3 id="Top-p-采样"><a href="#Top-p-采样" class="headerlink" title="Top-$p$采样"></a>Top-$p$采样</h3><p>Top-$k$采样对于不同的模型，常数$k$难以进行一致的设定。</p><ul><li>在概率分布较为<strong>平坦</strong>的情况下，词概率相差不大，实际可能存在超过$k$个合理的词。如果仍限制仅从Top-$k$个候选词中采样，可能会增加生成重复文本的风险。</li><li>在概率分布<strong>集中</strong>的情况下，合理的可选词可能会少于$k$个。如果仍从Top-$k$个候选词中采样，可能得到与上下文无关的词。</li></ul><p>Top-$p$采样（即核采样（Nucleus sampling），<a href="https://arxiv.org/abs/1904.09751">Holtzman et al., 2019</a>）：修改采样范围为${\cal V}^{(p)}$，即满足$\sum_{y \in {\cal V}’^{(p)}} P(y|{\hat Y}_{&lt;t},X) \ge p$的所有${\cal V}’^{(p)}$中最小的集合，其中$p\in (0,1)$为预先设定的超参数，作为阈值。</p><h3 id="惩罚采样"><a href="#惩罚采样" class="headerlink" title="惩罚采样"></a>惩罚采样</h3><p>惩罚采样（Penalized sampling，<a href="https://arxiv.org/abs/1909.05858">Keskar et al., 2019</a>）：为避免生成重复子串，对先前生成的token的分数进行打折，惩罚重复情况：</p><p>$$<br>p_i=\frac{\exp (o_i/(T\cdot 1(i\in g)))}{ \sum_j \exp (o_j/(T\cdot 1(j\in g))) } \qquad 1(c)=\theta \text{ if the condition } c \text{ is True else 1}<br>$$</p><p>其中$g$为先前生成token的集合，$1(\cdot)$为识别函数。论文发现取$\theta=1.2$时可在较少的重复和真实的生成之间取得良好平衡。</p><h1 id="copy机制（待补充）"><a href="#copy机制（待补充）" class="headerlink" title="copy机制（待补充）"></a>copy机制（待补充）</h1><h1 id="Seq2Seq模型存在的问题"><a href="#Seq2Seq模型存在的问题" class="headerlink" title="Seq2Seq模型存在的问题"></a>Seq2Seq模型存在的问题</h1><ul><li>一般基于RNN，编解码序列需按自回归方式从左至右依次进行，难以并行，处理较长序列时间复杂度较高（解决方案：CNN或Transformer作为编码器，非自回归语言生成模型作为解码器）</li><li>RNN按照时间轴方向依次递归，位置较远的单词之间的隐状态关联衰减严重（Transformer全连接self-attention更佳，可直接建模序列中任意两个单词之间的依赖关系）</li><li>使用最大似然估计（Maximum Likelihood Estimation, MLE）训练的自回归语言模型存在暴露偏差（Export Bias）问题，且随句子长度增加而增大，最终导致模型生成文本质量下降。<ul><li>训练：教师强制，解码每个位置的token，输入$Y_{&lt;t}$为训练数据的真实前缀</li><li>生成：输入为之前解码的前缀</li></ul></li></ul><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><p>[1] 黄民烈等. 《现代自然语言生成》. 电子工业出版社, 2021.<br>[2] <a href="https://lilianweng.github.io/lil-log/2021/01/02/controllable-neural-text-generation.html#conditional-training">Controllable Neural Text Generation (lilianweng.github.io)</a></p>]]></content>
    
    
    <categories>
      
      <category>NLP</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NLP</tag>
      
      <tag>RNN</tag>
      
      <tag>LSTM</tag>
      
      <tag>Seq2Seq</tag>
      
      <tag>注意力機制</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《中间件技术》实验3：跨语言加密解密调用</title>
    <link href="/middleware/MWExp3CrossLangImpl/"/>
    <url>/middleware/MWExp3CrossLangImpl/</url>
    
    <content type="html"><![CDATA[<blockquote><p>简单的<em>AES</em>，雕虫小技的跨语言调用……</p></blockquote><span id="more"></span><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p><strong>实验目的</strong>：搜索跨语言开发调用的常用框架/库，阅读文档；实现简单的跨语言调用。</p><p><strong>实验内容</strong>：</p><p> 一个功能A，用的是L1语言进行编程实现的；请把该功能，在L2语言的环境下进行调用/合并，并能正确的返回结果。</p><p>请先自己编写或找到实现A功能的代码，或仅有可执行文件，并进行跨语言开发。</p><p>多语言开发一般基于第三方的库或解决方案。</p><p>（2.3 A：加密和解密功能， L1: Java， L2：C++ 和 Python）</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>首先，如果不考虑利用其他框架来进行跨语言调用，最简单的办法自然是直接调用控制台输出。或者，设计RESTful API也可满足要求。</p><p>不过，对于Python调用Java，我们容易找到<code>jpype</code>这个工具，通过开启JVM，调用已经编译好的jar包中的类。另外，C++也可利用JNI来调用jar包。</p><p>此外，通过Apache Thrift这一个远程过程调用（RPC）框架，约定传输的类，建立相应的C/S程序，我们也可以很容易地实现跨语言的编程与调用。</p><p>对于加密和解密功能，由于Base64过于简单，这里选择了AES加密算法。通过约定相同的密钥进行加密和加密。</p><p>项目仓库地址：<a href="https://github.com/unsioer/EncryptorDecryptor">https://github.com/unsioer/EncryptorDecryptor</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>编译器：</p><ul><li>JDK 11</li><li>MSVC 14</li><li>Python 3.8</li><li>Thrift 1.4</li></ul><p>IDE：</p><ul><li>IDEA 社区版（Java代码开发）</li><li>Visual Studio 2019（C++代码开发）</li><li>Visual Studio Code（Python代码开发）</li></ul><p>包管理工具：</p><ul><li>maven（Java）</li><li>vcpkg（C++）</li><li>pip（Python）</li></ul><h2 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h2><h3 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h3><p>如下表所示。</p><table><thead><tr><th align="center">Java</th><th align="center">C++</th><th align="center">Python</th></tr></thead><tbody><tr><td align="center">实现了Base64和AES加密/解密算法。<br />选用AES测试跨语言调用实验。<br />1. 将项目打包成jar包，供Python的<code>jpype</code>调用其中的<code>MyAES</code>类。<br />2. 通过Thrift生成代码，编写相应的服务端（供C++和Python调用）和客户端程序。</td><td align="center">通过Thrift生成代码，编写客户端程序调用Java的方法。</td><td align="center">1. 通过<code>jpype</code>调用Java打包生成的的jar包中的类。<br />2. 通过Thrift生成代码，编写客户端程序调用Java的方法。</td></tr></tbody></table><h3 id="附注：Base64在Java中的实现"><a href="#附注：Base64在Java中的实现" class="headerlink" title="附注：Base64在Java中的实现"></a>附注：Base64在Java中的实现</h3><p>首先简要介绍Base64。Base64就是一种基于64个可打印字符来表示二进制数据的方法。采用Base64编码具有不可读性，需要解码后才能阅读。它要求每三个8Bit的字节转换为四个6Bit（$2^6=64$）的字节，然后把6Bit再添两位高位0，组成四个8Bit的字节。最后得到的每个字节数值范围为00000000~00111111，依次转换为大写字母、小写字母、数字（0-9）、+和/，共计26+26+10+1+1=64个字符。原文的字节数量如果是3的倍数，自然按上述规则转换；如不满足，则将剩余的字节按原有规则转换（余1字节，转2字节；余2字节，转3字节。每个字节最高2位补零，剩余凑不满6的倍数的低位也补零），最后用2个或1个=号补满四个字节。</p><p>我们可以直接调用<code>java.util.Base64</code>的静态方法实现Base64的功能。读取内容为字符串，故统一先作UTF-8编码。由于编码方法简单，也不算真正意义上的加/解“密”，故本次实验不对其做跨语言调用。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyBase64</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">static</span> String <span class="hljs-title">encode</span><span class="hljs-params">(String content)</span> </span>&#123;<br>        Base64.Encoder encoder = Base64.getEncoder();<br>        <span class="hljs-keyword">byte</span>[] contentByte = content.getBytes(StandardCharsets.UTF_8);<br>        <span class="hljs-keyword">return</span> encoder.encodeToString(contentByte);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">static</span> String <span class="hljs-title">decode</span><span class="hljs-params">(String content)</span> </span>&#123;<br>        Base64.Decoder decoder = Base64.getDecoder();<br>        <span class="hljs-keyword">byte</span>[] contentByte = content.getBytes(StandardCharsets.UTF_8);<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> String(decoder.decode(contentByte), StandardCharsets.UTF_8);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="AES在Java中的实现"><a href="#AES在Java中的实现" class="headerlink" title="AES在Java中的实现"></a>AES在Java中的实现</h3><p>密码学中的高级加密标准（Advanced Encryption Standard，AES），又称Rijndael加密法。该算法为比利时密码学家Joan Daemen和Vincent Rijmen所设计，结合两位作者的姓氏，以Rijdael命名。AES采用置换-组合架构进行加解密。严格地说，AES只是Rijndael的特例。AES的区块长度固定为128位，密钥长度则可以是128，192或256位；而Rijndael使用的密钥和区块长度可以是32位的整数倍，以128位为下限，256位为上限。AES加解密过程中使用的密钥是由Rijndael密钥生成方案产生。</p><p>下面的AES加密/解密代码流程如下：</p><ul><li><p>首先把<code>encodeRules</code>作为随机数种子，生成128位密钥。</p></li><li><p>然后，加密过程对<code>content</code>字符串进行加密，将最后的字节编码结果转换为Base64串输出；</p></li><li><p>解密过程则相反，先把<code>content</code>（Base64串）解码成字节内容，最后通过AES解码输出结果。</p><p>这里尝试的都是字符串，故对编码输入和解码输出均按UTF-8编码。</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> javax.crypto.*;<br><span class="hljs-keyword">import</span> javax.crypto.spec.SecretKeySpec;<br><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><span class="hljs-keyword">import</span> java.security.InvalidKeyException;<br><span class="hljs-keyword">import</span> java.security.NoSuchAlgorithmException;<br><span class="hljs-keyword">import</span> java.security.SecureRandom;<br><span class="hljs-keyword">import</span> java.util.Base64;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">MyAES</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">AESEncode</span><span class="hljs-params">(String encodeRules, String content)</span> </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            KeyGenerator keygen = KeyGenerator.getInstance(<span class="hljs-string">&quot;AES&quot;</span>);<br>            SecureRandom random = SecureRandom.getInstance(<span class="hljs-string">&quot;SHA1PRNG&quot;</span>);<br>            random.setSeed(encodeRules.getBytes());<br>            keygen.init(<span class="hljs-number">128</span>, random);<br>            SecretKey originalKey = keygen.generateKey();<br>            <span class="hljs-keyword">byte</span>[] raw = originalKey.getEncoded();<br>            SecretKey key = <span class="hljs-keyword">new</span> SecretKeySpec(raw, <span class="hljs-string">&quot;AES&quot;</span>);<br>            Cipher cipher = Cipher.getInstance(<span class="hljs-string">&quot;AES&quot;</span>);<br>            cipher.init(Cipher.ENCRYPT_MODE, key);<br>            <span class="hljs-keyword">byte</span>[] contentByte = content.getBytes(StandardCharsets.UTF_8);<br>            <span class="hljs-keyword">byte</span>[] aesByte = cipher.doFinal(contentByte);<br>            Base64.Encoder encoder = Base64.getEncoder();<br>            <span class="hljs-keyword">return</span> encoder.encodeToString(aesByte);<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchPaddingException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (InvalidKeyException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalBlockSizeException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (BadPaddingException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title">AESDecode</span><span class="hljs-params">(String encodeRules, String content)</span> </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            KeyGenerator keygen = KeyGenerator.getInstance(<span class="hljs-string">&quot;AES&quot;</span>);<br>            SecureRandom random = SecureRandom.getInstance(<span class="hljs-string">&quot;SHA1PRNG&quot;</span>);<br>            random.setSeed(encodeRules.getBytes());<br>            keygen.init(<span class="hljs-number">128</span>, random);<br>            SecretKey originalKey = keygen.generateKey();<br>            <span class="hljs-keyword">byte</span>[] raw = originalKey.getEncoded();<br>            SecretKey key = <span class="hljs-keyword">new</span> SecretKeySpec(raw, <span class="hljs-string">&quot;AES&quot;</span>);<br>            Cipher cipher = Cipher.getInstance(<span class="hljs-string">&quot;AES&quot;</span>);<br>            cipher.init(Cipher.DECRYPT_MODE, key);<br>            Base64.Decoder decoder = Base64.getDecoder();<br>            <span class="hljs-keyword">byte</span>[] contentByte = decoder.decode(content.getBytes());<br>            <span class="hljs-keyword">byte</span>[] aesByte = cipher.doFinal(contentByte);<br>            <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> String(aesByte, StandardCharsets.UTF_8);<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchAlgorithmException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (NoSuchPaddingException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (InvalidKeyException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (IllegalBlockSizeException e) &#123;<br>            e.printStackTrace();<br>        &#125; <span class="hljs-keyword">catch</span> (BadPaddingException e) &#123;<br>            e.printStackTrace();<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">null</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="jpype对jar包的调用"><a href="#jpype对jar包的调用" class="headerlink" title="jpype对jar包的调用"></a><code>jpype</code>对jar包的调用</h3><p>JPype是一个能够让Python代码方便地调用Java代码的工具，它的原理即调用JAVA虚拟机，并将Java方法的返回类型转换为Python类型。</p><p>本实验的jpype调用格式如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> jpype<br><span class="hljs-keyword">import</span> os<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment">#获取本机JVM路径</span><br>    jvmPath = jpype.getDefaultJVMPath()<br>    <span class="hljs-comment">#开启JVM，调用编译好的jar包</span><br>    jpype.startJVM(<br>        jvmPath, <span class="hljs-string">&quot;-ea&quot;</span>, <span class="hljs-string">&quot;-Djava.class.path=%s&quot;</span> %<br>        (<span class="hljs-string">&#x27;../out/artifacts/EncryptorDecryptor_jar/EncryptorDecryptor.jar&#x27;</span>))<br>    <span class="hljs-comment">#指定要操作的类</span><br>    MyAES = jpype.JClass(<span class="hljs-string">&quot;top.enatsu.MyAES&quot;</span>)<br>    ... <span class="hljs-comment">#调用MyAES类的方法。由于如前代码所示，AES加密解密均为静态方法，故不需创建MyAES实例</span><br>    <span class="hljs-comment">#关闭JVM</span><br>    jpype.shutdownJVM()<br></code></pre></td></tr></table></figure><h3 id="Thrift介绍"><a href="#Thrift介绍" class="headerlink" title="Thrift介绍"></a>Thrift介绍</h3><p>Thrift是一种接口描述语言和二进制通讯协议，它被用来定义和创建跨语言的服务，可视为一种远程过程调用（RPC）框架。它通过一个代码生成引擎联合了一个软件栈，来创建不同程度的、无缝的跨平台高效服务。它最早有Facebook开发，后来Facebook把它捐献给Apache软件基金会作为开源项目。</p><p>本实验需要编写thrift脚本：</p><figure class="highlight thrift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs thrift"><span class="hljs-class"><span class="hljs-keyword">service</span> <span class="hljs-title">MyAESService</span> </span>&#123;<br>  <span class="hljs-built_in">string</span> AESEncode(<span class="hljs-number">1</span>:<span class="hljs-built_in">string</span> encodeRules, <span class="hljs-number">2</span>:<span class="hljs-built_in">string</span> content)<br>  <span class="hljs-built_in">string</span> AESDecode(<span class="hljs-number">1</span>:<span class="hljs-built_in">string</span> encodeRules, <span class="hljs-number">2</span>:<span class="hljs-built_in">string</span> content)<br>&#125;<br></code></pre></td></tr></table></figure><p>将脚本保存为<code>MyAESService.thrift</code>，执行以下指令，thrift自动生成目标语言的代码，分别保存在<code>gen-java</code>/<code>gen-cpp</code>/<code>gen-py</code>文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">thrift --gen java MyAESService.thrift<br>thrift --gen cpp MyAESService.thrift<br>thrift --gen py MyAESService.thrift<br></code></pre></td></tr></table></figure><p>在对应代码基础上实现即可。</p><p>对于作为服务端的Java，需要实现<code>MyAESService</code>的<code>Iface</code>接口中的<code>AESEncode</code>和<code>AESEncode</code>两个方法（减少耦合，直接在实现类<code>MyAESImpl</code>中调用前文所述方法即可）。</p><p>服务器端启动服务的代码结构如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> org.apache.thrift.TProcessor;<br><span class="hljs-keyword">import</span> org.apache.thrift.protocol.TBinaryProtocol;<br><span class="hljs-keyword">import</span> org.apache.thrift.server.TServer;<br><span class="hljs-keyword">import</span> org.apache.thrift.server.TSimpleServer;<br><span class="hljs-keyword">import</span> org.apache.thrift.transport.TServerSocket;<br><span class="hljs-keyword">import</span> top.enatsu.thrift.common.MyAESImpl;<br><span class="hljs-keyword">import</span> top.enatsu.thrift.common.MyAESService;<br><br><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ServerMain</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> <span class="hljs-keyword">int</span> SERVER_PORT = <span class="hljs-number">8090</span>;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">startServer</span><span class="hljs-params">()</span> </span>&#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>                System.out.println(<span class="hljs-string">&quot;Start ....&quot;</span>);<br>                TProcessor tprocessor = <span class="hljs-keyword">new</span> MyAESService.Processor&lt;MyAESService.Iface&gt;(<span class="hljs-keyword">new</span> MyAESImpl()); <span class="hljs-comment">//负责调用用户定义的服务接口</span><br><br>                TServerSocket serverTransport = <span class="hljs-keyword">new</span> TServerSocket(SERVER_PORT); <span class="hljs-comment">//绑定端口</span><br>                TServer.Args tArgs = <span class="hljs-keyword">new</span> TServer.Args(serverTransport);<br>                tArgs.processor(tprocessor);<br>                <span class="hljs-comment">//指定Thrift二进制序列化协议。除TBinaryProtocol外还有压缩密集的TCompactProtocol等</span><br>                tArgs.protocolFactory(<span class="hljs-keyword">new</span> TBinaryProtocol.Factory()); <br><br>                TServer server = <span class="hljs-keyword">new</span> TSimpleServer(tArgs);<br>                server.serve();<br><br>            &#125; <span class="hljs-keyword">catch</span> (Exception e) &#123;<br>                System.out.println(<span class="hljs-string">&quot;Server start error!!!&quot;</span>);<br>                e.printStackTrace();<br>            &#125;<br>    &#125;<br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>相应的客户端代码结构如下：</p><p>Python：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> MyAESService <span class="hljs-keyword">import</span> MyAESService<br>  <br><span class="hljs-keyword">from</span> thrift <span class="hljs-keyword">import</span> Thrift  <br><span class="hljs-keyword">from</span> thrift.transport <span class="hljs-keyword">import</span> TSocket  <br><span class="hljs-keyword">from</span> thrift.transport <span class="hljs-keyword">import</span> TTransport  <br><span class="hljs-keyword">from</span> thrift.protocol <span class="hljs-keyword">import</span> TBinaryProtocol  <br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    transport = TSocket.TSocket(<span class="hljs-string">&#x27;localhost&#x27;</span>, <span class="hljs-number">8090</span>) <span class="hljs-comment">#服务端的socket</span><br>    transport = TTransport.TBufferedTransport(transport) <span class="hljs-comment">#指定缓存传输</span><br>    protocol = TBinaryProtocol.TBinaryProtocol(transport)  <span class="hljs-comment">#指定协议</span><br>    client = MyAESService.Client(protocol)  <br>    transport.<span class="hljs-built_in">open</span>()<br>    ... <span class="hljs-comment">#具体调用client实例的方法</span><br>    transport.close()<br></code></pre></td></tr></table></figure><p>C++：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&quot;MyAESService.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;thrift/protocol/TBinaryProtocol.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;thrift/transport/TSocket.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;thrift/transport/TBufferTransports.h&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> apache::thrift;<br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> apache::thrift::protocol; <br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> apache::thrift::transport;<br><br>std::string serverIP = <span class="hljs-string">&quot;localhost&quot;</span>;<br><span class="hljs-keyword">int</span> serverPort = <span class="hljs-number">8090</span>;<br><br><span class="hljs-function">std::string <span class="hljs-title">AESEncode</span><span class="hljs-params">(std::string encodeRules, std::string content)</span> </span>&#123;<br><br><span class="hljs-function">std::shared_ptr&lt;TSocket&gt; <span class="hljs-title">socket</span><span class="hljs-params">(<span class="hljs-keyword">new</span> TSocket(serverIP, serverPort))</span></span>; <span class="hljs-comment">//服务端的socket</span><br><span class="hljs-function">std::shared_ptr&lt;TTransport&gt; <span class="hljs-title">transport</span><span class="hljs-params">(<span class="hljs-keyword">new</span> TBufferedTransport(socket))</span></span>;<span class="hljs-comment">//指定缓存传输</span><br><span class="hljs-function">std::shared_ptr&lt;TProtocol&gt; <span class="hljs-title">protocol</span><span class="hljs-params">(<span class="hljs-keyword">new</span> TBinaryProtocol(transport))</span></span>; <span class="hljs-comment">//指定协议</span><br><br>transport-&gt;<span class="hljs-built_in">open</span>();<br>MyAESServiceClient* client=<span class="hljs-keyword">new</span> <span class="hljs-built_in">MyAESServiceClient</span>(protocol);<br>std::string _return;<br>client-&gt;<span class="hljs-built_in">AESEncode</span>(_return,encodeRules, content);<br>transport-&gt;<span class="hljs-built_in">close</span>();<br><br><span class="hljs-keyword">return</span> _return;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="附注：vcpkg简介"><a href="#附注：vcpkg简介" class="headerlink" title="附注：vcpkg简介"></a>附注：<code>vcpkg</code>简介</h3><p>我们再考虑安装包管理。Python的官方包管理工具为<code>pip</code>，也可用<code>conda</code>等；Java则可以用<code>maven</code>或<code>gradle</code>。而之前C++一直没有较为合适的包管理工具。</p><p>如今，VC++可以使用微软开源的<code>vcpkg</code>管理C++程序包，从而省却了大量的解决方案配置。</p><p>本实验中需要的操作：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell">vcpkg install thrift<br>vcpkg install thrift:x64<span class="hljs-literal">-windows</span><br>vcpkg integrate install <span class="hljs-comment">&lt;# 集成到全局，在vcpkg根目录的scripts\buildsystems下生成nuget配置文件 #&gt;</span><br></code></pre></td></tr></table></figure><p>打开 Visual Studio 2019，选择工具-NuGet包管理器-程序包管理器设置。在选项窗口中，点击NuGet包管理器-程序包源，添加<code>vcpkg</code>生成的NuGet配置文件路径。</p><p><img src="/images/MW3-nuget%E7%A8%8B%E5%BA%8F%E5%8C%85%E6%BA%90.png" alt="nuget程序包源"></p><p>最后管理NuGet解决方案包，安装<code>vcpkg</code>源下的配置文件，即可在C++代码中<code>#include</code>需要的Thrift头文件。</p><p><img src="/images/MW3-%E7%AE%A1%E7%90%86nuget%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E5%8C%85.png" alt="管理nuget解决方案包"></p><h3 id="L2语言的调用程序命令结构"><a href="#L2语言的调用程序命令结构" class="headerlink" title="L2语言的调用程序命令结构"></a>L2语言的调用程序命令结构</h3><p>首先输入命令。<code>e</code>编码，<code>d</code>解码，<code>q</code>输出。</p><p>接着依次输入编码规则和要编码/解码的字符串，输出相应的结果，并重新解码/编码，校验无误。</p><p><img src="/images/MW3-%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E7%A4%BA%E4%BE%8B.png" alt="控制台输出示例"></p><h2 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h2><p>本次实验实现了一个简单的AES加密/解密的跨语言调用编程。尝试多种方法，完成了实验所有要求。</p><p>跨语言开发，能充分利用不同语言的优势，提高开发上的效率；但另一方面，由于调用框架协议的限制，往往需要经历序列化/反序列化过程，乃至基于网络，跨语言调用的运行效率往往不如本语言原生调用来得高。</p><p>如果无法实现直接的跨语言调用，可以考虑读取控制台输出，或者设计必要的Web API。</p><p>本实验尚有以下不足之处：</p><ul><li>未研究其他的加密解密算法</li><li>未尝试对文件的加密解密</li></ul>]]></content>
    
    
    <categories>
      
      <category>中間件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>Python</tag>
      
      <tag>Java</tag>
      
      <tag>Thrift</tag>
      
      <tag>JPype</tag>
      
      <tag>vcpkg</tag>
      
      <tag>Base64</tag>
      
      <tag>AES</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GitHub Webhook远程服务器自动部署杂记</title>
    <link href="/git/WebhookStart/"/>
    <url>/git/WebhookStart/</url>
    
    <content type="html"><![CDATA[<p>也来试试GitHub的自动部署？</p><span id="more"></span><h2 id="GitHub项目仓库配置"><a href="#GitHub项目仓库配置" class="headerlink" title="GitHub项目仓库配置"></a>GitHub项目仓库配置</h2><p>在GitHub项目仓库的<code>Settings</code>-<code>Webhooks</code>里，选择<code>Add webhook</code>。<br>填写Payload URL和Secret，保存。</p><p><img src="/images/AddWebhook.png" alt="Add Webhook"></p><h2 id="远程服务器配置"><a href="#远程服务器配置" class="headerlink" title="远程服务器配置"></a>远程服务器配置</h2><p>在远程服务器某一位置（如<code>/home/deploy</code>）创建Node.js项目。</p><p>首先安装<code>github-webhook-handler</code>包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i --save github-webhook-handler<br></code></pre></td></tr></table></figure><p>在同一目录下新建一个<code>deploy.js</code>，内容如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>)<br><span class="hljs-keyword">var</span> createHandler = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;github-webhook-handler&#x27;</span>)<br><span class="hljs-keyword">var</span> handler = createHandler(&#123; <br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/pushCode&#x27;</span>, <span class="hljs-comment">// 与GitHub后台设置的Payload URL最后部分一致</span><br>    <span class="hljs-attr">secret</span>: <span class="hljs-string">&#x27;123456&#x27;</span> <span class="hljs-comment">// 与GitHub后台设置的Secret一致</span><br>&#125;) <br><br> <br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run_cmd</span>(<span class="hljs-params">cmd, args, callback</span>) </span>&#123;<br>  <span class="hljs-keyword">var</span> spawn = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;child_process&#x27;</span>).spawn;<br>  <span class="hljs-keyword">var</span> child = spawn(cmd, args);<br>  <span class="hljs-keyword">var</span> resp = <span class="hljs-string">&quot;&quot;</span>;<br> <br>  child.stdout.on(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">buffer</span>) </span>&#123; resp += buffer.toString(); &#125;);<br>  child.stdout.on(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123; callback (resp) &#125;);<br>&#125;<br> <br>http.createServer(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  handler(req, res, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;<br>    res.statusCode = <span class="hljs-number">404</span><br>    res.end(<span class="hljs-string">&#x27;no such location&#x27;</span>)<br>  &#125;)<br>&#125;).listen(<span class="hljs-number">3000</span>) <span class="hljs-comment">//远程服务器本地绑定的端口</span><br> <br>handler.on(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err</span>) </span>&#123;<br>  <span class="hljs-built_in">console</span>.error(<span class="hljs-string">&#x27;Error:&#x27;</span>, err.message)<br>&#125;)<br> <br>handler.on(<span class="hljs-string">&#x27;push&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">event</span>) </span>&#123;<br>  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Received a push event for %s to %s&#x27;</span>,<br>    event.payload.repository.name,<br>    event.payload.ref);<br>  run_cmd(<span class="hljs-string">&#x27;sh&#x27;</span>, [<span class="hljs-string">&#x27;./deploy.sh&#x27;</span>], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">text</span>)</span>&#123; <span class="hljs-built_in">console</span>.log(text) &#125;); <span class="hljs-comment">//要部署的脚本</span><br>&#125;)<br></code></pre></td></tr></table></figure><p>编写部署脚本（如<code>deploy.sh</code>）。尝试执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh ./deploy.sh<br></code></pre></td></tr></table></figure><p>确认脚本无误。</p><p>全局安装<code>forever</code>，启动进程，检查进程列表：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -g forever<br>forever start /home/deploy/deploy.js<br>forever list<br></code></pre></td></tr></table></figure><p>如果一切正常，输出格式形如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">data:        uid  <span class="hljs-built_in">command</span>       script       forever pid   id logfile                 uptime                    <br>data:    [0] MHwN /usr/bin/node deploy.js 46226   46293    /root/.forever/MHwN.log 0:0:2:2.253999999999905 <br></code></pre></td></tr></table></figure><h3 id="附注：常用的forever指令"><a href="#附注：常用的forever指令" class="headerlink" title="附注：常用的forever指令"></a>附注：常用的<code>forever</code>指令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash">// 简单的启动进程<br>forever start app.js<br><br>// 关闭进程<br>forever stop app.js<br>forever stop 0 // 关闭指定标号进程，如上述[0]号进程<br>forever stopall<br><br>// 重启进程<br>forever restart app.js<br>forever restartall<br><br>// 指定forever信息输出文件<br>forever start -l forever.log app.js<br><br>// 指定app.js中的日志信息和错误日志输出文件。<br>// -o 为console.log输出的信息，<br>// -e 为console.error输出的信息<br>forever start -o out.log -e err.log app.js<br><br>// 追加日志，forever默认不能覆盖上次的启动日志，<br>// 如果第二次启动不加-a，则会报错<br>// -a 等应置于脚本文件名称之前，否则不起作用<br>forever start -l forever.log -a app.js<br><br>// 监听当前文件夹下的所有文件改动<br>forever start -w app.js<br><br>//查看forever进程列表<br>forever list<br></code></pre></td></tr></table></figure><h3 id="附注：SSH对远程服务器localhost端口的映射代理"><a href="#附注：SSH对远程服务器localhost端口的映射代理" class="headerlink" title="附注：SSH对远程服务器localhost端口的映射代理"></a>附注：SSH对远程服务器localhost端口的映射代理</h3><p>本地执行：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-comment"># ssh -L &#123;本地映射端口&#125;:&#123;远程端口绑定的ip&#125;:$&#123;需要代理的远程端口&#125; &#123;远程ip&#125;</span><br>ssh <span class="hljs-literal">-L</span> <span class="hljs-number">1234</span>:localhost:<span class="hljs-number">3000</span> xxx.xxx.xxx.xxx<br></code></pre></td></tr></table></figure><p>输入<code>root</code>密码后，本地的<code>1234</code>端口即可监听远程<code>3000</code>端口的内容。</p><h2 id="Nginx-公网映射"><a href="#Nginx-公网映射" class="headerlink" title="Nginx 公网映射"></a>Nginx 公网映射</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs txt">server &#123;<br>    server_name example.com;<br>    ...<br><br>    listen 443 ssl; <br>    ...<br><br>    location /pushCode &#123;<br>            proxy_pass http://127.0.0.1:3000;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>重启Nginx：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pkill -9 nginx<br>nginx<br></code></pre></td></tr></table></figure><p>如无误，即可访问<code>https://example.com/pushCode</code>，得到<code>deploy.js</code>返回的内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs txt">no such location<br></code></pre></td></tr></table></figure><p>最后，尝试<code>git push</code>你的项目仓库，如一切正常，则能在对应的webhook页能找到部署成功的记录，大功告成。</p><p><img src="/images/WebhookSuccess.png" alt="Success"></p>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
      <tag>Webhook</tag>
      
      <tag>Node.js</tag>
      
      <tag>Nginx</tag>
      
      <tag>SSH</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《中间件技术》实验2：RMI远程文件管理</title>
    <link href="/middleware/MWExp2RmiFileManager/"/>
    <url>/middleware/MWExp2RmiFileManager/</url>
    
    <content type="html"><![CDATA[<blockquote><p><em>粗 制 滥 造</em></p></blockquote><span id="more"></span><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>掌握远程过程调用原理，基于java RMI进行远程编程和控制。要求定义远程接口类及实现类：定义相应的处理方法；客户端利用RMI实现远程调用服务。同时，在在两台机器之间验证结果正确。</p><p>基于实验一的内容，基于RMI的远程调用，改写你的程序。</p><p>（2.2 实现A机器的程序，可以管理（增加、删除、改等）B机器上的某个文件夹或者目录）</p><p>项目仓库地址：<a href="https://github.com/unsioer/RmiFileManager">https://github.com/unsioer/RmiFileManager</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>开发环境：</p><ul><li>JDK 11</li><li>IDEA 社区版（本地代码开发）</li><li>Visual Studio Code（远程SSH代码开发）</li><li>Apache Maven 3.6.3（包管理）</li><li>Swing （客户端GUI）</li><li><code>commons-io</code>（<code>FileUtils</code>类含扩展的文件操作）</li><li>Git（代码管理）</li></ul><h2 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h2><h3 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h3><p>本实验的服务器端和客户端均采用了Java RMI技术。</p><p>服务器端绑定注册RMI服务，实现对应的接口方法。客户端访问建立的URL，在指定的远程主机上查找RMI服务对象，找到后转换为本地接口，从而可以实现远程操作。</p><p>提交的实验代码中，服务器端有控制台版本，客户端则有控制台和GUI两种版本。</p><h3 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h3><h4 id="跨平台远程连接的服务器端设置（重点）"><a href="#跨平台远程连接的服务器端设置（重点）" class="headerlink" title="跨平台远程连接的服务器端设置（重点）"></a>跨平台远程连接的服务器端设置（重点）</h4><p>本实验测试双机通信时，远程服务器系统为Ubuntu 20.04 LTS。由于ECS服务器存在内网和公网IP，服务器端应用就必须注意相应的处理，才能实现远程调用。</p><p>否则，就会出现如图所示的情况，出现远程内网IP：</p><p><img src="/images/MW2-%E5%87%BA%E7%8E%B0%E8%BF%9C%E7%A8%8B%E5%86%85%E7%BD%91IP.png"></p><p>解决方案的代码形如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java">...<br>System.setProperty(<span class="hljs-string">&quot;java.rmi.server.hostname&quot;</span>, hostname); <span class="hljs-comment">//设置公网IP</span><br>...<br><span class="hljs-keyword">try</span> &#123;<br>    RMISocketFactory.setSocketFactory(<span class="hljs-keyword">new</span> MyRMISocket()); <span class="hljs-comment">//定义内网数据传输端口</span><br><br>    Registry registry = LocateRegistry.createRegistry(port); <span class="hljs-comment">//定义数据传输端口</span><br><br>    FileManager fileManager = <span class="hljs-keyword">new</span> FileManagerImpl(); <span class="hljs-comment">//</span><br><br>    registry.rebind(<span class="hljs-string">&quot;file&quot;</span>, fileManager); <span class="hljs-comment">//注册</span><br><br>    Context namingContext = <span class="hljs-keyword">new</span> InitialContext();<br><br>    System.out.println(Inet4Address.getLocalHost().getHostAddress());<br>    namingContext.rebind(<span class="hljs-string">&quot;rmi://&quot;</span> + Inet4Address.getLocalHost().getHostAddress() + <span class="hljs-string">&quot;:&quot;</span> + port + <span class="hljs-string">&quot;/file&quot;</span>, fileManager); <span class="hljs-comment">//对象，把对象与一个名字绑定在内网IP上</span><br>&#125; <span class="hljs-keyword">catch</span> (IOException | NamingException e) &#123; <span class="hljs-comment">//捕获异常</span><br>    e.printStackTrace();<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="接口的实现"><a href="#接口的实现" class="headerlink" title="接口的实现"></a>接口的实现</h3><p>服务器端需要实现的RMI接口方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function">String <span class="hljs-title">hello</span><span class="hljs-params">()</span> <span class="hljs-keyword">throws</span> RemoteException</span>; <span class="hljs-comment">//返回&quot;Hello World!&quot;，检查连接是否正常</span><br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 获取指定路径文件（夹）本身的信息。</span><br><span class="hljs-comment"> * 如不存在，返回null</span><br><span class="hljs-comment"> * 参数：srcPath 文件路径</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">File <span class="hljs-title">getFile</span><span class="hljs-params">(String srcPath)</span> <span class="hljs-keyword">throws</span> RemoteException</span>; <br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 获取指定路径文件（夹）本身的信息。</span><br><span class="hljs-comment"> * 返回：FileInfoImpl文件信息自定义类，包含文件名、是否是文件夹等内容</span><br><span class="hljs-comment"> * 如不存在，返回null</span><br><span class="hljs-comment"> * 参数：srcPath 文件路径</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">FileInfo <span class="hljs-title">getFileInfo</span><span class="hljs-params">(String srcPath)</span> <span class="hljs-keyword">throws</span> RemoteException</span>; <br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 获取指定目录下的文件（夹）信息</span><br><span class="hljs-comment"> * 参数：srcDir 目录路径（若为空或”/&quot;则返回根目录下的文件（夹）信息）</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResponseImpl <span class="hljs-title">getFileList</span><span class="hljs-params">(String srcDir)</span> <span class="hljs-keyword">throws</span> RemoteException</span>;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 创建文件夹</span><br><span class="hljs-comment"> * 参数：srcDir 目录路径</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResponseImpl <span class="hljs-title">createFolder</span><span class="hljs-params">(String srcDir)</span> <span class="hljs-keyword">throws</span> RemoteException</span>;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 移动文件（夹）到指定的目录下</span><br><span class="hljs-comment"> * 参数：srcPath 要移动的文件（夹）路径</span><br><span class="hljs-comment"> *      dstName 要移动到的目标目录路径</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResponseImpl <span class="hljs-title">moveFile</span><span class="hljs-params">(String srcPath, String dstDir)</span> <span class="hljs-keyword">throws</span> RemoteException</span>;  <br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 复制文件（夹）到指定的目录下</span><br><span class="hljs-comment"> * 参数：srcPath 要复制的文件（夹）路径</span><br><span class="hljs-comment"> *      dstName 要粘贴到的目标目录路径</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResponseImpl <span class="hljs-title">copyFile</span><span class="hljs-params">(String srcPath, String dstDir)</span> <span class="hljs-keyword">throws</span> RemoteException</span>;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 重命名文件（夹）</span><br><span class="hljs-comment"> * 参数：srcPath 要重命名的文件（夹）路径</span><br><span class="hljs-comment"> *      dstName 新的文件（夹）名称</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResponseImpl <span class="hljs-title">renameFile</span><span class="hljs-params">(String srcPath, String dstName)</span> <span class="hljs-keyword">throws</span> RemoteException</span>;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 删除文件（夹）</span><br><span class="hljs-comment"> * 参数：srcPath 要删除的文件（夹）路径</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResponseImpl <span class="hljs-title">deleteFile</span><span class="hljs-params">(String srcPath)</span> <span class="hljs-keyword">throws</span> RemoteException</span>;<br><br><span class="hljs-comment">/*</span><br><span class="hljs-comment"> * 上传文件到指定的路径</span><br><span class="hljs-comment"> * 参数：info FileInfoImpl文件信息自定义类，包含文件名、要上传的路径、文件字节内容</span><br><span class="hljs-comment"> */</span><br><span class="hljs-function">ResponseImpl <span class="hljs-title">uploadFile</span><span class="hljs-params">(FileInfoImpl info)</span> <span class="hljs-keyword">throws</span> RemoteException</span>; <br></code></pre></td></tr></table></figure><p>以上的<code>ResponseImpl</code>类为自定义<code>Response</code>接口的实现，主要含有成员：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ResponseImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Response</span> </span>&#123;<br>    Boolean status = <span class="hljs-keyword">false</span>;<span class="hljs-comment">//操作状态</span><br><br>    String message = <span class="hljs-keyword">null</span>;<span class="hljs-comment">//提示信息</span><br><br>    File[] files = <span class="hljs-keyword">null</span>;<span class="hljs-comment">//文件对象列表</span><br>    ...<br>&#125;<br></code></pre></td></tr></table></figure><p>以及对应的<code>get</code> <code>set</code>方法。</p><h4 id="合法性检验"><a href="#合法性检验" class="headerlink" title="合法性检验"></a>合法性检验</h4><p>对于传入的字符串，如果是文件路径，不允许出现<code>?</code> <code>*</code>  <code>&lt;</code> <code>&gt;</code> <code>:</code> <code>..</code>（最后两个限制是防止操作根目录之外的文件夹）名。</p><p>如果是文件名，还不允许出现<code>/</code> 或 <code>\</code>。</p><h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p> 客户端分为控制台版本和GUI版本。控制台部分，输入一行操作名称，再输入一至二行相应参数，最后执行操作。</p><h4 id="控制台版本操作"><a href="#控制台版本操作" class="headerlink" title="控制台版本操作"></a>控制台版本操作</h4><ul><li>ls：列目录</li><li>mkdir：新建文件夹</li><li>rm：删除</li><li>mv：移动</li><li>cp：复制</li><li>ren：重命名</li><li>upload：上传文件</li></ul><p>GUI版本见下文。</p><h2 id="GUI界面展示"><a href="#GUI界面展示" class="headerlink" title="GUI界面展示"></a>GUI界面展示</h2><p>GUI采用了swing。这里做了简要截图，也可详见演示视频。</p><h3 id="基本界面"><a href="#基本界面" class="headerlink" title="基本界面"></a>基本界面</h3><p>首先需要输入RMI服务的URL：</p><p><img src="/images/MW2-%E5%88%9D%E5%A7%8B%E8%BE%93%E5%85%A5%E6%A1%86.png"></p><p>成功连接：</p><p><img src="images/MW2-%E6%88%90%E5%8A%9F%E8%BF%9E%E6%8E%A5.png"></p><h4 id="主界面"><a href="#主界面" class="headerlink" title="主界面"></a>主界面</h4><p><img src="/images/MW2-%E4%B8%BB%E7%95%8C%E9%9D%A2.png"></p><p>基本界面窗口显示标题和对应的RMI URL。</p><p>上方的工具条分别为：根目录按钮、上传按钮、输入框（输入并回车后直接访问指定目录）</p><p>主体部分是指定目录下的文件目录树。</p><h4 id="右键菜单"><a href="#右键菜单" class="headerlink" title="右键菜单"></a>右键菜单</h4><p><img src="/images/MW2-%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95.png" alt="右键菜单"></p><h4 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h4><p><img src="/images/MW2-%E4%B8%8A%E4%BC%A0.png" alt="上传"></p><h4 id="新建文件夹"><a href="#新建文件夹" class="headerlink" title="新建文件夹"></a>新建文件夹</h4><p><img src="/images/MW2-%E6%96%B0%E5%BB%BA%E6%96%87%E4%BB%B6%E5%A4%B9.png" alt="新建文件夹"></p><h4 id="重命名"><a href="#重命名" class="headerlink" title="重命名"></a>重命名</h4><p><img src="/images/MW2-%E9%87%8D%E5%91%BD%E5%90%8D.png" alt="重命名"></p><p>剪切、复制、粘贴等不便在文档显示，详见视频。</p><h2 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h2><p>本次实验实现了一个最简单的基于Java RMI的远程文件管理应用，完成了实验所有要求并做了一些合法性检测，设计了相对简洁的GUI界面。</p><p>由于只是简易实现功能，尚有以下不足之处：</p><ul><li><p>请求和返回内容设计较为随意</p></li><li><p>远程操作时，得到的文件对象许多属性丢失，导致对应的目录树均识别为文件，不利于查看（但仍可通过输入框访问指定的目录进行操作）</p></li><li><p>未进行充分测试</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>中間件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>RMI</tag>
      
      <tag>Swing</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>八聲甘州·頌廈大百年華誕</title>
    <link href="/poem/XMU100/"/>
    <url>/poem/XMU100/</url>
    
    <content type="html"><![CDATA[<blockquote><p>1921-2021，慶賀母校廈門大學百年華誕。<br>敢竭拙思，也擬詩詞，共勉未來。</p></blockquote><span id="more"></span><p>憶陵夷演武肇黌基<sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="憶陵夷演武肇黌基：民國10年（1921年）4月6日廈門大學借集美學校開辦；5月9日廈門大學在當年鄭成功操練軍隊的演武亭舊址奠基。選定5月9日奠基，是為了銘記1915年5月9日袁世凱接受「二十一條」這一國恥。陵夷：指國勢衰微，這裏借指中日「二十一條」這一國恥。黌：學校。">[1]</span></a></sup>，<br>鷺洲會羣賢<sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="鷺洲會羣賢：鷺洲：廈門島早期形似白鷺，雅稱鷺島。群賢：雙關，既指來到廈大的青年才俊，也指最早奠基的群賢樓群。">[2]</span></a></sup>。<br>正海濱輻輳<sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="輻輳：車輻的一頭聚集在車轂，形容人物匯集。">[3]</span></a></sup>，<br>師生踔厲<sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="踔厲：精神振奮。">[4]</span></a></sup>，<br>道義擔肩。<br>同集囊螢映雪，<br>一字列巍然<sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="同集囊螢映雪，一字列巍然：群賢樓群一字排開，從左到右分別是囊螢樓、同安樓、群賢樓（主樓）、集美樓、映雪樓。同（安）、集（美）二樓名體現了校主銘記桑梓的情懷；囊螢、映雪二樓名則是勉勵學生刻苦學習。">[5]</span></a></sup>。<br>負笈南強志，<br>故郡窮年<sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="負笈南強志，故郡窮年：指廈門大學在抗戰時期西遷福建長汀。負笈：背負書箱，引申為外出求學。南強，南方之強，廈大的美稱，語出《禮記·中庸》：「寬柔以教，不報無道，南方之強也」。故郡：指長汀縣，舊為汀州府治。汀州最早可以追溯到唐代。">[6]</span></a></sup>。</p><p>覽昔毀家紓國<sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="毀家紓國：讚頌校主陳嘉庚抗戰時期領導南洋華僑支持祖國，並無償將廈大捐給國家。">[7]</span></a></sup>，<br>更典藏迻譯<sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="更典藏迻譯：指王亞南校長參與翻譯的《資本論》。典藏：書籍文獻的收藏，引申為經典收藏品，這裏指《資本論》。迻譯：翻譯。">[8]</span></a></sup>，<br>格致周延<sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="格致周延：指陳景潤研究歌德巴赫猜想的證明。格致：格物致知，近代指自然科學。周延：邏輯學名詞，指命題中的名詞可論及一類事物全體的情況。">[9]</span></a></sup>。<br>況巡洋攬月，<br>兀兀寄雲天<sup id="fnref:10" class="footnote-ref"><a href="#fn:10" rel="footnote"><span class="hint--top hint--rounded" aria-label="況巡洋攬月，兀兀寄雲天：巡洋：指嘉庚號科考船。攬月：指嘉庚一號火箭。兀兀：勞苦不息的樣子。">[10]</span></a></sup>。<br>賞八閩、花繁木秀，<br>望滄瀛、萬舸競風煙。<br>逢稘歲<sup id="fnref:11" class="footnote-ref"><a href="#fn:11" rel="footnote"><span class="hint--top hint--rounded" aria-label="稘歲：一個世紀。稘本指週歲，世紀義用法最早可能來自嚴復。">[11]</span></a></sup>、棉開四地<sup id="fnref:12" class="footnote-ref"><a href="#fn:12" rel="footnote"><span class="hint--top hint--rounded" aria-label="棉開四地：棉指木棉，指校慶正是木棉花開時節。四地：指廈大的思明、翔安、漳州、馬來西亞四個校區。">[12]</span></a></sup>，<br>共話新篇。</p><p><em>時二〇二一年四月五日，萬石澄源齋、漳南江夏某氏作於海韻</em></p><h2 id="廈音對照"><a href="#廈音對照" class="headerlink" title="廈音對照"></a>廈音對照</h2><p>這裏的羅馬字標識出了當代廈門話缺失的j-聲母。實際朗誦按當代的l-。</p><p>「字」的文讀音可以是jū或tsū，這裏取j-，朗誦應折合爲lū。</p><p>「閩」的讀音採用了傳統的bân，不依反切音bîn。</p><p>「輳」「舸」依傳統讀音，亦不合反切。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs txt">憶陵夷演武肇黌基，<br>Ik lîng-î Ián-bú tiāu hông ki,<br>鷺洲會羣賢。<br>Lōo-tsiu huē kûn-hiân.<br>正海濱輻輳，<br>Tsìng hái-pin hok-tsòo,<br>師生踔厲，<br>su-sing thok-lē,<br>道義擔肩。<br>tō-gī tam-kian.<br>同集囊螢映雪，<br>Tông Tsi̍p Lông-îng Ìng-suat,<br>一字列巍然。<br>it-jū lia̍t guî-jiân.<br>負笈南強志，<br>Hū-khip Lâm-kiông tsì,<br>故郡窮年。<br>kòo-kūn kiông-liân.<br><br>覽昔毀家紓國，<br>Lám-sik huí-ka su-kok,<br>更典藏迻譯，<br>kìng tián-tsông î-i̍k,<br>格致周延。<br>kik-tì tsiu-iân.<br>況巡洋攬月，<br>Hóng sûn-iông lám-gua̍t,<br>兀兀寄雲天。<br>gu̍t-gu̍t kì ûn-thian.<br>賞八閩、花繁木秀，<br>Sióng pat-Bân, hua huân bo̍k siù,<br>望滄瀛、萬舸競風煙。<br>bōng tshong-îng, bān-khó kīng hong-ian.<br>逢稘歲、棉開四地，<br>Hông kî-suè, biân khai sù-tē,<br>共話新篇。<br>kiōng-huā sin-phian.<br></code></pre></td></tr></table></figure><section class="footnotes"><h2>註</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>憶陵夷演武肇黌基：民國10年（1921年）4月6日廈門大學借集美學校開辦；5月9日廈門大學在當年鄭成功操練軍隊的演武亭舊址奠基。選定5月9日奠基，是為了銘記1915年5月9日袁世凱接受「二十一條」這一國恥。陵夷：指國勢衰微，這裏借指中日「二十一條」這一國恥。黌：學校。<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>鷺洲會羣賢：鷺洲：廈門島早期形似白鷺，雅稱鷺島。群賢：雙關，既指來到廈大的青年才俊，也指最早奠基的群賢樓群。<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>輻輳：車輻的一頭聚集在車轂，形容人物匯集。<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>踔厲：精神振奮。<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>同集囊螢映雪，一字列巍然：群賢樓群一字排開，從左到右分別是囊螢樓、同安樓、群賢樓（主樓）、集美樓、映雪樓。同（安）、集（美）二樓名體現了校主銘記桑梓的情懷；囊螢、映雪二樓名則是勉勵學生刻苦學習。<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>負笈南強志，故郡窮年：指廈門大學在抗戰時期西遷福建長汀。負笈：背負書箱，引申為外出求學。南強，南方之強，廈大的美稱，語出《禮記·中庸》：「寬柔以教，不報無道，南方之強也」。故郡：指長汀縣，舊為汀州府治。汀州最早可以追溯到唐代。<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>毀家紓國：讚頌校主陳嘉庚抗戰時期領導南洋華僑支持祖國，並無償將廈大捐給國家。<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span>更典藏迻譯：指王亞南校長參與翻譯的《資本論》。典藏：書籍文獻的收藏，引申為經典收藏品，這裏指《資本論》。迻譯：翻譯。<a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span>格致周延：指陳景潤研究歌德巴赫猜想的證明。格致：格物致知，近代指自然科學。周延：邏輯學名詞，指命題中的名詞可論及一類事物全體的情況。<a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span>況巡洋攬月，兀兀寄雲天：巡洋：指嘉庚號科考船。攬月：指嘉庚一號火箭。兀兀：勞苦不息的樣子。<a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span>稘歲：一個世紀。稘本指週歲，世紀義用法最早可能來自嚴復。<a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:12" class="footnote-text"><span>棉開四地：棉指木棉，指校慶正是木棉花開時節。四地：指廈大的思明、翔安、漳州、馬來西亞四個校區。<a href="#fnref:12" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>詩詞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>詞</tag>
      
      <tag>八聲甘州</tag>
      
      <tag>平水韻</tag>
      
      <tag>廈門大學</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《中间件技术》实验1：远程文件管理</title>
    <link href="/middleware/MWExp1FileManager/"/>
    <url>/middleware/MWExp1FileManager/</url>
    
    <content type="html"><![CDATA[<blockquote><p><em>原 型 开 发</em></p></blockquote><span id="more"></span><h2 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h2><p>实验目的：用你熟悉的语言，开发一个基于网络（比如Socket）的简单的互操作程序：实现A机器的程序，可以管理（增加、删除、改等）B机器上的某个文件夹或者目录。</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>由于题目并未限制编程语言和技术，在此直接选用了HTTP协议，利用Python的Flask框架开发Web应用。</p><p>在服务器端，设计必要的RESTful API，用于前端jQuery发送Ajax请求与远程服务器连接。</p><p>用户可以直接访问服务器端的Web地址，对服务器端的文件夹进行文件管理。</p><p>也可在本机启动客户端Web服务，通过指定服务器端的URL，客户端访问服务器端API，实现远程的文件管理。</p><p>项目仓库地址：<a href="https://github.com/unsioer/file-manager-flask">https://github.com/unsioer/file-manager-flask</a></p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>开发环境：</p><ul><li><p>Visual Studio Code</p></li><li><p>Python 3.8.5</p></li><li><p>Flask 1.1.2</p></li></ul><h2 id="具体设计"><a href="#具体设计" class="headerlink" title="具体设计"></a>具体设计</h2><h3 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h3><p>本实验的服务器端和客户端均采用了Python的Flask这一Web框架。</p><p>为了演示方便，服务器端和客户端均在本机测试。服务器端绑定<code>0.0.0.0:5000</code>，操作的目录设置为<code>test</code>；客户端代码置于<code>client</code>文件夹下，绑定<code>0.0.0.0:10000</code>，直接请求<code>http://127.0.0.1:5000</code>的内容。这显然容易推广到“A机器管理B机器的指定文件夹”。</p><ul><li><p>服务器端的路由设计中，<code>/api</code> 用于RESTful API，<code>/app</code> 用于返回HTML界面。 </p></li><li><p>客户端的路由设计中，<code>/app</code> 用于返回HTML界面（实际与服务器端的内容一致）。</p></li></ul><p>下面具体说明使用到的技术。</p><p><strong>客户端</strong>：</p><p>客户端直接利用了Flask的模板解析功能，实际用于交互的只有一个HTML页面。因为界面功能基本一致，为了减少耦合，与服务器端共用代码（提交的代码中，<code>client/templates</code>文件夹实际是<code>templates</code>文件夹的映射）。</p><p>HTML界面的各项交互功能主要靠jQuery和衍生插件<code>jquery-confirm</code>（jQuery版的确认消息提示框）完成；</p><p>还用到了<code>bootstrap</code>以及<code>font-awesome</code>美化界面。</p><p>我们知道，客户端与服务器端应该使用的是不同的套接字，所以jQuery的Ajax请求的URL应该是不同的。所以，在共用的HTML代码中，设计了<code>&#123;&#123; host_link &#125;&#125;</code>这一字段。</p><p>客户端有一个字典<code>remote_config = &#123;&#39;host_link&#39;:&#39;http://127.0.0.1:5000&#39;&#125;</code>，直接填写服务器端的URL。</p><p>代码差异如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># client/app.py 客户端</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/&lt;path:folderPath&gt;&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">folderPath</span>):</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;app.html&#x27;</span>, **remote_config)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-comment"># app.py 服务器端</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/app/&lt;path:folderPath&gt;&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>(<span class="hljs-params">folderPath</span>):</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;app.html&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// templates/app.html 共用的HTML模板</span><br>$.ajax(&#123;<br>    <span class="hljs-attr">url</span>: <span class="hljs-built_in">window</span>.location.href&#123;% <span class="hljs-keyword">if</span> host_link %&#125;.replace(<span class="hljs-regexp">/(https?:\/\/)?[^\/]+(\/.+)/i</span>,<span class="hljs-string">&#x27;&#123;&#123; host_link &#125;&#125;$2&#x27;</span>,<span class="hljs-number">1</span>)&#123;% endif %&#125;.replace(<span class="hljs-string">&#x27;/app&#x27;</span>, <span class="hljs-string">&#x27;/api/folder/basic&#x27;</span>, <span class="hljs-number">1</span>)，<br>    ...<br>&#125;);<br></code></pre></td></tr></table></figure><p>服务器端对应的Python代码未提供<code>host_link</code>，则不会被解析；客户端提供了<code>host_link</code>，在对应位置会被替换为指定的服务器端URL，由JavaScript的字符串替换功能改为正确的服务器端API的URL。</p><p><strong>服务器端</strong>：</p><p>服务器端除了上文提及的HTML界面外，主要内容为一系列操作的API。</p><p>大体上的代码大致均如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/api/folder/basic/&lt;path:folderPath&gt;&quot;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>]</span>)</span><br><span class="hljs-meta">@cross_origin()</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span>(<span class="hljs-params">folderPath</span>):</span><br>    ...<br></code></pre></td></tr></table></figure><p><code>@app.route()</code>指定了路径和请求方法；</p><p><code>@cross_origin()</code>则是为了实现API的跨域访问，使得客户端Web界面得以操作服务器端的API。</p><h3 id="服务器端路由"><a href="#服务器端路由" class="headerlink" title="服务器端路由"></a>服务器端路由</h3><p>服务器端的路由设计中，<code>/api</code> 用于RESTful API，<code>/app</code> 用于返回HTML界面。</p><p>需要注意的几点：</p><ol><li>以下的API设计中，格式均对齐为<code>/api/(file|folder)/[a-z]+/&lt;path&gt;?</code>，这是为了防止路径名称与API产生冲突。作为简易实现的功能，严格来说不是严谨的设计。</li><li>作为服务器端，如果要让客户端利用API，需要提供跨域访问支持。这里使用了Python的<code>flask_cors</code>包，并对每个API添加<code>@cross_origin()</code>支持。</li><li>目前设计的API中，除发生未知的系统错误外，均返回JSON字串，HTTP状态码均为200（虽然大部分JSON字串有一个<code>state</code>属性，写法仿照HTTP返回状态码）。这只是简易实现功能，不是严谨的设计。在Flask中，返回错误状态码可以使用<code>abort</code>方法，可以通过<code>from flask import abort</code>引入。</li><li>如果是URL路径不存在，Flask默认返回404状态码。</li></ol><h4 id="GET-api-folder-basic-lt-path-folderPath-gt"><a href="#GET-api-folder-basic-lt-path-folderPath-gt" class="headerlink" title="GET /api/folder/basic/&lt;path:folderPath&gt;"></a>GET <code>/api/folder/basic/&lt;path:folderPath&gt;</code></h4><p>获取指定目录下的文件（包含文件夹）信息。</p><p><strong>返回JSON格式</strong>：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<br>    <span class="hljs-attr">&quot;files&quot;</span>:[<br>        &#123;<br>            <span class="hljs-attr">&quot;name&quot;</span>: <span class="hljs-string">&quot;FileName&quot;</span>, <span class="hljs-comment">//文件名</span><br>            <span class="hljs-attr">&quot;path&quot;</span>: <span class="hljs-string">&quot;pathx/pathy&quot;</span>, <span class="hljs-comment">//文件所在路径 </span><br>            <span class="hljs-attr">&quot;type&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//文件类型，分为三类：0为文件夹，1为文件，2为其他</span><br>            <span class="hljs-attr">&quot;size&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">//文件大小，单位为字节。该属性不对type===0（即文件夹）有效</span><br>            <span class="hljs-attr">&quot;mtime&quot;</span>: <span class="hljs-string">&quot;2021-03-24 22:39:32&quot;</span> <span class="hljs-comment">//文件修改时间</span><br>        &#125;,<br>        ...<br>    ]<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="GET-api-folder-basic"><a href="#GET-api-folder-basic" class="headerlink" title="GET /api/folder/basic/"></a>GET <code>/api/folder/basic/</code></h4><p>获取根目录下的文件信息。</p><p><strong>返回JSON格式</strong>：同上。</p><h4 id="GET-api-file-check-lt-path-filePath-gt"><a href="#GET-api-file-check-lt-path-filePath-gt" class="headerlink" title="GET /api/file/check/&lt;path:filePath&gt;"></a>GET <code>/api/file/check/&lt;path:filePath&gt;</code></h4><p>检查给出完整路径的文件（夹）是否存在。</p><p><em>注：由于下文一些API针对文件（夹）名冲突做了不同处理，HTML界面实际并未利用到此API。</em></p><p><strong>返回JSON格式</strong>：</p><ul><li><p>存在：<code>&#123;&quot;status&quot;: 200&#125;</code></p></li><li><p>不存在：<code>&#123;&quot;status&quot;: 404&#125;</code></p></li></ul><h4 id="POST-api-folder-basic-lt-path-folderPath-gt"><a href="#POST-api-folder-basic-lt-path-folderPath-gt" class="headerlink" title="POST /api/folder/basic/&lt;path:folderPath&gt;"></a>POST <code>/api/folder/basic/&lt;path:folderPath&gt;</code></h4><p>在指定目录<strong>上传文件</strong>。</p><p><strong>HTTP请求体</strong>：提交内容为表单数据，<code>file</code>项为二进制（即上传的文件）内容。</p><p><strong>冲突检测</strong>：如果该目录下已经有同名文件，则将上传的文件命名为<code>[非后缀名] - 副本[.后缀名] </code>保存。如果仍然存在命名冲突，则尝试命名为<code>[非后缀名] - 副本 (2)[.后缀名] </code>, <code>[非后缀名] - 副本 (3)[.后缀名] </code>……直至避开冲突。</p><p><strong>返回JSON格式</strong>：<code>&#123;&quot;status&quot;: 200&#125;</code></p><h4 id="POST-api-folder-basic"><a href="#POST-api-folder-basic" class="headerlink" title="POST /api/folder/basic"></a>POST <code>/api/folder/basic</code></h4><p>在根目录<strong>上传文件</strong>。</p><p><strong>HTTP请求体、冲突检测、返回JSON格式</strong>：同上。</p><h4 id="PUT-api-folder-basic-lt-path-folderPath-gt"><a href="#PUT-api-folder-basic-lt-path-folderPath-gt" class="headerlink" title="PUT /api/folder/basic/&lt;path:folderPath&gt;"></a>PUT <code>/api/folder/basic/&lt;path:folderPath&gt;</code></h4><p>为指定目录下的指定文件（夹）<strong>重命名</strong>。</p><p><strong>HTTP请求体</strong>：<code>&#123;&quot;src&quot;:&quot;原名称&quot;,&quot;dst&quot;:&quot;新名称&quot;&#125;</code>。</p><p><strong>文件（夹）名称合法性检测</strong>：拒绝文件（夹）名出现<code>\</code> <code>/</code> <code>:</code> <code>?</code> <code>&lt;</code> <code>&gt;</code>  <code>*</code> 等特殊字符。</p><p><strong>冲突检测</strong>：在这里，不允许新名称与当前目录下其他文件的名称有冲突。</p><p><strong>返回JSON格式</strong>：</p><ul><li>重命名成功，或原名称与新名称相同：<code>&#123;&quot;status&quot;: 200&#125;</code></li><li>请求体不合法：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No data given&quot;&#125;</code>或<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No source file or destination file given&quot;&#125;</code></li><li>文件（夹）名称有特殊字符：<code>&#123;&quot;status&quot;: 403, &quot;msg&quot;: &quot;Illegal file or folder name&quot;&#125;</code></li><li>源文件不存在：<code>&#123;&quot;status&quot;: 404, &quot;msg&quot;: &quot;Source file does not exist&quot;&#125;</code></li><li>新名称与当前目录下其他文件的名称冲突：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;Destination file exists&quot;&#125;</code></li></ul><h4 id="PUT-api-folder-basic"><a href="#PUT-api-folder-basic" class="headerlink" title="PUT /api/folder/basic/"></a>PUT <code>/api/folder/basic/</code></h4><p>为根目录下的指定文件（夹）<strong>重命名</strong>。</p><p><strong>HTTP请求体、文件（夹）名称合法性检测、冲突检测、返回JSON格式</strong>：同上。</p><h4 id="DELETE-api-folder-basic-lt-path-folderPath-gt"><a href="#DELETE-api-folder-basic-lt-path-folderPath-gt" class="headerlink" title="DELETE /api/folder/basic/&lt;path:folderPath&gt;"></a>DELETE <code>/api/folder/basic/&lt;path:folderPath&gt;</code></h4><p><strong>删除</strong>指定目录下的指定文件（夹）。</p><p><strong>HTTP请求体</strong>：<code>&#123;&quot;src&quot;:&quot;要删除的文件（夹）名称&quot;&#125;</code>。</p><p><strong>返回JSON格式</strong>：</p><ul><li>删除成功，或原名称与新名称相同：<code>&#123;&quot;status&quot;: 200&#125;</code></li><li>请求体不合法：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No data given&quot;&#125;</code>或<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No source file or destination file given&quot;&#125;</code></li><li>源文件不存在：<code>&#123;&quot;status&quot;: 404, &quot;msg&quot;: &quot;Source file does not exist&quot;&#125;</code></li><li>没有删除权限：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;Permission refused&quot;&#125;</code></li></ul><h4 id="DELETE-api-folder-basic"><a href="#DELETE-api-folder-basic" class="headerlink" title="DELETE /api/folder/basic/"></a>DELETE <code>/api/folder/basic/</code></h4><p><strong>删除</strong>根目录下的指定文件（夹）。</p><p><strong>HTTP请求体、返回JSON格式</strong>：同上。</p><h4 id="POST-api-folder-new-lt-path-folderPath-gt"><a href="#POST-api-folder-new-lt-path-folderPath-gt" class="headerlink" title="POST /api/folder/new/&lt;path:folderPath&gt;"></a>POST <code>/api/folder/new/&lt;path:folderPath&gt;</code></h4><p>在指定目录下<strong>新建文件夹</strong>。</p><p><strong>HTTP请求体</strong>：<code>&#123;&quot;src&quot;:&quot;文件夹名称&quot;&#125;</code>。</p><p><strong>文件夹名称合法性检测</strong>：拒绝文件夹名出现<code>\</code> <code>/</code> <code>:</code> <code>?</code> <code>&lt;</code> <code>&gt;</code> <code>*</code> 等特殊字符。</p><p><strong>冲突检测</strong>：在这里，不允许文件夹名称与当前目录下其他文件夹的名称有冲突。</p><p><strong>返回JSON格式</strong>：</p><ul><li><p>删除成功，或原名称与新名称相同：<code>&#123;&quot;status&quot;: 200&#125;</code></p></li><li><p>请求体不合法：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No data given&quot;&#125;</code>或<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No folder name given&quot;&#125;</code></p></li><li><p>文件夹名称有特殊字符：<code>&#123;&quot;status&quot;: 403, &quot;msg&quot;: &quot;Illegal folder name&quot;&#125;</code></p></li><li><p>文件夹名称与当前目录下其他文件夹的名称冲突：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;Destination folder exists&quot;&#125;</code></p></li></ul><h4 id="POST-api-folder-new"><a href="#POST-api-folder-new" class="headerlink" title="POST /api/folder/new/"></a>POST <code>/api/folder/new/</code></h4><p>在根目录下<strong>新建文件夹</strong>。</p><p><strong>HTTP请求体</strong>、<strong>文件夹名称合法性检测</strong>、<strong>冲突检测</strong>、<strong>返回JSON格式</strong>：同上。</p><h4 id="PUT-api-file-copy-lt-path-filePath-gt"><a href="#PUT-api-file-copy-lt-path-filePath-gt" class="headerlink" title="PUT /api/file/copy/&lt;path:filePath&gt;"></a>PUT <code>/api/file/copy/&lt;path:filePath&gt;</code></h4><p><strong>复制</strong>指定路径下的文件（夹）到指定位置文件夹下。</p><p>指定位置文件夹如不存在则新建。</p><p><strong>HTTP请求体</strong>：<code>&#123;&quot;dst&quot;:&quot;目标文件夹名称&quot;&#125;</code>。</p><p><strong>路径名称合法性检测</strong>：目标文件夹路径不得出现 <code>:</code> <code>?</code> <code>&lt;</code> <code>&gt;</code> <code>*</code> 等特殊字符。</p><p><strong>冲突检测</strong>：</p><p>以下内容也适用于目标文件夹名称就是当前文件（夹）所在文件夹的情况。</p><p>如果该目录下已经有同名文件，则将复制的文件命名为<code>[非后缀名] - 副本[.后缀名] </code>保存。如果仍然存在命名冲突，则尝试命名为<code>[非后缀名] - 副本 (2)[.后缀名] </code>, <code>[非后缀名] - 副本 (3)[.后缀名] </code>……直至避开冲突。</p><p>如果该目录下已经有同名文件夹，则将复制的文件夹命名为<code>[文件夹名] - 副本 </code>保存。如果仍然存在命名冲突，则尝试命名为<code>[文件夹名] - 副本 (2) </code>, <code>[文件夹名] - 副本 (3)</code>……直至避开冲突。</p><p><strong>返回JSON格式</strong>：</p><ul><li>复制成功：<code>&#123;&quot;status&quot;: 200&#125;</code></li><li>要复制的文件（夹）不存在：<code>&#123;&quot;status&quot;: 404, &quot;msg&quot;: &quot;File not found&quot;&#125;</code></li><li>请求体不合法：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No data given&quot;&#125;</code>或<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No destination folder given&quot;&#125;</code></li><li>目标文件夹路径名称不合法：<code>&#123;&quot;status&quot;: 403, &quot;msg&quot;: &quot;Illegal path&quot;&#125;</code></li><li>复制失败：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;错误信息&quot;&#125;</code></li></ul><h4 id="PUT-api-file-move-lt-path-filePath-gt"><a href="#PUT-api-file-move-lt-path-filePath-gt" class="headerlink" title="PUT /api/file/move/&lt;path:filePath&gt;"></a>PUT <code>/api/file/move/&lt;path:filePath&gt;</code></h4><p><strong>移动</strong>指定路径下的文件（夹）到指定位置文件夹下。</p><p>指定位置文件夹如不存在则新建。</p><p><strong>HTTP请求体</strong>：<code>&#123;&quot;dst&quot;:&quot;目标文件夹名称&quot;&#125;</code>。</p><p><strong>路径名称合法性检测</strong>：目标文件夹路径不得出现 <code>:</code> <code>?</code> <code>&lt;</code> <code>&gt;</code>  <code>*</code> 等特殊字符。</p><p><strong>冲突检测</strong>：</p><p>当目标文件夹名称就是当前文件（夹）所在文件夹时，不做处理，返回<code>&#123;&quot;status&quot;: 200&#125;</code>。</p><p>如果该目录下已经有同名文件，则将移动的文件命名为<code>[非后缀名] - 副本[.后缀名] </code>保存。如果仍然存在命名冲突，则尝试命名为<code>[非后缀名] - 副本 (2)[.后缀名] </code>, <code>[非后缀名] - 副本 (3)[.后缀名] </code>……直至避开冲突。</p><p>如果该目录下已经有同名文件夹，则将移动的文件夹命名为<code>[文件夹名] - 副本 </code>保存。如果仍然存在命名冲突，则尝试命名为<code>[文件夹名] - 副本 (2) </code>, <code>[文件夹名] - 副本 (3)</code>……直至避开冲突。</p><p><strong>返回JSON格式</strong>：</p><ul><li>移动成功，或目标文件夹名称就是当前文件（夹）所在文件夹：<code>&#123;&quot;status&quot;: 200&#125;</code></li><li>要移动的文件（夹）不存在：<code>&#123;&quot;status&quot;: 404, &quot;msg&quot;: &quot;File not found&quot;&#125;</code></li><li>请求体不合法：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No data given&quot;&#125;</code>或<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;No destination folder given&quot;&#125;</code></li><li>目标文件夹路径名称不合法：<code>&#123;&quot;status&quot;: 403, &quot;msg&quot;: &quot;Illegal path&quot;&#125;</code></li><li>移动失败：<code>&#123;&quot;status&quot;: 400, &quot;msg&quot;: &quot;错误信息&quot;&#125;</code></li></ul><hr><p>以下为HTML界面路由，服务器端与客户端基本一致。</p><h3 id="客户端路由"><a href="#客户端路由" class="headerlink" title="客户端路由"></a>客户端路由</h3><h4 id="GET-app-lt-path-folderPath-gt-及GET-app"><a href="#GET-app-lt-path-folderPath-gt-及GET-app" class="headerlink" title="GET /app/&lt;path:folderPath&gt;及GET /app/"></a>GET <code>/app/&lt;path:folderPath&gt;</code>及GET <code>/app/</code></h4><p>返回HTML界面，显示指定目录及根目录下的情况。界面效果详见下节。</p><h2 id="Web界面展示"><a href="#Web界面展示" class="headerlink" title="Web界面展示"></a>Web界面展示</h2><p>这里做了简要截图，也可详见演示视频。</p><h3 id="基本界面"><a href="#基本界面" class="headerlink" title="基本界面"></a>基本界面</h3><p>界面左上方为网页标题，下有四个按钮，分别为：根目录、刷新、新建文件夹、上传（文件）。</p><p>接着是文件列表。对于非根目录，还有一行<code>..</code>的链接返回上一级目录。</p><p>每个文件（夹）根据文件类型配套不同图标。文件夹有链接可以访问；文件则显示具体大小。文件和文件夹均显示最近修改时间。</p><p>对于每个文件（夹），均提供四种操作，分别为：复制、移动、重命名、删除。</p><p>最下方显示作者和创作年份。</p><p><img src="/images/MW1-%E5%9F%BA%E6%9C%AC%E7%95%8C%E9%9D%A2.png" alt="基本界面"></p><h3 id="提示框"><a href="#提示框" class="headerlink" title="提示框"></a>提示框</h3><p>新建、重命名、复制、移动提示框（以重命名提示框为例）：</p><p><img src="/images/MW1-%E9%87%8D%E5%91%BD%E5%90%8D%E6%8F%90%E7%A4%BA%E6%A1%86.png" alt="重命名提示框"></p><p>删除提示框：</p><p><img src="/images/MW1-%E5%88%A0%E9%99%A4%E6%8F%90%E7%A4%BA%E6%A1%86.png" alt="删除提示框"></p><h2 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h2><p>本次实验实现了一个最简单的基于网络的远程文件管理应用，完成了实验所有要求并做了一些合法性检测，设计了相对简洁美观的界面。</p><p>由于只是简易实现功能，尚有以下不足之处：</p><ul><li><p>API命名规范</p></li><li><p>请求和返回内容设计较为随意</p></li><li><p>未进行充分测试，难免bug（如文件操作权限不足在API中没有全部体现）</p></li><li><p>未运用Vue.js等前端框架，纯手写jQuery，代码较为繁琐</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>中間件</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>Flask</tag>
      
      <tag>jQuery</tag>
      
      <tag>CORS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>念奴嬌·遊集美學村</title>
    <link href="/poem/TsipbiHaktshngTrip/"/>
    <url>/poem/TsipbiHaktshngTrip/</url>
    
    <content type="html"><![CDATA[<p><em>遊集美學村，感嘉庚先生愛國精神，爲廈大精神之首。</em><br><em>百年校慶臨近，乃賦斯篇，颂先賢而勉吾儕。</em></p><span id="more"></span><p><strong>潯江盡處</strong><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="集美舊稱潯尾、盡尾，因閩南方言音近而雅化地名。">[1]</span></a></sup>，<br>見樓羣列坐，<br><strong>黌門</strong><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="學校的門，泛指集美學村的衆多學校。">[2]</span></a></sup>雄偉。<br><strong>燕尾朱甍垣壁築，</strong><br><strong>合璧中西精美</strong><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="兩句寫集美學村一帶中西合璧的嘉庚式建築風格。「燕尾朱甍」即閩南傳統風格的燕尾脊；「垣壁」則是西式風格的石磚牆：統稱「穿西裝，戴斗笠」。又，「合璧中西精美」暗喻「集美」地名。">[3]</span></a></sup>。<br>世紀風雲，<br>星移斗轉，<br><strong>蔭德興桑梓</strong><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="讚頌陳嘉庚先生當年興辦集美學校回報家鄉振興中華的義舉，時至今日集美人民仍然享受着嘉庚先生留下的這份德澤。">[4]</span></a></sup>。<br><strong>百年憧憬，</strong><br><strong>八閩增益文斐</strong><sup id="fnref:5" class="footnote-ref"><a href="#fn:5" rel="footnote"><span class="hint--top hint--rounded" aria-label="讚頌嘉庚先生在一個世紀前先後創辦集美學校（1918年）、廈門大學（1921年）等一系列舉措是爲了提振當時近乎一窮二白的福建現代文化教育事業；歷經百年，八閩大地因集美學村和廈大增添了許多光輝。">[5]</span></a></sup>。  </p><p>但眺<strong>高集橋橫</strong><sup id="fnref:6" class="footnote-ref"><a href="#fn:6" rel="footnote"><span class="hint--top hint--rounded" aria-label="指從高崎到集美的廈門大橋。之前則是高集海堤，由嘉庚先生在上世紀五十年代倡議修築。高集海堤在幾十年前一直是廈門島與大陸唯一的陸路通道；之後廈門大橋也是廈門島與大陸聯通的第一座大橋。">[6]</span></a></sup>，<br>濤回浪湧，<br><strong>解放豐碑峙</strong><sup id="fnref:7" class="footnote-ref"><a href="#fn:7" rel="footnote"><span class="hint--top hint--rounded" aria-label="指集美鰲園內的集美解放紀念碑。">[7]</span></a></sup>。<br><strong>咫尺波津臨廈島，</strong><br><strong>終歲面南凝視</strong><sup id="fnref:8" class="footnote-ref"><a href="#fn:8" rel="footnote"><span class="hint--top hint--rounded" aria-label="鰲園內集美解放紀念碑旁有陳嘉庚墓。紀念碑和墓均面向咫尺對岸的廈門島。">[8]</span></a></sup>。<br><strong>今昔微言</strong><sup id="fnref:9" class="footnote-ref"><a href="#fn:9" rel="footnote"><span class="hint--top hint--rounded" aria-label="指鰲園門廊兩側的歷史故事浮雕以及集美解放紀念碑基座一系列帶有教育啓迪民衆性質的浮雕。">[9]</span></a></sup>，<br><strong>馬前占課</strong><sup id="fnref:10" class="footnote-ref"><a href="#fn:10" rel="footnote"><span class="hint--top hint--rounded" aria-label="指鰲園門廊左側的浮雕有假託諸葛亮預言讖語的《馬前課》節選故事，根據嘉庚先生的解釋描繪了從清朝到新中國成立的歷史事件。雖說預言本是迷信，卻也從中體現了嘉庚先生對共產黨和新中國的讚美之情。">[10]</span></a></sup>，<br>誰會<strong>輿圖</strong><sup id="fnref:11" class="footnote-ref"><a href="#fn:11" rel="footnote"><span class="hint--top hint--rounded" aria-label="指集美解放紀念碑與陳嘉庚墓之間的照壁背面大有深意的五幅地圖：最上面爲世界地圖，表達了嘉庚先生擁護世界和平的願望；其下從左到右分別爲同安縣（集美和廈門島原來均屬同安縣）、臺灣省（臺灣原屬福建）、福建省、中國地圖，表達了嘉庚先生的政治理想：對家鄉的熱愛和對祖國統一的盼望。">[11]</span></a></sup>旨？<br><strong>鷺鷥</strong><sup id="fnref:12" class="footnote-ref"><a href="#fn:12" rel="footnote"><span class="hint--top hint--rounded" aria-label="即白鷺，爲廈門市鳥。廈門島早期形似白鷺，雅稱鷺島。">[12]</span></a></sup>飛過，<br>遠洋尋夢遊子。  </p><section class="footnotes"><h2>註</h2><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>集美舊稱潯尾、盡尾，因閩南方言音近而雅化地名。<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>學校的門，泛指集美學村的衆多學校。<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>兩句寫集美學村一帶中西合璧的嘉庚式建築風格。「燕尾朱甍」即閩南傳統風格的燕尾脊；「垣壁」則是西式風格的石磚牆：統稱「穿西裝，戴斗笠」。又，「合璧中西精美」暗喻「集美」地名。<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>讚頌陳嘉庚先生當年興辦集美學校回報家鄉振興中華的義舉，時至今日集美人民仍然享受着嘉庚先生留下的這份德澤。<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:5" class="footnote-text"><span>讚頌嘉庚先生在一個世紀前先後創辦集美學校（1918年）、廈門大學（1921年）等一系列舉措是爲了提振當時近乎一窮二白的福建現代文化教育事業；歷經百年，八閩大地因集美學村和廈大增添了許多光輝。<a href="#fnref:5" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:6" class="footnote-text"><span>指從高崎到集美的廈門大橋。之前則是高集海堤，由嘉庚先生在上世紀五十年代倡議修築。高集海堤在幾十年前一直是廈門島與大陸唯一的陸路通道；之後廈門大橋也是廈門島與大陸聯通的第一座大橋。<a href="#fnref:6" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:7" class="footnote-text"><span>指集美鰲園內的集美解放紀念碑。<a href="#fnref:7" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:8" class="footnote-text"><span>鰲園內集美解放紀念碑旁有陳嘉庚墓。紀念碑和墓均面向咫尺對岸的廈門島。<a href="#fnref:8" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:9" class="footnote-text"><span>指鰲園門廊兩側的歷史故事浮雕以及集美解放紀念碑基座一系列帶有教育啓迪民衆性質的浮雕。<a href="#fnref:9" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:10" class="footnote-text"><span>指鰲園門廊左側的浮雕有假託諸葛亮預言讖語的《馬前課》節選故事，根據嘉庚先生的解釋描繪了從清朝到新中國成立的歷史事件。雖說預言本是迷信，卻也從中體現了嘉庚先生對共產黨和新中國的讚美之情。<a href="#fnref:10" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:11" class="footnote-text"><span>指集美解放紀念碑與陳嘉庚墓之間的照壁背面大有深意的五幅地圖：最上面爲世界地圖，表達了嘉庚先生擁護世界和平的願望；其下從左到右分別爲同安縣（集美和廈門島原來均屬同安縣）、臺灣省（臺灣原屬福建）、福建省、中國地圖，表達了嘉庚先生的政治理想：對家鄉的熱愛和對祖國統一的盼望。<a href="#fnref:11" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:12" class="footnote-text"><span>即白鷺，爲廈門市鳥。廈門島早期形似白鷺，雅稱鷺島。<a href="#fnref:12" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>詩詞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>廈門</tag>
      
      <tag>詞</tag>
      
      <tag>平水韻</tag>
      
      <tag>念奴嬌</tag>
      
      <tag>集美</tag>
      
      <tag>陳嘉庚</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>庚子數模國賽後感懷</title>
    <link href="/poem/CUMCM2020/"/>
    <url>/poem/CUMCM2020/</url>
    
    <content type="html"><![CDATA[<p>　</p><span id="more"></span><p>瀚海金山渺渺間<br>商行失汲動愁顏<br>繫<strong>紘</strong><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="(Neural) Network，神經網絡">[1]</span></a></sup>擎<strong>炬</strong><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="PyTorch">[2]</span></a></sup>精思繼<br>罔引珠璣綴拙篇</p><p><img src="/images/CUMCM2020-B.jpg" alt="「非洲地圖」"></p><section class="footnotes"><h3>註</h3><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>(Neural) Network，神經網絡<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>PyTorch<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>詩詞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>詩</tag>
      
      <tag>七言絕句</tag>
      
      <tag>今韻</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python MySQL 失聯及解決辦法</title>
    <link href="/python/PythonMySQLServerGoneAway/"/>
    <url>/python/PythonMySQLServerGoneAway/</url>
    
    <content type="html"><![CDATA[<p>2020/11/27附註：<br>本文闡述的條件是：</p><ul><li><a href="https://pypi.org/project/mysqlclient">mysqlclient 2.0.1</a></li></ul><p>而非<a href="https://pypi.org/project/MySQL-python/">MySQL-python</a>。對於MySQL-python，本身僅支持Python 2而在Python 3下安裝和運行不便（需修改配置），且已事實（de facto）停止維護。<br>事實上，建議使用新的<br><a href="https://pypi.org/project/PyMySQL/">PyMySQL</a>，並在Django項目的<code>settings.py</code>添加：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> pymysql<br><span class="hljs-comment"># Avoid mysqlclient low version error</span><br><span class="hljs-comment"># pymysql.version_info = (1, 4, 0, &quot;final&quot;, 0)</span><br>pymysql.install_as_MySQLdb()<br></code></pre></td></tr></table></figure><p>其中第3行只是在未安裝mysqlclient包的前提下的權宜之計。<br>如果在Linux終端執行<code>pip3 install mysqlclient</code>時出現以下錯誤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Shell">/bin/sh: 1: mysql_config: not found<br>/bin/sh: 1: mariadb_config: not found<br>/bin/sh: 1: mysql_config: not found<br></code></pre></td></tr></table></figure><p>則應該先安裝libmysqlclient-dev：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash">sudo apt install libmysqlclient-dev<br>pip3 install mysqlclient<br></code></pre></td></tr></table></figure><p>-—–</p><p>服務器掛載一個利用uwsgi+Django+MySQL的項目。<br>其中MySQL連接一直未關閉。<br>想要查表，網頁卻報錯了：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">OperationalError at /<br>(2006, &#x27;MySQL server has gone away&#x27;)<br></code></pre></td></tr></table></figure><p>查閱了相關資料，發現是MySQL設置了非活動連接超時：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs Shell"><span class="hljs-meta">mysql&gt;</span><span class="bash"> show variables like <span class="hljs-string">&#x27;%timeout%&#x27;</span>;</span><br>+-----------------------------+----------+<br>| Variable_name               | Value    |<br>+-----------------------------+----------+<br>| connect_timeout             | 10       |<br>| delayed_insert_timeout      | 300      |<br>| have_statement_timeout      | YES      |<br>| innodb_flush_log_at_timeout | 1        |<br>| innodb_lock_wait_timeout    | 50       |<br>| innodb_rollback_on_timeout  | OFF      |<br>| interactive_timeout         | 28800    |<br>| lock_wait_timeout           | 31536000 |<br>| net_read_timeout            | 30       |<br>| net_write_timeout           | 60       |<br>| rpl_stop_slave_timeout      | 31536000 |<br>| slave_net_timeout           | 60       |<br>| wait_timeout                | 28800    |<br>+-----------------------------+----------+<br>13 rows in set (0.00 sec)<br><br></code></pre></td></tr></table></figure><p>於是爲了一探究竟，直接執行<code>set global interactive_timeout=1;</code>，再用Jupyter Notebook運行了下列代碼，通過<code>conn.ping()</code>檢查連接狀態，設置<code>time.sleep(4)</code>（4s&gt;2s），復現問題：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> MySQLdb<br><span class="hljs-keyword">import</span> time<br><br>conn = MySQLdb.connect(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, charset=<span class="hljs-string">&#x27;utf8mb4&#x27;</span> )<br>curs=conn.cursor()<br>curs.execute(<span class="hljs-string">&quot;show variables like &#x27;%timeout%&#x27;;&quot;</span>)<br>res=curs.fetchall()<br>time.sleep(<span class="hljs-number">4</span>)<br><span class="hljs-keyword">try</span>:<br>    conn.ping()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;OK 1&#x27;</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;MySQL connection error 1&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e))<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">try</span>:<br>            conn = MySQLdb.connect(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, charset=<span class="hljs-string">&#x27;utf8mb4&#x27;</span> )<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Fail to reconnect&quot;</span>)<br>            time.sleep(<span class="hljs-number">2</span>)<br>            <span class="hljs-keyword">continue</span><br>            <br>curs=conn.cursor()<br>curs.execute(<span class="hljs-string">&quot;show tables;&quot;</span>)<br>res=curs.fetchall()<br>time.sleep(<span class="hljs-number">4</span>)<br><span class="hljs-keyword">try</span>:<br>    conn.ping()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;OK 2&#x27;</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;MySQL connection error 2&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e))<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">try</span>:<br>            conn = MySQLdb.connect(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, charset=<span class="hljs-string">&#x27;utf8mb4&#x27;</span> )<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Fail to reconnect&quot;</span>)<br>            time.sleep(<span class="hljs-number">2</span>)<br>            <span class="hljs-keyword">continue</span><br><br>curs=conn.cursor()<br>curs.execute(<span class="hljs-string">&quot;show tables;&quot;</span>) <br>res=curs.fetchall()<br>conn.close()<br><span class="hljs-keyword">try</span>:<br>    conn.ping()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;OK 3&#x27;</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;MySQL connection error 3&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e))<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">try</span>:<br>            conn = MySQLdb.connect(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, charset=<span class="hljs-string">&#x27;utf8mb4&#x27;</span> )<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Fail to reconnect&quot;</span>)<br>            time.sleep(<span class="hljs-number">2</span>)<br>            <span class="hljs-keyword">continue</span><br><br>curs=conn.cursor()<br>curs.execute(<span class="hljs-string">&quot;show tables;&quot;</span>) <br>res=curs.fetchall()<br><span class="hljs-keyword">try</span>:<br>    conn.ping()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;OK 4&#x27;</span>)<br><span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;MySQL connection error 4&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">str</span>(e))<br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        <span class="hljs-keyword">try</span>:<br>            conn = MySQLdb.connect(<span class="hljs-string">&quot;localhost&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, <span class="hljs-string">&quot;password&quot;</span>, <span class="hljs-string">&quot;app&quot;</span>, charset=<span class="hljs-string">&#x27;utf8mb4&#x27;</span> )<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Fail to reconnect&quot;</span>)<br>            time.sleep(<span class="hljs-number">2</span>)<br>            <span class="hljs-keyword">continue</span><br></code></pre></td></tr></table></figure><p>結果如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Shell">MySQL connection error 1<br>(2006, &#x27;MySQL server has gone away&#x27;)<br>MySQL connection error 2<br>(2006, &#x27;MySQL server has gone away&#x27;)<br>MySQL connection error 3<br>(2006, &#x27;&#x27;)<br>OK 4<br></code></pre></td></tr></table></figure><p>我們可以如此分析：</p><ul><li>前兩次<code>ping</code>，是在超過了<code>interactive_timeout</code>之後連接，勢必報錯。</li><li>第三次<code>ping</code>，由於之前關閉了<code>conn</code>，也勢必報錯。</li><li>第四次<code>ping</code>，由於緊承上面的代碼且未超過<code>interactive_timeout</code>，故而不報錯。  </li></ul><p><strong>當然，實際部署時，調試用的控制檯輸出應刪去，防止uwsgi後臺掛載時無處輸出而報錯。</strong></p><p><strong>如果不是頻繁查詢，我們更推薦一次查詢一開一關。</strong></p>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>異常處理</tag>
      
      <tag>MySQL</tag>
      
      <tag>Django</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>來自17世紀兮漳州音</title>
    <link href="/hokkien/CameFrom17thCentury/"/>
    <url>/hokkien/CameFrom17thCentury/</url>
    
    <content type="html"><![CDATA[<p><em>Arte de la lengua Chio Chiu</em>，漢名譯做《漳州話語法》，一般認爲是17世紀西班牙天主教道明會（Dominican missionaries）傳教士佮呂宋唐儂（華人）合作佇馬尼拉編寫兮漳州方言語法冊。</p><p>原文用當時兮卡斯蒂利亞語（Castilian，也着是現代所講兮西班牙語）寫成，舉例字詞按照<code>西語羅馬字拼音</code>+<code>漢字</code>+<code>西語解釋（有時陣無）</code>兮順序。原件現在囥佇西班牙巴塞羅那大學圖書館（本文凡是涉及即本冊兮頁面截圖，攏源自這圖書館官網）。</p><p>Chio Chiu，或者拼寫做Chinchew、Chincheo等等，佇17世紀佛朗機（西班牙佮葡萄牙）儂兮各種記錄內面極捷出現，大概指代當時九龍江流域下游，以海澄月港爲中心兮「漳州」港，主要包含當時漳州府海澄縣兼龍溪縣下半縣（現在兮龍海沿海+廈門海滄）各個港口。不過，後來歐洲儂又用Chinchew指代泉州。所以佇閱讀相關歷史文獻兮時陣，愛具體分析，毋通誤賺。</p><!--Markdown![月港](../images/Yuegang.jpg)--><p><img src="/images/Yuegang.jpg" alt="月港"></p><blockquote><p>明代漳州月港。來源：《福建歷史地圖集》</p></blockquote><p>根據Chio Chiu即個拼寫，咱解使推測當時「漳州」可能是讀做Tsionn-tsiu，而毋是現在所講兮Tsiang-tsiu，類似今日「漳浦」Tsionn/Tsiunn-phóo/phóu兮「漳」字仝款用白讀音。</p><p>即本冊本身並無註明具體寫作時間地點。不過，根據冊頁內底出現「萬曆四十八年」（$\rm{B\check{a}ng\ l\overset{\bf{\tiny{|}}}{\grave{e}}g\ s\grave{y}\ ch \overset{\bf{\tiny{|}}}{\grave{a}}p\ p\overset{\bf{\tiny{|}}}{\hat{e}}\ n\bar{i}}$ ，公元1620年）、地名「民希臘」（$\rm{b\bar{i}n\ n\bar{i}\ l\overset{\bf{\tiny{|}}}{\grave{a}}}$，Manila，馬尼拉）、以及「僚氏」（$\rm{di\bar{o}\ s\check{y}}$，西語「上帝」Dios兮譯音）等文字來推測，即本冊大概是信天主教兮傳教士與唐儂合作佇1620年左右記錄，地點極有可能佇當時西班牙殖民兮菲律賓呂宋島馬尼拉。</p><p align="center">  <img src="/images/ArteChioChiuBanlek.jpg" width="50%" height="50%"></p><p>細膩兮儂發現着頂爿「萬」字拼寫做$\rm{B\check{a}ng}$，一定解懷疑是毋是有問題：當時怎解-n/-ng前後鼻不分呢？事實是，即本冊兮其他所在，凡是出現「萬」字，攏總拼寫做$\rm{B\check{a}n}$，總體上-n/-ng分明。所以有可能是當時發音儂一時讀音無準，或者是記錄者拼寫錯誤而且無更改。</p><p>除了即份材料，西班牙儂記錄兮閩南方言文獻猶有：</p><ol><li><em>Doctrina Christiana en letra y lengua china</em>（翻譯做閩南話兮漢字版《基督要理》）。</li></ol><p align="center">  <img src="/images/KiTokIauLi.png" width="60%" height="60%"></p><blockquote><p>漢字本《基督要理》。其中「啞民西士」即Amen Jesus兮漳州話譯音。</p></blockquote><ol start="2"><li>佇前兩三年，對岸「中央研究院」又佫佇菲律賓聖多瑪斯（Santo Tomas）大學檔案館揣着一本<em>Dictionario Hispánico Sinicum</em>（漢名譯做《西班牙語——華語辭典》），收錄詞條倚三萬。</li></ol><p>從公開佇網頂兮資料看，後者佮《漳州話語法》兮羅馬字拼寫方式相似，這兩份應該是目前已知上早成系統兮閩南語拉丁化拼音記錄。</p><p>大體來看，以上文獻反映兮攏是仝款腔口，也着是當時菲律賓華人主要時行兮漳州話。</p><h2 id="判讀示例"><a href="#判讀示例" class="headerlink" title="判讀示例"></a>判讀示例</h2><p>關於《漳州話語法》詳細兮語音與詞彙分析，佇遮畢竟篇幅有限，暫且毋想長篇大論具體展開。<br>既然伊是<strong>來</strong>自四百年前兮資料，咱眼見爲實，罔摕其中關於「來」兮部分字詞做例子來做文章。</p><p align="center">  <img src="/images/ArteChioChiuCame.jpg" width="40%" height="40%"></p><div align="center">  <b>Exenplo(=Ejemplo) del preterito(=pretérito) perfecto<br>   (Example of the past perfect tense)<br>    （過去完成時兮例）<br>  </b></div><table><thead><tr><th>羅馬字 Romanization</th><th>漢字 Chinese Characters</th><th>卡斯蒂利亞語 Castilian</th><th>英語 English</th></tr></thead><tbody><tr><td>$\rm{gu\grave{a}\ l\bar{a}y\ l\grave{a}}$</td><td>我來朥</td><td>yo bine(=vine)</td><td>I came</td></tr><tr><td>$\rm{t\acute{a}\ mu\check{a}^n\ l\bar{a}y}$</td><td>今旦（=晏）來</td><td>denantes uino(=vino)</td><td>came a while ago</td></tr><tr><td>$\rm{l\grave{u}\ l\bar{a}y\ l\grave{a}}$</td><td>你來朥</td><td>tu beniste(=viniste)</td><td>you(singular) came</td></tr><tr><td>$\rm{\acute{y}\ l\bar{a}y\ l\grave{a}}$</td><td>伊來朥</td><td>aquel bino(=vino)</td><td>that came</td></tr><tr><td>$\rm{gu\grave{a}n\ l\bar{a}y\ l\grave{a}}$</td><td>阮來朥</td><td>nosotros venimos</td><td>we came</td></tr><tr><td>$\rm{l\check{u}n\ l\bar{a}y\ l\grave{a}}$</td><td>恁來朥</td><td>vosotros benistes(=vinisteis)</td><td>you(plural) came</td></tr><tr><td>$\rm{\acute{i}n\ l\bar{a}y\ l\grave{a}}$</td><td>因來朥</td><td>aquellos uinieron(=vinieron)</td><td>those came</td></tr></tbody></table><blockquote><ol><li> 英文解釋是筆者附加，僅針對西語解釋直譯。  </li><li>「朥」字原冊簡寫「𦛨」，屬於Unicode擴展漢字，可能顯示不便，今按繁體。  </li><li>西語括弧內面是現代拼寫。  </li><li>「今旦」佇頭前一面寫做「今晏」$\rm{t\acute{a}^n\ mu\check{a}^n}$</li></ol></blockquote><p>頂爿七行是西班牙儂按照家己母語語法理解漳州話，分析「過去完成時態」，比如講以「朥」（相當於「啦」）、「今晏」（即個意思現在好像無聽過）做標誌。</p><p>另一方面，遮對應西語解釋煞無加動詞haber（相當於英語have）兮變位，也佮怹現代標準語法有精差。<del>所以，咱解當通過即份資料，學習古早不標準西班牙語</del>（誤）。</p><p>有通看遘，迄陣兮人稱代詞與現在漳州話主流基本一致。主要差別佇語音上：</p><ul><li>「你」（或者本字「汝」）讀做陰上聲$\rm{l\grave{u}}$（推導今羅馬字lú）（現在兮角美海滄一帶，以及馬來西亞檳城、印尼棉蘭漳腔福建話如此；廈門音理論上本來也是，現在改用更普遍兮漳州音lí）</li><li>「恁」讀做陰去聲$\rm{l\check{u}n}$（推導今羅馬字lùn）（現在讀做lín）</li></ul><h2 id="結語"><a href="#結語" class="headerlink" title="結語"></a>結語</h2><p>明智兮儂知影，《漳州話語法》收錄詞彙畢竟有限，記錄也不一定完全準確。着算是專門記錄漳州話詞彙兮《西班牙語——華語辭典》，也無可能完全記落來當時兮所有語詞。雖然如此，從《漳州話語法》中，咱有通看見四百年前漳州港兮繁榮，以及大航海時代中西文化兮接觸與交流。</p><p>當然，對於即層交流，瞭解歷史兮儂也愛解記着迄陣西班牙殖民者佇菲律賓對華人兮迫害甚至歷次屠殺（間接導致國姓爺鄭成功復臺無偌久現想欲進攻呂宋，可惜伊傷早過身，壯志未酬），解記着繁榮背後兮苦難。</p><p>目<ruby>𥍉<rt>nih</rt></ruby>（⿰目聶）仔過了四個世紀，西班牙已經毋是海上霸主，Chio Chiu自明清鼎革等一系列變故了後也不復往日兮聲名遠揚，逐漸讓位予新興兮廈門港。就且用這跨越時空兮文字記錄，來去追憶迄段悠悠往事，繁華競逐；也希望母語有通流傳發展，而毋是聽候後儂重新看着遮番仔文字資料時，悲恨相續。</p>]]></content>
    
    
    <categories>
      
      <category>閩南語</category>
      
    </categories>
    
    
    <tags>
      
      <tag>漳州</tag>
      
      <tag>歷史</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>關係數據理論</title>
    <link href="/dbs/RelationData/"/>
    <url>/dbs/RelationData/</url>
    
    <content type="html"><![CDATA[<p>　</p><span id="more"></span><h2 id="問題的提出"><a href="#問題的提出" class="headerlink" title="問題的提出"></a>問題的提出</h2><ul><li>關係數據庫邏輯設計<ul><li>針對具體問題構造適合的數據模式</li><li>關係數據庫的規範化理論</li></ul></li><li>關係模式用五元組描述$R(U,D,DOM,F)$<ul><li><strong>R</strong> 關係名</li><li><strong>U</strong> 全體屬性組</li><li><strong>D</strong> 屬性組U中的屬性所來自的域</li><li><strong>DOM</strong> 屬性到域的映射</li><li><strong>F</strong> 屬性組U上的一組數據依賴</li></ul></li></ul><p>視爲三元組$R&lt;U,F&gt;$</p><h3 id="第一範式（1NF-Normal-Form）"><a href="#第一範式（1NF-Normal-Form）" class="headerlink" title="第一範式（1NF, Normal Form）"></a>第一範式（1NF, Normal Form）</h3><ul><li>對一個二維表$R$，如果它所有關係的分量都是不可分的，即稱<strong>關係模式R屬於第一範式</strong>，簡寫爲$R\in\rm{1NF}$</li></ul><h3 id="數據依賴"><a href="#數據依賴" class="headerlink" title="數據依賴"></a>數據依賴</h3><ul><li>一個關係內部屬性與屬性之間的一種約束關係：通過<strong>屬性間值的相等與否</strong>體現數據間的相互聯繫</li><li>現實世界屬性間相互聯繫的抽象</li><li>數據內在的性質</li><li>語義的體現</li></ul><p>數據依賴的類型</p><ul><li>函數依賴（FD）</li><li>多值依賴（MVD）</li></ul><p>函數依賴普遍存在於現實生活中：</p><ul><li>姓名=f(學號)，系名=f(學號)</li></ul><p>記爲$Sno\rightarrow Sname, Sno\rightarrow Sdept$</p><p>對 $R&lt;U,F&gt;$ 而言，部分實例使得U上屬性具有某種“依賴”關係，無法推斷$R$的所有關係均滿足該“依賴”關係。</p><h3 id="例-學校教務數據庫"><a href="#例-學校教務數據庫" class="headerlink" title="例 學校教務數據庫"></a>例 學校教務數據庫</h3><p>包含：</p><ul><li>Sno（學生學號）</li><li>Sdept（所在系）</li><li>Mname（系主任）</li><li>Cno（課程號）</li><li>Grade（成績）</li></ul><p>即：<br>$U={Sno, Sdept, Mname, Cno, Grade}$<br>$F={Sno\rightarrow Sdept, Sdept \rightarrow Mname,(Sno,Cno)\rightarrow Grade}$</p><p>$Student&lt;U,F&gt;$ 存在的問題：系主任Mname</p><ol><li>數據冗餘</li><li>更新異常</li><li>插入異常</li><li>刪除異常</li></ol><h2 id="規範化"><a href="#規範化" class="headerlink" title="規範化"></a>規範化</h2><h3 id="函數依賴"><a href="#函數依賴" class="headerlink" title="函數依賴"></a>函數依賴</h3><p>設$R(U)$是屬性集$U$上的關係模式，$X$,$Y$是$U$的子集，若對於$R(U)$的任意一個可能的關係$r$,$r$中不可能存在兩個元組在$X$上的屬性值相等，而在$Y$上的屬性值不等，則稱$X$函數確定$Y$或$Y$函數依賴於$X$，記作$X\rightarrow Y$。</p><p>屬於語義範疇，只能根據語義來確定一個函數依賴。</p><h4 id="非平凡的函數依賴"><a href="#非平凡的函數依賴" class="headerlink" title="非平凡的函數依賴"></a>非平凡的函數依賴</h4><p>$$X\rightarrow Y,但Y\not\subseteq X$$</p><h4 id="平凡的函數依賴"><a href="#平凡的函數依賴" class="headerlink" title="平凡的函數依賴"></a>平凡的函數依賴</h4><p>$$X\rightarrow Y,但Y\subseteq X$$</p><h4 id="完全函數依賴"><a href="#完全函數依賴" class="headerlink" title="完全函數依賴"></a>完全函數依賴</h4><p>$X\rightarrow Y$，並且對於$X$的任何一個真子集$X’$,都有$X’\not\rightarrow Y$，則稱$Y$對$X$完全函數依賴，記作$X\stackrel{F}{\rightarrow}Y$<br>（胡扯：一一映射）</p><h4 id="部分函數依賴"><a href="#部分函數依賴" class="headerlink" title="部分函數依賴"></a>部分函數依賴</h4><p>若$X\rightarrow Y$, 但$Y$不完全函數依賴於$X$，記作$X\stackrel{P}{\rightarrow}Y$</p><h4 id="傳遞函數依賴"><a href="#傳遞函數依賴" class="headerlink" title="傳遞函數依賴"></a>傳遞函數依賴</h4><p>$X\rightarrow Y(Y\not\subseteq X)$, $Y\not\rightarrow X$, $Y\rightarrow Z$, $Z\not\subseteq Y$</p><ul><li>無損連接</li></ul><h3 id="碼"><a href="#碼" class="headerlink" title="碼"></a>碼</h3><p>設$K$爲$R&lt;U,F&gt;$中的屬性或屬性組合。若$K\stackrel{F}{\rightarrow}U$,則$K$稱爲$R$的一個候選碼。</p><ul><li>若$U$部分函數依賴，則$K$稱爲超碼(Superkey)</li><li>候選碼是最小的超碼，則$K$的任意一個真子集</li></ul><h4 id="主屬性與非主屬性"><a href="#主屬性與非主屬性" class="headerlink" title="主屬性與非主屬性"></a>主屬性與非主屬性</h4><h4 id="全碼-all-key"><a href="#全碼-all-key" class="headerlink" title="全碼(all-key)"></a>全碼(all-key)</h4><p>整個屬性組是碼</p><h4 id="外碼"><a href="#外碼" class="headerlink" title="外碼"></a>外碼</h4><p>X非R的碼，但是另一個關係的碼</p><h3 id="範式"><a href="#範式" class="headerlink" title="範式"></a>範式</h3><p>滿足最低要求的叫第一範式，簡稱$\rm{1NF}$。<br>$$\rm{1NF\supset 2NF\supset 3NF\supset BCNF\supset 4NF\supset 5NF}$$</p><ul><li>規範化</li></ul><h3 id="2NF"><a href="#2NF" class="headerlink" title="2NF"></a>2NF</h3><p>$R\in\rm{1NF}$且每個非主屬性都完全函數依賴於任何一個候選碼，則$R\in\rm{2NF}$</p><p>一個關係不屬於$\rm{2NF}$，則：</p><ul><li>插入異常</li><li>刪除異常</li><li>修改複雜</li></ul><h3 id="3NF"><a href="#3NF" class="headerlink" title="3NF"></a>3NF</h3><p>$R&lt;U,F&gt;\in\rm{1NF}$，若R中不存在這樣的碼X，屬性組Y及非主屬性Z（$Z\not\subseteq Y$）使得$X\rightarrow Y， Y\rightarrow Z$成立，$Y\not\rightarrow X$，則$R&lt;U,F&gt;\in\rm{3NF}$</p><h3 id="BCNF"><a href="#BCNF" class="headerlink" title="BCNF"></a>BCNF</h3><p>$R&lt;U,F&gt;\in\rm{1NF}$，若$X\rightarrow Y$且 $Y\not\subseteq X$時X必含有碼，則$R&lt;U,F&gt;\in\rm{BCNF}$</p><p>換言之，在關係模式$R&lt;U,F&gt;$中，如果每一個決定屬性集都包含候選碼，則$R&lt;U,F&gt;\in\rm{BCNF}$<br>性質：</p><ul><li>所有非主屬性都完全函數依賴於每個候選碼</li><li>所有主屬性都完全函數依賴於每個不包含它的候選碼</li><li>沒有任何屬性完全函數依賴於非碼的任何一種屬性</li></ul><p>$R&lt;U,F&gt;\in\rm{BCNF}\Rightarrow R&lt;U,F&gt;\in\rm{3NF}$</p><h3 id="多值依賴"><a href="#多值依賴" class="headerlink" title="多值依賴"></a>多值依賴</h3><h3 id="4NF"><a href="#4NF" class="headerlink" title="4NF"></a>4NF</h3><p>關係模式$R&lt;U,F&gt;\in\rm{1NF}$，如果對於R的每個非平凡多值依賴$X\rightarrow \rightarrow Y(Y \not\subseteq X)$，X都含有碼。</p><p>限制屬性，不允許有非平凡且非函數依賴的多值依賴。</p><h3 id="將BCNF的R分解成4NF的方法"><a href="#將BCNF的R分解成4NF的方法" class="headerlink" title="將BCNF的R分解成4NF的方法"></a>將BCNF的R分解成4NF的方法</h3><ul><li>假設$R(A,B,C)∈\rm{BCNF}$滿足$A→→B$，$A→→C$，則分解$R$可分解爲$R_1(A,B)$和$R_2(A,C)$</li></ul><h2 id="數據依賴的公理系統"><a href="#數據依賴的公理系統" class="headerlink" title="數據依賴的公理系統"></a>數據依賴的公理系統</h2><p><strong>Armstrong公理系統</strong>：</p><ul><li>A1 自反律 若$Y\subseteq X\subseteq U$，則$X\rightarrow Y$爲$F$所蘊涵</li><li>A2 增廣律 若$X\rightarrow Y$爲$F$所蘊涵，且$Z\subset U$，則$XZ\rightarrow YZ$爲$F$所蘊涵</li><li>A3 傳遞律 若$X\rightarrow Y$及$Y\rightarrow Z$爲$F$所蘊涵，則$X\rightarrow Z$爲$F$所蘊涵</li></ul><p><strong>定理 6.1</strong> Armstrong定理是正確的。</p><p><strong>引理 6.1</strong> $X→A_1A_2…A_{k}$成立的充分必要條件是$X→A_i$成立（$i=1, 2, …, k$）。</p><p><strong>定義6.12</strong> 在關係模式$R&lt;U,F&gt;$中爲$F$所邏輯蘊涵的函數依賴的全體叫作$F$的閉包，記爲$F^{+}$</p><p><strong>定義6.14</strong> 如果$G^{+}=F^{+}$，就說函數依賴集$F$覆蓋$G$（$F$是$G$的覆蓋，或$G$是$F$的覆蓋），或$F$與$G$等價。</p><p><strong>定義6.15</strong> 如果函數依賴集$F$滿足下列條件，則稱$F$爲一個極小函數依賴集，亦稱爲<strong>最小依賴集</strong>或<strong>最小覆蓋</strong>。</p>]]></content>
    
    
    <categories>
      
      <category>數據庫系統</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DBS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CentOS安裝WordPress</title>
    <link href="/centos/CentOSWordPress/"/>
    <url>/centos/CentOSWordPress/</url>
    
    <content type="html"><![CDATA[<p>　</p><span id="more"></span><p>原早only配過Ubuntu server兮WordPress，今伺服器系統是CentOS 7，也來試下。</p><h2 id="基礎工課"><a href="#基礎工課" class="headerlink" title="基礎工課"></a>基礎工課</h2><p>CentOS默認有mariadb（mysql一款分支）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Bash">yum install -y httpd mariadb-server mysql wordpress php php-mysql<br>systemctl start httpd <span class="hljs-comment">#service httpd start嘛解使</span><br>systemctl <span class="hljs-built_in">enable</span> httpd <span class="hljs-comment">#開機自啓動</span><br>systemctl start mariadb<br>systemctl <span class="hljs-built_in">enable</span> mariadb<br></code></pre></td></tr></table></figure><h2 id="配mysql"><a href="#配mysql" class="headerlink" title="配mysql"></a>配mysql</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql">mysql <span class="hljs-operator">-</span>u root <span class="hljs-operator">-</span>p<br><span class="hljs-keyword">CREATE</span> DATABASE wordpress;<br><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">USER</span> wordpressuser<span class="hljs-variable">@localhost</span>;<br><span class="hljs-keyword">SET</span> PASSWORD <span class="hljs-keyword">FOR</span> wordpressuser<span class="hljs-variable">@localhost</span><span class="hljs-operator">=</span> PASSWORD(&quot;password&quot;);<br></code></pre></td></tr></table></figure><p>然後對應修改<code>/usr/share/wordpress/wp-config.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">// ** MySQL settings - You can get this info from your web host ** //</span><br><span class="hljs-comment">/** The name of the database for WordPress */</span><br>define(<span class="hljs-string">&#x27;DB_NAME&#x27;</span>, <span class="hljs-string">&#x27;wordpress&#x27;</span>);<br><br><span class="hljs-comment">/** MySQL database username */</span><br>define(<span class="hljs-string">&#x27;DB_USER&#x27;</span>, <span class="hljs-string">&#x27;wordpressuser&#x27;</span>);<br><br><span class="hljs-comment">/** MySQL database password */</span><br>define(<span class="hljs-string">&#x27;DB_PASSWORD&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="改httpd"><a href="#改httpd" class="headerlink" title="改httpd"></a>改httpd</h2><p>修改 <code>/etc/httpd/conf/httpd.conf</code>。<br>比如汝欲將wordpress放佇<code>/wordpress</code>路徑：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Shell">AcceptFilter http none<br>AcceptFilter https none<br><br>Alias /wordpress /usr/share/wordpress<br>&lt;Directory /usr/share/wordpress&gt;<br>    Options FollowSymLinks<br>    AllowOverride Limit Options FileInfo<br>    DirectoryIndex index.php<br>    Require all granted <br>&lt;/Directory&gt;<br>&lt;Directory /usr/share/wordpress/wp-content&gt;<br>    Options FollowSymLinks<br>    Require all granted<br>&lt;/Directory&gt;<br></code></pre></td></tr></table></figure><p>佇Apache 2.4版本，單</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Shell">Order allow, deny<br>Allow from all<br></code></pre></td></tr></table></figure><p>兩句袂行（報權限錯誤403），只好加</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">Require all granted<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>CentOS</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>CentOS</tag>
      
      <tag>WordPress</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python異常類型彙整</title>
    <link href="/python/PythonError/"/>
    <url>/python/PythonError/</url>
    
    <content type="html"><![CDATA[<p>　</p><span id="more"></span><p>（本文所述Python版本：3.7）</p><p>Python的所有異常均繼承自<code>BaseExpection</code>類。</p><p>以<code>try ... expect ...</code>語句可對異常作相應處理。</p><p>用戶也可基於內置異常類派生新的異常類。如：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Networkerror</span>(<span class="hljs-params">RuntimeError</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, arg</span>):</span><br>        self.args = arg<br></code></pre></td></tr></table></figure><h2 id="常用內置標準異常類"><a href="#常用內置標準異常類" class="headerlink" title="常用內置標準異常類"></a>常用內置標準異常類</h2><p>參考：<a href="https://docs.python.org/3.7/library/exceptions.html">官方文檔</a>或<a href="https://www.runoob.com/python/python-exceptions.html">菜鳥教程</a></p><table><thead><tr><th align="left">異常名稱</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left">BaseException</td><td align="left">所有異常的基類</td></tr><tr><td align="left">SystemExit</td><td align="left">解釋器請求退出</td></tr><tr><td align="left">KeyboardInterrupt</td><td align="left">用戶中斷執行(通常是輸入^C)</td></tr><tr><td align="left">GeneratorExit</td><td align="left">生成器(generator)發生異常來通知退出</td></tr><tr><td align="left">Exception</td><td align="left">常規錯誤的基類（非系統異常）</td></tr><tr><td align="left">ArithmeticError</td><td align="left">所有數值計算錯誤的基類</td></tr><tr><td align="left">BufferError</td><td align="left">緩衝區相關操作無法執行</td></tr><tr><td align="left">LookupError</td><td align="left">無效數據查詢的基類</td></tr><tr><td align="left">StopIteration</td><td align="left">迭代器沒有更多的值</td></tr><tr><td align="left">StandardError</td><td align="left">所有的內建標準異常的基類</td></tr><tr><td align="left">FloatingPointError</td><td align="left">浮點計算錯誤</td></tr><tr><td align="left">OverflowError</td><td align="left">數值運算超出最大限制</td></tr><tr><td align="left">ZeroDivisionError</td><td align="left">除(或取模)零 (所有數據類型)</td></tr><tr><td align="left">AssertionError</td><td align="left">斷言語句失敗</td></tr><tr><td align="left">AttributeError</td><td align="left">對象沒有這個屬性</td></tr><tr><td align="left">EOFError</td><td align="left">沒有內建輸入,到達EOF 標記</td></tr><tr><td align="left">EnvironmentError</td><td align="left">操作系統錯誤的基類</td></tr><tr><td align="left">IOError</td><td align="left">輸入/輸出操作失敗</td></tr><tr><td align="left">OSError</td><td align="left">操作系統錯誤</td></tr><tr><td align="left">WindowsError</td><td align="left">系統調用失敗</td></tr><tr><td align="left">ImportError</td><td align="left">導入模塊/對象失敗</td></tr><tr><td align="left">IndexError</td><td align="left">序列中沒有此索引(index)</td></tr><tr><td align="left">KeyError</td><td align="left">映射中沒有這個鍵</td></tr><tr><td align="left">MemoryError</td><td align="left">內存溢出錯誤(對於Python 解釋器不是致命的)</td></tr><tr><td align="left">NameError</td><td align="left">未聲明/初始化對象 (沒有屬性)</td></tr><tr><td align="left">UnboundLocalError</td><td align="left">訪問未初始化的本地變量</td></tr><tr><td align="left">ReferenceError</td><td align="left">弱引用(Weak reference)試圖訪問已經垃圾回收了的對象</td></tr><tr><td align="left">RuntimeError</td><td align="left">一般的運行時錯誤</td></tr><tr><td align="left">NotImplementedError</td><td align="left">尚未實現的方法</td></tr><tr><td align="left">SyntaxError</td><td align="left">Python 語法錯誤</td></tr><tr><td align="left">IndentationError</td><td align="left">縮進錯誤</td></tr><tr><td align="left">TabError</td><td align="left">Tab 和空格混用</td></tr><tr><td align="left">SystemError</td><td align="left">一般的解釋器系統錯誤</td></tr><tr><td align="left">TypeError</td><td align="left">對類型無效的操作</td></tr><tr><td align="left">ValueError</td><td align="left">傳入無效的參數</td></tr><tr><td align="left">UnicodeError</td><td align="left">Unicode 相關的錯誤</td></tr><tr><td align="left">UnicodeDecodeError</td><td align="left">Unicode 解碼時的錯誤</td></tr><tr><td align="left">UnicodeEncodeError</td><td align="left">Unicode 編碼時錯誤</td></tr><tr><td align="left">UnicodeTranslateError</td><td align="left">Unicode 轉換時錯誤</td></tr><tr><td align="left">Warning</td><td align="left">警告的基類</td></tr><tr><td align="left">DeprecationWarning</td><td align="left">關於被棄用的特徵的警告</td></tr><tr><td align="left">FutureWarning</td><td align="left">關於構造將來語義會有改變的警告</td></tr><tr><td align="left">OverflowWarning</td><td align="left">舊的關於自動提升爲長整型(long)的警告</td></tr><tr><td align="left">PendingDeprecationWarning</td><td align="left">關於特性將會被廢棄的警告</td></tr><tr><td align="left">RuntimeWarning</td><td align="left">可疑的運行時行爲(runtime behavior)的警告</td></tr><tr><td align="left">SyntaxWarning</td><td align="left">可疑的語法的警告</td></tr><tr><td align="left">UserWarning</td><td align="left">用戶代碼生成的警告</td></tr></tbody></table><h2 id="Errno（派生自OSError）"><a href="#Errno（派生自OSError）" class="headerlink" title="Errno（派生自OSError）"></a>Errno（派生自OSError）</h2><p>源自C語言的<code>errno</code>。</p><p>另，Python的<code>error</code>模塊復刻了Linux C的<code>errno.h</code>。</p><p>比如socket套接的IP地址權限不足，則會提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">[Errno 99] Cannot assign requested address.<br></code></pre></td></tr></table></figure><h2 id="WinError（派生自OSError）"><a href="#WinError（派生自OSError）" class="headerlink" title="WinError（派生自OSError）"></a>WinError（派生自OSError）</h2><p>Windows系統下，提供Windows錯誤碼。</p><p><a href="https://docs.microsoft.com/en-us/windows/win32/debug/system-error-codes">所有的Win32錯誤信息（英文）</a></p><p>比如在Windows系統socket套接8080端口，則會提示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Bash">[WinError 10013] 以一种访问权限不允许的方式做了一个访问套接字的尝试。<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Python</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>socket</tag>
      
      <tag>異常處理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git雜記2：復刻的repo怎拉取原repo的commit更新</title>
    <link href="/git/GitNotes-2/"/>
    <url>/git/GitNotes-2/</url>
    
    <content type="html"><![CDATA[<p>　</p><span id="more"></span><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Bash">git remote add <span class="hljs-built_in">source</span> git@example.com:xxx/yyy.git<br>git pull <span class="hljs-built_in">source</span> master<br>git push origin master<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MSVC文件流的EOF</title>
    <link href="/cpp/MSVCFileStreamEOF/"/>
    <url>/cpp/MSVCFileStreamEOF/</url>
    
    <content type="html"><![CDATA[<p>　</p><span id="more"></span><p>項目需要用到C/C++文件流，原本讀寫UTF-8和GBK格式一切正常，但遇到jpg文件老是提前終止，甚至讀取UTF-16LE格式的文本文件也是。<br>調試排錯，發現問題出在了<code>0x1A</code>這個字符。<br>上網查閱資料，發現該字符可表示EOF，要fopen應使用”b”。</p>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>MSVC</tag>
      
      <tag>EOF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git雜記1：按怎刪除以前兮commit記錄？</title>
    <link href="/git/GitNotes-1/"/>
    <url>/git/GitNotes-1/</url>
    
    <content type="html"><![CDATA[<p>介紹兩種：重鍊/變基。</p><span id="more"></span><h1 id="重鍊（Reinitialize）：完全删除以往所有commit記錄"><a href="#重鍊（Reinitialize）：完全删除以往所有commit記錄" class="headerlink" title="重鍊（Reinitialize）：完全删除以往所有commit記錄"></a>重鍊（Reinitialize）：完全删除以往所有commit記錄</h1><p>罔摕家己無用兮repository做例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># Clone your git repo</span><br>git <span class="hljs-built_in">clone</span> https://github.com/unsioer/uselessgittest.git<br><span class="hljs-comment"># Enter your local repo</span><br><span class="hljs-built_in">cd</span> UselessGitTest<br><span class="hljs-comment"># Checkout</span><br>git checkout --orphan latest_branch<br><span class="hljs-comment"># Add all the files</span><br>git add -A<br><span class="hljs-comment"># Commit the changes</span><br>git commit -am <span class="hljs-string">&quot;Reinitialize&quot;</span><br><span class="hljs-comment"># Delete the branch</span><br>git branch -D master<br><span class="hljs-comment"># Rename the current branch to master</span><br>git branch -m master<br></code></pre></td></tr></table></figure><p>上尾，汝只需要<code>push</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># Finally, force update your repository</span><br>git push -f origin master;<br></code></pre></td></tr></table></figure><h1 id="變基（Rebase）：重整以往一寡commit記錄"><a href="#變基（Rebase）：重整以往一寡commit記錄" class="headerlink" title="變基（Rebase）：重整以往一寡commit記錄"></a>變基（Rebase）：重整以往一寡commit記錄</h1><p>若汝毋急於執行頂橛上尾彼句（執行矣也毋畏，再添加厘仔commit做試驗），來試看覓如何通過<ruby>變基<rt>piàn-ki</rt></ruby>（<code>rebase</code>）囥汝以前commit兮烏歷史(XD)，又欲保持其他commit記錄：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># Switch to `master` branch</span><br>git checkout master<br><span class="hljs-comment"># Find commit log. Press q to quit.</span><br>git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p>選擇汝欲修改兮commit(s)之前的任意一條commit記錄：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># Rebase a commit</span><br>git rebase -i c8b2314c0b1768bc1443ae4cdb82ab29878a626e<br></code></pre></td></tr></table></figure><p>咱來看跳出來兮<code>git-rebase-todo</code>，着是聽候汝處理這條commit之後所有commit記錄：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Bash">pick 75198ef Update readme.md<br>pick c119c5b Update readme.md<br>pick ef9700f Update readme.md<br><br><span class="hljs-comment"># Rebase c8b2314..ef9700f onto c8b2314 (3 commands)</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Commands:</span><br><span class="hljs-comment"># p, pick &lt;commit&gt; = use commit</span><br><span class="hljs-comment"># r, reword &lt;commit&gt; = use commit, but edit the commit message</span><br><span class="hljs-comment"># e, edit &lt;commit&gt; = use commit, but stop for amending</span><br><span class="hljs-comment"># s, squash &lt;commit&gt; = use commit, but meld into previous commit</span><br><span class="hljs-comment"># f, fixup &lt;commit&gt; = like &quot;squash&quot;, but discard this commit&#x27;s log message</span><br><span class="hljs-comment"># x, exec &lt;command&gt; = run command (the rest of the line) using shell</span><br><span class="hljs-comment"># b, break = stop here (continue rebase later with &#x27;git rebase --continue&#x27;)</span><br><span class="hljs-comment"># d, drop &lt;commit&gt; = remove commit</span><br><span class="hljs-comment"># l, label &lt;label&gt; = label current HEAD with a name</span><br><span class="hljs-comment"># t, reset &lt;label&gt; = reset HEAD to a label</span><br><span class="hljs-comment"># m, merge [-C &lt;commit&gt; | -c &lt;commit&gt;] &lt;label&gt; [# &lt;oneline&gt;]</span><br><span class="hljs-comment"># .       create a merge commit using the original merge commit&#x27;s</span><br><span class="hljs-comment"># .       message (or the oneline, if no original merge commit was</span><br><span class="hljs-comment"># .       specified). Use -c &lt;commit&gt; to reword the commit message.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># These lines can be re-ordered; they are executed from top to bottom.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># If you remove a line here THAT COMMIT WILL BE LOST.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># However, if you remove everything, the rebase will be aborted.</span><br><span class="hljs-comment">#</span><br><span class="hljs-comment"># Note that empty commits are commented out</span><br></code></pre></td></tr></table></figure><p>所以，若汝欲刪除以往一寡commits，可以改做<code>squash</code>合併，順紲可以<code>reword</code> 、<code>edit</code>等等。</p><p>改好了後，<code>push</code>，收工：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Bash"><span class="hljs-comment"># Finally, force update your repository</span><br>git push -f origin master<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Git</tag>
      
      <tag>GitHub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>彙編語言複習筆記3：程序格式</title>
    <link href="/asm/AsmNotes-3/"/>
    <url>/asm/AsmNotes-3/</url>
    
    <content type="html"><![CDATA[<blockquote><p>彙整自教材及課件。</p></blockquote><span id="more"></span><p>硬指令 僞指令  </p><h1 id="彙編語言程序的開發"><a href="#彙編語言程序的開發" class="headerlink" title="彙編語言程序的開發"></a>彙編語言程序的開發</h1><p>編譯 彙編 連接 調試  </p><h2 id="語句格式"><a href="#語句格式" class="headerlink" title="語句格式"></a>語句格式</h2><p>標號 名字 標識符（大小寫不敏感）<br>保留字：</p><ul><li>硬指令助記符</li><li>僞指令助記符</li><li>操作符：如<code>offset</code> <code>ptr</code></li><li>寄存器名</li><li>預定義符號：如<code>@data</code></li></ul><p>助記符<br>操作數：立即數、寄存器、存儲單元<br>參數：常數、變量名、表達式等<br>註釋<br>分隔符  </p><h2 id="程序格式"><a href="#程序格式" class="headerlink" title="程序格式"></a>程序格式</h2><h3 id="簡化段定義格式（MASM-6-x支持）"><a href="#簡化段定義格式（MASM-6-x支持）" class="headerlink" title="簡化段定義格式（MASM 6.x支持）"></a>簡化段定義格式（MASM 6.x支持）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">.model small<br>.stack<br>...<br>.data<br>...<br>.code<br>.startup<br>...<br>.exit 0<br>...<br>end<br></code></pre></td></tr></table></figure><h3 id="簡化段定義格式（MASM-5-x支持）"><a href="#簡化段定義格式（MASM-5-x支持）" class="headerlink" title="簡化段定義格式（MASM 5.x支持）"></a>簡化段定義格式（MASM 5.x支持）</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">.model small<br>.stack<br>...<br>.data<br>...<br>.code<br>start:  mov     ax, @data<br>        mov     ds, ax<br>...<br>        mov     ax, 4c00h<br>        int     21h<br>...<br>end<br></code></pre></td></tr></table></figure><h3 id="完整段定義格式"><a href="#完整段定義格式" class="headerlink" title="完整段定義格式"></a>完整段定義格式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">stack   segment stack<br>        dw      512 dup(?)<br>stack   ends<br>data    segment<br>...<br>data    ends<br>code    segment &#x27;code&#x27;<br>        assume  cs:code, ds:data, ss:stack<br>start:  mov     ax, data<br>        mov     ds, ax<br>...<br>        mov     ax, 4c00h<br>        int     21h<br>...<br>code    ends<br>        end     start<br></code></pre></td></tr></table></figure><h2 id="開發過程"><a href="#開發過程" class="headerlink" title="開發過程"></a>開發過程</h2><ul><li>編譯：<code>edit.com</code><br><code>edit hello.asm</code></li><li>彙編：<code>ml.exe</code><br><code>ml /c hello.asm</code>或<code>masm hello.asm</code>生成<code>hello.obj</code></li><li>連接：<code>link.exe</code><br><code>link hello.obj</code>生成<code>hello.exe</code><br><code>ml hello.asm</code>自動完成以上兩步。<br><code>ml /fl /sg hello.asm</code>還生成列表文件<code>hello.lst</code>，含源程序和目標代碼。</li><li>調試：<code>debug.exe</code><br><code>debug hello.exe</code></li></ul><h1 id="參數-變量-標號"><a href="#參數-變量-標號" class="headerlink" title="參數 變量 標號"></a>參數 變量 標號</h1><p>數值型參數：</p><ul><li>常數<ul><li>十進制常數：d結尾（可省略）</li><li>十六進制常數：q結尾</li><li>二進制常數：b結尾</li><li>八進制常數：q結尾</li><li>字符串常數：<code>&#39;balabala&#39;</code></li><li>符號常數<ul><li><code>EQU</code>僞指令<br><code>符號名 equ 數值表達式/字符串</code></li><li><code>=</code>僞指令<br><code>符號名 = 數值表達式</code></li></ul></li></ul></li><li>數值表達式<ul><li>算術運算符</li><li>邏輯運算符</li><li>移位運算符</li><li>關係運算符</li><li>高低運算符</li></ul></li></ul><p>變量定義僞指令：<br>變量名 僞指令助記符 初值表</p><ul><li>初值表：數值常數、表達式、<code>?</code>、<code>DUP</code><ul><li><code>DUP</code>格式：<code>重複次數 DUP(重複參數)</code></li></ul></li><li>僞指令助記符：<ul><li><code>DB</code></li><li><code>DW</code></li><li><code>DD</code></li><li>…</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Assembly</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Assembly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>彙編語言複習筆記2：指令系統</title>
    <link href="/asm/AsmNotes-2/"/>
    <url>/asm/AsmNotes-2/</url>
    
    <content type="html"><![CDATA[<blockquote><p>彙整自個人OneNote筆記。</p></blockquote><span id="more"></span><h1 id="指令格式"><a href="#指令格式" class="headerlink" title="指令格式"></a>指令格式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">標號:   指令助記符 目的操作數, 源操作數 ; 註釋<br></code></pre></td></tr></table></figure><h1 id="數據傳送類指令"><a href="#數據傳送類指令" class="headerlink" title="數據傳送類指令"></a>數據傳送類指令</h1><p><strong>重點掌握：<code>MOV</code> <code>XCHG</code> <code>XLAT</code> <code>PUSH</code> <code>POP</code> <code>LEA</code></strong></p><h2 id="通用數據傳送指令"><a href="#通用數據傳送指令" class="headerlink" title="通用數據傳送指令"></a>通用數據傳送指令</h2><h3 id="傳送指令-MOV"><a href="#傳送指令-MOV" class="headerlink" title="傳送指令 MOV"></a>傳送指令 <code>MOV</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>mov     byte ptr [si], 0ah  ; ds:[si]←0ah，字節操作<br>mov     word ptr [si+2], 0bh; ds:[si+2]←0bh，字操作<br></code></pre></td></tr></table></figure><h3 id="交換指令-XCHG"><a href="#交換指令-XCHG" class="headerlink" title="交換指令 XCHG"></a>交換指令 <code>XCHG</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>xchg    reg, reg/mem        ; reg←→reg/mem，也可寫做xchg reg/mem, reg<br></code></pre></td></tr></table></figure><h3 id="換碼指令-XLAT"><a href="#換碼指令-XLAT" class="headerlink" title="換碼指令 XLAT"></a>換碼指令 <code>XLAT</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>xlat                        ; al←ds:[bx+al]<br></code></pre></td></tr></table></figure><h2 id="堆棧操作指令"><a href="#堆棧操作指令" class="headerlink" title="堆棧操作指令"></a>堆棧操作指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>push/pop r16<br></code></pre></td></tr></table></figure><h3 id="進棧指令-PUSH"><a href="#進棧指令-PUSH" class="headerlink" title="進棧指令 PUSH"></a>進棧指令 <code>PUSH</code></h3><p>使<code>SP</code>減2，把一個字操作數存入棧頂。</p><h3 id="出棧指令-POP"><a href="#出棧指令-POP" class="headerlink" title="出棧指令 POP"></a>出棧指令 <code>POP</code></h3><p>把一個字操作數傳送至目的操作數，使<code>SP</code>加2。</p><h2 id="標誌傳送指令"><a href="#標誌傳送指令" class="headerlink" title="標誌傳送指令"></a>標誌傳送指令</h2><p>標誌寄存器傳送指令傳送<code>FLAGS</code>的內容；標誌位操作指令對<code>CF</code> <code>DF</code> <code>IF</code>標誌復位或置位。</p><h3 id="標誌寄存器傳送-LAHF-SAHF-PUSHF-POPF"><a href="#標誌寄存器傳送-LAHF-SAHF-PUSHF-POPF" class="headerlink" title="標誌寄存器傳送 LAHF SAHF PUSHF POPF"></a>標誌寄存器傳送 <code>LAHF</code> <code>SAHF</code> <code>PUSHF</code> <code>POPF</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>lahf                        ; AH←FLAGS的低字節<br>sahf                        ; FLAGS的低字節←AH<br>;（上兩條指令，除AH的第7/6/2/4/0位外任意）<br>pushf                       ; SP←SP-2，SS:[SP]←FLAGS<br>popf                        ; FLAGS←SS:[SP]，SP←SP+2<br><br></code></pre></td></tr></table></figure><h3 id="標誌位操作-CLC-STC-CMC-CLD-STD-CLI-STI"><a href="#標誌位操作-CLC-STC-CMC-CLD-STD-CLI-STI" class="headerlink" title="標誌位操作 CLC STC CMC CLD STD CLI STI"></a>標誌位操作 <code>CLC</code> <code>STC</code> <code>CMC</code> <code>CLD</code> <code>STD</code> <code>CLI</code> <code>STI</code></h3><p>對<code>CF</code>/<code>DF</code>/<code>IF</code>標誌復位或置位。<br>CL：復位爲0<br>ST：置位爲1<br>CM：求反</p><ul><li><p>任意設置進位標誌：<code>CLC</code> <code>STC</code> <code>CMC</code></p></li><li><p>串操作指令：<code>CLD</code> <code>STD</code></p></li><li><p>編寫中斷服務程序時，禁止/允許可屏蔽中斷：<code>CLI</code> <code>STI</code></p></li></ul><h2 id="地址傳送指令"><a href="#地址傳送指令" class="headerlink" title="地址傳送指令"></a>地址傳送指令</h2><h3 id="有效地址傳送指令-LEA"><a href="#有效地址傳送指令-LEA" class="headerlink" title="有效地址傳送指令 LEA"></a>有效地址傳送指令 <code>LEA</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>lea     r16, mem            ; r16←mem的有效地址<br></code></pre></td></tr></table></figure><h3 id="指針傳送指令-LDS-LES"><a href="#指針傳送指令-LDS-LES" class="headerlink" title="指針傳送指令 LDS LES"></a>指針傳送指令 <code>LDS</code> <code>LES</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>lds     r16, mem            ; r16←mem，ds←mem+2<br>les     r16, mem            ; r16←mem，es←mem+2<br></code></pre></td></tr></table></figure><h2 id="輸入輸出指令"><a href="#輸入輸出指令" class="headerlink" title="輸入輸出指令"></a>輸入輸出指令</h2><p>與外設進行數據交換。<br>外設：端口(Port)即I/O地址</p><h3 id="輸入指令-IN"><a href="#輸入指令-IN" class="headerlink" title="輸入指令 IN"></a>輸入指令 <code>IN</code></h3><h3 id="輸出指令-OUT"><a href="#輸出指令-OUT" class="headerlink" title="輸出指令 OUT"></a>輸出指令 <code>OUT</code></h3><h1 id="算術運算類指令"><a href="#算術運算類指令" class="headerlink" title="算術運算類指令"></a>算術運算類指令</h1><p><strong>重點：<code>ADD</code>/<code>ADC</code>/<code>INC</code> <code>SUB</code>/<code>SBB</code>/<code>DEC</code> <code>CBW</code>/<code>CWD</code></strong></p><h2 id="加法指令"><a href="#加法指令" class="headerlink" title="加法指令"></a>加法指令</h2><h3 id="加法指令-ADD"><a href="#加法指令-ADD" class="headerlink" title="加法指令 ADD"></a>加法指令 <code>ADD</code></h3><h3 id="帶進位加法指令-ADC"><a href="#帶進位加法指令-ADC" class="headerlink" title="帶進位加法指令 ADC"></a>帶進位加法指令 <code>ADC</code></h3><p>主要與<code>ADD</code>配合，實現多精度加法。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>adc     dest, src               ; dest←dest+src+cf<br></code></pre></td></tr></table></figure><h3 id="增量指令-INC"><a href="#增量指令-INC" class="headerlink" title="增量指令 INC"></a>增量指令 <code>INC</code></h3><h2 id="減法指令"><a href="#減法指令" class="headerlink" title="減法指令"></a>減法指令</h2><p>參考對應的加法指令。</p><h3 id="減法指令-SUB"><a href="#減法指令-SUB" class="headerlink" title="減法指令 SUB"></a>減法指令 <code>SUB</code></h3><h3 id="帶借位減法指令-SBB"><a href="#帶借位減法指令-SBB" class="headerlink" title="帶借位減法指令 SBB"></a>帶借位減法指令 <code>SBB</code></h3><h3 id="減量指令-DEC"><a href="#減量指令-DEC" class="headerlink" title="減量指令 DEC"></a>減量指令 <code>DEC</code></h3><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="求補指令-NEG"><a href="#求補指令-NEG" class="headerlink" title="求補指令 NEG"></a>求補指令 <code>NEG</code></h3><p>用0減去操作數，結果返回給操作數。<br>對標誌的影響與用0作減法的<code>SUB</code>指令一樣。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>neg     reg/mem                 ; reg/mem←0-reg/mem<br></code></pre></td></tr></table></figure><h3 id="比較指令-CMP"><a href="#比較指令-CMP" class="headerlink" title="比較指令 CMP"></a>比較指令 <code>CMP</code></h3><p>執行的功能與<code>SUB</code>相似，但結果不回送至目的操作數。<br>配合<code>Jcc</code>。</p><h2 id="乘法指令"><a href="#乘法指令" class="headerlink" title="乘法指令"></a>乘法指令</h2><p>利用<code>OF</code>和<code>CF</code>判斷乘積的高一半是否具有有效數值。  </p><p><code>MUL</code>：高一半爲0，則<code>OF</code>=<code>CF</code>=0；否則均爲1。  </p><p><code>IMUL</code>：高一半爲低一半的符號擴展，則<code>OF</code>=<code>CF</code>=0；否則均爲1。  </p><h3 id="無符號乘法-MUL"><a href="#無符號乘法-MUL" class="headerlink" title="無符號乘法 MUL"></a>無符號乘法 <code>MUL</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>mul     r8/m8                   ; 無符號字節乘法，ax←al×r8/m8<br>mul     r16/m16                 ; 無符號字乘法，dx.ax←ax×r16/m16  <br></code></pre></td></tr></table></figure><h3 id="有符號乘法-IMUL"><a href="#有符號乘法-IMUL" class="headerlink" title="有符號乘法 IMUL"></a>有符號乘法 <code>IMUL</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>imul     r8/m8                  ; 有符號字節乘法，ax←al×r8/m8<br>imul     r16/m16                ; 有符號字乘法，dx.ax←ax×r16/m16<br></code></pre></td></tr></table></figure><h2 id="除法指令"><a href="#除法指令" class="headerlink" title="除法指令"></a>除法指令</h2><p>對標誌沒有定義。<br>會產生結果溢出（除法錯中斷，8086CPU編號爲0的內部中斷）：</p><ul><li>除數爲0</li><li>商超出範圍  </li></ul><h3 id="無符號除法-DIV"><a href="#無符號除法-DIV" class="headerlink" title="無符號除法 DIV"></a>無符號除法 <code>DIV</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>div     r8/m8                   ; 無符號字節乘法，al←ax÷r8/m8的商，ah←ax÷r8/m8的餘數<br>div     r16/m16                 ; 無符號字乘法，ax←dx.ax÷r16/m16的商，dx←dx.ax÷r16/m16的餘數<br></code></pre></td></tr></table></figure><h3 id="有符號除法-IDIV"><a href="#有符號除法-IDIV" class="headerlink" title="有符號除法 IDIV"></a>有符號除法 <code>IDIV</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>idiv     r8/m8                  ; 有符號字節乘法，al←ax÷r8/m8的商，ah←ax÷r8/m8的餘數<br>idiv     r16/m16                ; 有符號字乘法，ax←dx.ax÷r16/m16的商，dx←dx.ax÷r16/m16的餘數<br></code></pre></td></tr></table></figure><h2 id="符號擴展指令-CBW-CWD"><a href="#符號擴展指令-CBW-CWD" class="headerlink" title="符號擴展指令 CBW CWD"></a>符號擴展指令 <code>CBW</code> <code>CWD</code></h2><p>不影響標誌位，常用於獲得倍長的數據。<br>如<code>64H</code>（表示十進制100）最高位$D_7$爲0，符號擴展後爲<code>0064H</code>（仍表示十進制100）；<code>FF00H</code>（表示十進制-256）最高位$D_{15}$爲1，符號擴展後爲<code>FFFFFF00H</code>（仍表示十進制256）。<br>利用符號擴展指令可得到除法指令所需的倍長於除數的被除數。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>cwd<br>idiv bx<br></code></pre></td></tr></table></figure><p>對無符號除法：直接清零即可。</p><h2 id="壓縮BCD碼加減調整指令DAA-DAS"><a href="#壓縮BCD碼加減調整指令DAA-DAS" class="headerlink" title="壓縮BCD碼加減調整指令DAA DAS"></a>壓縮BCD碼加減調整指令<code>DAA</code> <code>DAS</code></h2><p>對<code>OF</code>無定義，但影響其他標誌，比如<code>CF</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>add/adc al, i8/r8/m8<br>daa                             ; 將al的加和調整爲壓縮BCD碼<br>sub/sub al, i8/r8/m8<br>das                             ; 將al的減差調整爲壓縮BCD碼<br></code></pre></td></tr></table></figure><h2 id="非壓縮BCD碼加減乘除調整指令AAA-AAS-AAM-AAD"><a href="#非壓縮BCD碼加減乘除調整指令AAA-AAS-AAM-AAD" class="headerlink" title="非壓縮BCD碼加減乘除調整指令AAA AAS AAM AAD"></a>非壓縮BCD碼加減乘除調整指令<code>AAA</code> <code>AAS</code> <code>AAM</code> <code>AAD</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>add/adc al, i8/r8/m8<br>aaa                             ; 將al的加和調整爲壓縮BCD碼<br>                                ; ah←ah+調整的進位<br>sub/sub al, i8/r8/m8<br>aas                             ; 將al的減差調整爲壓縮BCD碼<br>                                ; ah←ah-調整的借位<br>mul     r8/m8<br>aam                             ; 將ax的乘積調整爲非壓縮BCD碼<br>aad                             ; 將ax中非壓縮BCD碼調整爲二進制數<br>div     r8/m8<br></code></pre></td></tr></table></figure><h1 id="位操作類指令"><a href="#位操作類指令" class="headerlink" title="位操作類指令"></a>位操作類指令</h1><h2 id="邏輯運算指令"><a href="#邏輯運算指令" class="headerlink" title="邏輯運算指令"></a>邏輯運算指令</h2><h3 id="邏輯與-AND"><a href="#邏輯與-AND" class="headerlink" title="邏輯與 AND"></a>邏輯與 <code>AND</code></h3><p>皆1方爲1。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>add     reg, imm/reg/mem<br>add     mem, imm/reg<br></code></pre></td></tr></table></figure><p><code>CF</code>=<code>OF</code>=0；<code>SF</code> <code>ZF</code> <code>PF</code>根據結果；<code>AF</code>未定義。<br>可用於復位（0相與，1變0）。</p><h3 id="邏輯或-OR"><a href="#邏輯或-OR" class="headerlink" title="邏輯或 OR"></a>邏輯或 <code>OR</code></h3><p>皆0方爲0。<br>標誌位變化同<code>AND</code>。<br>可用於置位（1相或，0變1）。</p><h3 id="邏輯異或-XOR"><a href="#邏輯異或-XOR" class="headerlink" title="邏輯異或 XOR"></a>邏輯異或 <code>XOR</code></h3><p>不同方爲1。<br>標誌位變化同<code>AND</code>。<br>可用於求反（1相異或，1變0，0變1）；自身<code>XOR</code>則清零。</p><h3 id="邏輯非-NOT"><a href="#邏輯非-NOT" class="headerlink" title="邏輯非 NOT"></a>邏輯非 <code>NOT</code></h3><p>按位取反，不影響標誌位。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">not     reg/mem<br></code></pre></td></tr></table></figure><h3 id="測試指令-TEST"><a href="#測試指令-TEST" class="headerlink" title="測試指令 TEST"></a>測試指令 <code>TEST</code></h3><p>類似<code>AND</code>，結果不返回至操作數。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>test    al, 01h             ; 測試最後一位是否爲0（是則ZF=1）  <br></code></pre></td></tr></table></figure><h2 id="移位指令"><a href="#移位指令" class="headerlink" title="移位指令"></a>移位指令</h2><h3 id="邏輯左移-SHL"><a href="#邏輯左移-SHL" class="headerlink" title="邏輯左移 SHL"></a>邏輯左移 <code>SHL</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>shl     reg/mem, 1/cl       ; 邏輯左移1/cl位（最低位補0，最高位進入CF）<br></code></pre></td></tr></table></figure><h3 id="邏輯右移-SHR"><a href="#邏輯右移-SHR" class="headerlink" title="邏輯右移 SHR"></a>邏輯右移 <code>SHR</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>shr     reg/mem, 1/cl       ; 邏輯右移1/cl位（最高位補0，最低位進入CF）<br></code></pre></td></tr></table></figure><h3 id="算術左移-SAL"><a href="#算術左移-SAL" class="headerlink" title="算術左移 SAL"></a>算術左移 <code>SAL</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>sal     reg/mem, 1/cl       ; 算術左移1/cl位（同SHL）<br></code></pre></td></tr></table></figure><h3 id="算術右移-SAR"><a href="#算術右移-SAR" class="headerlink" title="算術右移 SAR"></a>算術右移 <code>SAR</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>sar     reg/mem, 1/cl       ; 算術右移1/cl位（最高位不變，最低位進入CF）<br></code></pre></td></tr></table></figure><h3 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h3><p>若最高位改變：<code>OF</code>=1  </p><ul><li><p><code>shl</code>/<code>sal</code> 1位相當於無符號數乘2  </p></li><li><p><code>shr</code> 1位相當於無符號數除以2  </p></li><li><p><code>sar</code> 1位相當於有符號數除以2（與<code>idiv</code>有別）  </p><ul><li>如-5(FBH)經<code>SAR</code>右移1位等於-3(FDH)，但<code>IDIV</code>指令執行-5÷2結果爲-2</li></ul></li></ul><h2 id="循環移位指令-ROL-ROR-RCL-RCR"><a href="#循環移位指令-ROL-ROR-RCL-RCR" class="headerlink" title="循環移位指令 ROL ROR RCL RCR"></a>循環移位指令 <code>ROL</code> <code>ROR</code> <code>RCL</code> <code>RCR</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>rol     reg/mem, 1/cl       ; 不帶進位循環左移  <br>ror     reg/mem, 1/cl       ; 不帶進位循環右移  <br>rcl     reg/mem, 1/cl       ; 帶進位循環左移  <br>rcr     reg/mem, 1/cl       ; 帶進位循環右移<br></code></pre></td></tr></table></figure><h1 id="控制轉移類指令"><a href="#控制轉移類指令" class="headerlink" title="控制轉移類指令"></a>控制轉移類指令</h1><p><strong>重點</strong>：<code>JMP</code> <code>JCC</code> <code>LOOP</code> <code>CALL</code> <code>RET</code> <code>INT n</code> <code>IRET</code> 常用系統功能調用  </p><p><code>CS</code>：當前指令所在代碼段的段地址  </p><p><code>IP</code>：要執行的下一條指令的偏移地址</p><h2 id="無條件轉移指令-JMP"><a href="#無條件轉移指令-JMP" class="headerlink" title="無條件轉移指令 JMP"></a>無條件轉移指令 <code>JMP</code></h2><p>段內轉移：</p><ul><li><strong>近轉移</strong>（near）：在當前代碼段64KB（±32KB）範圍內轉移。  </li><li><strong>短轉移</strong>（short）：在段內-128~127的範圍的轉移。  </li></ul><p>段間轉移：</p><ul><li><strong>遠轉移</strong>（far）：更改<code>CS</code>段地址和<code>IP</code>偏移地址。可在1MB範圍內轉移。目標地址用32位遠指針表示，即邏輯地址。  </li></ul><p>通常彙編程序根據位移量大小自動形成短轉移/近轉移/遠轉移指令。同時彙編程序也提供<code>short</code>或<code>near ptr</code>或<code>far ptr</code>強制。</p><ul><li><p>段內轉移 相對尋址：<code>jmp label</code> ; <code>ip</code>←<code>ip</code>+位移量</p></li><li><p>段內轉移 間接尋址：<code>jmp r16/m16</code> ; <code>ip</code>←<code>r16/m16</code>  </p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>jmp     ax<br>jmp     word ptr[2000h]<br></code></pre></td></tr></table></figure><ul><li><p>段間轉移 直接尋址：<code>jmp far ptr label</code> ; <code>ip</code>←<code>label</code>的偏移地址，<code>cs</code>←<code>label</code>的段地址</p></li><li><p>段間轉移 間接尋址：<code>jmp far ptr mem</code> ; <code>ip</code>←<code>[mem]</code>，<code>cs</code>←<code>[mem+2]</code></p></li></ul><h2 id="條件轉移指令-Jcc"><a href="#條件轉移指令-Jcc" class="headerlink" title="條件轉移指令 Jcc"></a>條件轉移指令 <code>Jcc</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>jcc     label<br></code></pre></td></tr></table></figure><h3 id="判斷單個標誌位狀態"><a href="#判斷單個標誌位狀態" class="headerlink" title="判斷單個標誌位狀態"></a>判斷單個標誌位狀態</h3><ul><li><p><code>JZ</code>/<code>JE</code>和<code>JNZ</code>/<code>JNE</code>利用<code>ZF</code>，判斷結果是否爲0（或相等）</p></li><li><p><code>JS</code>和<code>JNS</code>利用<code>SF</code>，判斷結果正負</p></li><li><p><code>JO</code>和<code>JNO</code>利用<code>OF</code>，判斷結果是否溢出</p></li><li><p><code>JP</code>/<code>JPE</code>和<code>JNP</code>/<code>JPO</code>利用<code>PF</code>，判斷結果中1的個數奇偶</p></li><li><p><code>JC</code>/<code>JB</code>/<code>JNAE</code>和<code>JNC</code>/<code>JNB</code>/<code>JAE</code>利用<code>CF</code>，判斷結果是否進位/借位</p></li></ul><h3 id="比較無符號數高低"><a href="#比較無符號數高低" class="headerlink" title="比較無符號數高低"></a>比較無符號數高低</h3><p>高（Above）、低（Below）。<br>利用<code>CF</code>確定高低，利用<code>ZF</code>確定相等。</p><ul><li><p><code>JB</code>/<code>JNAE</code></p></li><li><p><code>JNB</code>/<code>JAE</code></p></li><li><p><code>JBE</code>/<code>JNA</code></p></li><li><p><code>JNBE</code>/<code>JA</code></p></li></ul><h3 id="比較有符號數大小"><a href="#比較有符號數大小" class="headerlink" title="比較有符號數大小"></a>比較有符號數大小</h3><p>大（Greater）、小（Less）。<br>利用<code>SF</code>和<code>OF</code>確定大小，利用<code>ZF</code>確定相等。</p><ul><li><p><code>JL</code>/<code>JNGE</code></p></li><li><p><code>JNL</code>/<code>JGE</code></p></li><li><p><code>JLE</code>/<code>JNG</code></p></li><li><p><code>JNLE</code>/<code>JG</code></p></li></ul><h2 id="循環指令-LOOP"><a href="#循環指令-LOOP" class="headerlink" title="循環指令 LOOP"></a>循環指令 <code>LOOP</code></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>jcxz    label   ; cx=0則轉移到標號label<br>loop    label   ; cx←cx-1；cx≠0則轉移到label<br>loopz   label   ; cx←cx-1；cx≠0且zf=1則轉移到label<br>loopnz  label   ; cx←cx-1；cx≠0且zf=0則轉移到label<br></code></pre></td></tr></table></figure><h2 id="子程序指令-CALL-RET"><a href="#子程序指令-CALL-RET" class="headerlink" title="子程序指令 CALL RET"></a>子程序指令 <code>CALL</code> <code>RET</code></h2><h3 id="子程序調用指令-CALL"><a href="#子程序調用指令-CALL" class="headerlink" title="子程序調用指令 CALL"></a>子程序調用指令 <code>CALL</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>CALL    label           ; 段內調用 直接尋址<br>CALL    r16/m16         ; 段內調用 間接尋址<br>CALL    far ptr label   ; 段間調用 直接尋址<br>CALL    far ptr mem     ; 段間調用 間接尋址<br></code></pre></td></tr></table></figure><p><code>CALL</code>指令需要保存返回地址：  </p><ul><li><p>段內調用：入棧偏移地址<code>IP</code>  </p><ul><li><code>SP</code>←<code>SP</code>-2，<code>SS:[SP]</code>←<code>IP</code>  </li></ul></li><li><p>段間調用：入棧偏移地址IP和段地址CS  </p><ul><li><code>SP</code>←<code>SP</code>-2，<code>SS:[SP]</code>←<code>IP</code>  </li><li><code>SP</code>←<code>SP</code>-2，<code>SS:[SP]</code>←<code>CS</code>  </li></ul></li></ul><h3 id="子程序返回指令-RET"><a href="#子程序返回指令-RET" class="headerlink" title="子程序返回指令 RET"></a>子程序返回指令 <code>RET</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>ret             ; 無參數段內返回<br>ret     i16     ; 有參數段內返回<br>ret             ; 無參數段間返回<br>ret     i16     ; 有參數段間返回<br></code></pre></td></tr></table></figure><p>需要彈出<code>CALL</code>指令壓入堆棧的返回地址。</p><ul><li><p>段內返回：出棧偏移地址<code>IP</code></p><ul><li><code>IP</code>←<code>SS:[SP]</code>，<code>SP</code>←<code>SP</code>+2</li></ul></li><li><p>段间返回：出棧偏移地址<code>IP</code>和段地址<code>CS</code></p><ul><li><code>IP</code>←<code>SS:[SP]</code>，<code>SP</code>←<code>SP</code>+2</li><li><code>CS</code>←<code>SS:[SP]</code>，<code>SP</code>←<code>SP</code>+2</li></ul></li></ul><h4 id="返回指令RET的參數"><a href="#返回指令RET的參數" class="headerlink" title="返回指令RET的參數"></a>返回指令<code>RET</code>的參數</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>ret i16         ; SP←SP+i16<br></code></pre></td></tr></table></figure><p>可以方便廢除執行<code>CALL</code>指令之前入棧的參數。</p><h2 id="中斷指令-INT-i8-IRET-INTO"><a href="#中斷指令-INT-i8-IRET-INTO" class="headerlink" title="中斷指令 INT i8 IRET INTO"></a>中斷指令 <code>INT i8</code> <code>IRET</code> <code>INTO</code></h2><p>8086可管理256个中斷。  </p><ul><li><p>外部中斷</p><ul><li>可屏蔽中斷：可由CPU中斷允许標誌<code>IF</code>控制</li><li>非屏蔽中斷：不受CPU中斷允许標誌<code>IF</code>控制</li></ul></li><li><p>內部中斷</p><ul><li>除法錯中斷：溢出，0號中斷</li><li>指令中斷：中斷調用指令 <code>INT i8</code></li><li>斷點中斷：斷點調試 <code>INT 3</code></li><li>溢出中斷：執行溢出中斷指令，<code>OF</code>=1產生的4號中斷</li><li>單步中斷：<code>TF</code>=1在每條指令執行後產生的1號中斷</li></ul></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>int     i8      ; 中斷調用（產生i8號中斷）<br>iret            ; 中斷返回<br>into            ; 溢出中斷指令：若OF=1，產生4號中斷，否則順序執行<br></code></pre></td></tr></table></figure><h2 id="系統功能調用"><a href="#系統功能調用" class="headerlink" title="系統功能調用"></a>系統功能調用</h2><h3 id="INT-21H，AH-02H-輸出字符"><a href="#INT-21H，AH-02H-輸出字符" class="headerlink" title="INT 21H，AH=02H 輸出字符"></a>INT 21H，<code>AH</code>=02H 輸出字符</h3><p><code>DL</code>=字符的ASCII碼</p><h3 id="INT-10H，AH-0EH-輸出字符"><a href="#INT-10H，AH-0EH-輸出字符" class="headerlink" title="INT 10H，AH=0EH 輸出字符"></a>INT 10H，<code>AH</code>=0EH 輸出字符</h3><p><code>AL</code>=字符的ASCII碼  </p><p><code>BL</code>=字符顏色值（圖形方式）  </p><p><code>BH</code>=頁號（字符方式）  </p><p>（通常使BX=0）</p><h3 id="INT-21H，AH-09H-輸出字符串"><a href="#INT-21H，AH-09H-輸出字符串" class="headerlink" title="INT 21H，AH=09H 輸出字符串"></a>INT 21H，<code>AH</code>=09H 輸出字符串</h3><p><code>DS</code>:<code>DX</code>=欲顯示字符串在主存中的首地址，以$(24H)結束  </p><h3 id="INT-21H，AH-01H-輸入字符"><a href="#INT-21H，AH-01H-輸入字符" class="headerlink" title="INT 21H，AH=01H 輸入字符"></a>INT 21H，<code>AH</code>=01H 輸入字符</h3><p><code>AL</code>=字符的ASCII碼</p><h3 id="INT-16H，AH-0-輸入字符"><a href="#INT-16H，AH-0-輸入字符" class="headerlink" title="INT 16H，AH=0 輸入字符"></a>INT 16H，<code>AH</code>=0 輸入字符</h3><p><code>AX</code>=鍵值代碼</p><p>標準ASCII碼按鍵：<code>AL</code>=ASCII碼，<code>AH</code>=掃描碼<br>…</p><h3 id="INT-21H，AH-0AH-輸入字符串"><a href="#INT-21H，AH-0AH-輸入字符串" class="headerlink" title="INT 21H，AH=0AH 輸入字符串"></a>INT 21H，<code>AH</code>=0AH 輸入字符串</h3><p><code>DS</code>:<code>DX</code>=緩衝區首地址</p><h4 id="緩衝區的定義"><a href="#緩衝區的定義" class="headerlink" title="緩衝區的定義"></a>緩衝區的定義</h4><ul><li>第1字節：最多欲接收的字符個數（1-255，含回車）</li><li>第2字節：實際輸入的字符個數</li><li>第3字節開始：輸入的字符串</li></ul><h3 id="INT-21H，AH-0BH-按鍵判斷"><a href="#INT-21H，AH-0BH-按鍵判斷" class="headerlink" title="INT 21H，AH=0BH 按鍵判斷"></a>INT 21H，<code>AH</code>=0BH 按鍵判斷</h3><p><code>AL</code>=0，當前沒有按鍵；  </p><p><code>AL</code>=FFH，當前已經按鍵。<br>僅判斷當前是否有按下的鍵，設置<code>AL</code>後退出。</p><h3 id="INT-16H，AH-1-按鍵判斷"><a href="#INT-16H，AH-1-按鍵判斷" class="headerlink" title="INT 16H，AH=1 按鍵判斷"></a>INT 16H，<code>AH</code>=1 按鍵判斷</h3><p><code>ZF</code>=1，無按鍵；  </p><p><code>ZF</code>=0，有按鍵，且<code>AX</code>=鍵值代碼。<br>僅判斷當前是否有按下的鍵，設置<code>ZF</code>後退出。</p><h1 id="串操作類指令"><a href="#串操作類指令" class="headerlink" title="串操作類指令"></a>串操作類指令</h1><p>重點：<code>MOVS</code> <code>STOS</code> <code>LODS</code> <code>CMPS</code> <code>SCAS</code> <code>REP</code></p><h2 id="串尋址方式"><a href="#串尋址方式" class="headerlink" title="串尋址方式"></a>串尋址方式</h2><ul><li><p>源操作數：<code>SI</code>尋址，默認<code>DS</code>段，允許段超越  </p></li><li><p>目的操作數：<code>DI</code>尋址，默認<code>ES</code>段，不允許段超越  </p></li></ul><p><code>SI</code> <code>DI</code>自動修改（增減1或2）  </p><p><code>CLD</code>，<code>DF</code>=0，地址指針增1或2  </p><p><code>STD</code>，<code>DF</code>=1，地址指針減1或2  </p><h2 id="串傳送-MOVSB-MOVSW"><a href="#串傳送-MOVSB-MOVSW" class="headerlink" title="串傳送 MOVSB MOVSW"></a>串傳送 <code>MOVSB</code> <code>MOVSW</code></h2><p><code>ES:[DI]</code>←<code>DS:[SI]</code>  </p><p><code>SI</code> <code>DI</code>加減1或2  </p><h2 id="串存儲-STOSB-STOSW"><a href="#串存儲-STOSB-STOSW" class="headerlink" title="串存儲 STOSB STOSW"></a>串存儲 <code>STOSB</code> <code>STOSW</code></h2><p><code>ES:[DI]</code>←<code>AL</code>/<code>AX</code>  </p><p><code>DI</code>加減1或2  </p><h2 id="串讀取-LODSB-LODSW"><a href="#串讀取-LODSB-LODSW" class="headerlink" title="串讀取 LODSB LODSW"></a>串讀取 <code>LODSB</code> <code>LODSW</code></h2><p><code>AL</code>/<code>AX</code>←<code>DS:[SI]</code>  </p><p><code>SI</code>加減1或2  </p><h2 id="串比較-CMPSB-CMPSW"><a href="#串比較-CMPSB-CMPSW" class="headerlink" title="串比較 CMPSB CMPSW"></a>串比較 <code>CMPSB</code> <code>CMPSW</code></h2><p><code>DS:[SI]</code>-<code>ES:[DI]</code>  </p><p><code>SI</code> <code>DI</code>加減1或2  </p><h2 id="串掃描-SCASB-SCASW"><a href="#串掃描-SCASB-SCASW" class="headerlink" title="串掃描 SCASB SCASW"></a>串掃描 <code>SCASB</code> <code>SCASW</code></h2><p><code>AL</code>/<code>AX</code>-<code>ES:[DI]</code>  </p><p><code>DI</code>加減1或2  </p><h2 id="重複前綴指令-REP-REPZ-REPNZ"><a href="#重複前綴指令-REP-REPZ-REPNZ" class="headerlink" title="重複前綴指令 REP REPZ REPNZ"></a>重複前綴指令 <code>REP</code> <code>REPZ</code> <code>REPNZ</code></h2><h3 id="配合不影響標誌的MOVS-STOS-LODS：REP前綴"><a href="#配合不影響標誌的MOVS-STOS-LODS：REP前綴" class="headerlink" title="配合不影響標誌的MOVS STOS LODS：REP前綴"></a>配合不影響標誌的<code>MOVS</code> <code>STOS</code> <code>LODS</code>：<code>REP</code>前綴</h3><p>如 <code>rep movsb</code>相當於：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>again:  movsb<br>        dec cx<br>        jnz again<br></code></pre></td></tr></table></figure><p><code>rep stosw</code>相當於：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>again:  stosw<br>        dec cx<br>        jnz again<br></code></pre></td></tr></table></figure><h3 id="配合影響標誌的CMPS-SCAS：REPZ-REPNZ前綴"><a href="#配合影響標誌的CMPS-SCAS：REPZ-REPNZ前綴" class="headerlink" title="配合影響標誌的CMPS SCAS：REPZ REPNZ前綴"></a>配合影響標誌的<code>CMPS</code> <code>SCAS</code>：<code>REPZ</code> <code>REPNZ</code>前綴</h3><p><code>REPZ</code>/<code>REPE</code>相當於：<code>CX</code>≠0且<code>ZF</code>=1則繼續比較。</p><p><code>REPNZ</code>/<code>REPNE</code>相當於：<code>CX</code>≠0且<code>ZF</code>=0則繼續比較。</p><h2 id="處理機控制類指令"><a href="#處理機控制類指令" class="headerlink" title="處理機控制類指令"></a>處理機控制類指令</h2><h3 id="空操作指令-NOP"><a href="#空操作指令-NOP" class="headerlink" title="空操作指令 NOP"></a>空操作指令 <code>NOP</code></h3><p>不執行任何操作，佔用一個字節存儲單元，空耗一個指令執行週期。<br>常用於程序調試。  </p><h3 id="段超越前綴指令-CS-SS-DS-ES"><a href="#段超越前綴指令-CS-SS-DS-ES" class="headerlink" title="段超越前綴指令 CS: SS: DS: ES:"></a>段超越前綴指令 <code>CS:</code> <code>SS:</code> <code>DS:</code> <code>ES:</code></h3><h3 id="封鎖前綴指令-LOCK"><a href="#封鎖前綴指令-LOCK" class="headerlink" title="封鎖前綴指令 LOCK"></a>封鎖前綴指令 <code>LOCK</code></h3><h3 id="暫停指令-HLT"><a href="#暫停指令-HLT" class="headerlink" title="暫停指令 HLT"></a>暫停指令 <code>HLT</code></h3><h3 id="交權指令-ESC"><a href="#交權指令-ESC" class="headerlink" title="交權指令 ESC"></a>交權指令 <code>ESC</code></h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly"><br>esc     i6, reg/mem<br></code></pre></td></tr></table></figure><p>8086浮點指令交給8087執行。</p><h3 id="等待指令-WAIT"><a href="#等待指令-WAIT" class="headerlink" title="等待指令 WAIT"></a>等待指令 <code>WAIT</code></h3><p>實現8086與8087同步運行。</p>]]></content>
    
    
    <categories>
      
      <category>Assembly</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Assembly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>彙編語言複習筆記1：基礎知識</title>
    <link href="/asm/AsmNotes-1/"/>
    <url>/asm/AsmNotes-1/</url>
    
    <content type="html"><![CDATA[<blockquote><p>彙整自個人OneNote筆記。<br>僅記錄重點，不記例題。</p></blockquote><span id="more"></span><h1 id="二進制編碼"><a href="#二進制編碼" class="headerlink" title="二進制編碼"></a>二進制編碼</h1><p>位 字節 字<br>進制 進制轉換<br>(略)</p><ul><li><strong>原碼</strong>：最高位表示符號（正0負1），其他位直接表示數值大小。</li><li><strong>反碼</strong>：正數反碼與原碼相同；負數反碼爲它的相反數（正數）各位（含符號位）按位取反而形成。</li><li><strong>補碼</strong>：正數反碼與原碼相同；負數反碼爲它的相反數（正數）補碼取反再加1。</li></ul><table><thead><tr><th align="center">十進制數</th><th align="center">原碼</th><th align="center">反碼</th><th align="center">補碼</th></tr></thead><tbody><tr><td align="center">21</td><td align="center">00010101</td><td align="center">00010101</td><td align="center">00010101</td></tr><tr><td align="center">-21</td><td align="center">10010101</td><td align="center">11101010</td><td align="center">11101011</td></tr></tbody></table><h1 id="BCD碼（8421-BCD碼）"><a href="#BCD碼（8421-BCD碼）" class="headerlink" title="BCD碼（8421 BCD碼）"></a>BCD碼（8421 BCD碼）</h1><p>十進制數位用4位二進制（1位十六進制）編碼表示，如用<code>88H</code>代表十進制的88。</p><ul><li><strong>非壓縮BCD</strong>：1字節表達1位BCD碼（高4位爲0）。</li><li><strong>壓縮BCD</strong>：1字節表達2位BCD碼。</li></ul><h1 id="ASCII"><a href="#ASCII" class="headerlink" title="ASCII"></a>ASCII</h1><p>（略）</p><h1 id="8086寄存器"><a href="#8086寄存器" class="headerlink" title="8086寄存器"></a>8086寄存器</h1><h2 id="通用寄存器"><a href="#通用寄存器" class="headerlink" title="通用寄存器"></a>通用寄存器</h2><h3 id="數據寄存器"><a href="#數據寄存器" class="headerlink" title="數據寄存器"></a>數據寄存器</h3><ul><li><code>AX</code> (<code>AH</code>/<code>AL</code>) 累加器：算術、邏輯運算，與外設傳送信息</li><li><code>BX</code> (<code>BH</code>/<code>BL</code>) 基址寄存器：存放存儲器地址</li><li><code>CX</code> (<code>CH</code>/<code>CL</code>) 計數器：循環操作等指令中的計數器</li><li><code>DX</code> (<code>DH</code>/<code>DL</code>) 數據寄存器：存放數據，在輸入輸出指令中存放外設端口地址</li></ul><h3 id="變址寄存器"><a href="#變址寄存器" class="headerlink" title="變址寄存器"></a>變址寄存器</h3><ul><li><code>SI</code> 源變址寄存器： 指向源操作數</li><li><code>DI</code> 目的變址寄存器：指向目的操作數</li></ul><h3 id="指針寄存器"><a href="#指針寄存器" class="headerlink" title="指針寄存器"></a>指針寄存器</h3><ul><li><code>BP</code> 基址指針：默認指向堆棧數據，主要用於子程序中訪問通過堆棧傳遞的參數和局部變量</li><li><code>SP</code> 堆棧指針：總是指向堆棧頂部，在涉及堆棧操作的指令中會自動增加或減少</li></ul><h2 id="標誌寄存器-FLAGS"><a href="#標誌寄存器-FLAGS" class="headerlink" title="標誌寄存器 FLAGS"></a>標誌寄存器 <code>FLAGS</code></h2><p>6狀態標誌 3控制標誌<br>|11|10|9|8|7|6|4|2|0|<br>|-|-|-|-|-|-|-|-|-|<br>|OF|DF|IF|TF|SF|ZF|AF|PF|CF|</p><ul><li>進位標誌 <code>CF</code> (Carry Flag)：反映（無符號數）加減運算最高位（$D_7$）有無進位/借位，有爲1。</li><li>奇偶標誌 <code>PF</code> (Parity Flag)：最低字節1的奇偶個數，偶數爲1。</li><li>零標誌 <code>ZF</code> (Zero Flag)：運算結果是否爲0，是爲1。</li><li>符號標誌 <code>SF</code> (Sign Flag)：運算結果最高位爲1，<code>SF</code>=1；否則<code>SF</code>=0。對有符號數來說，相當於判斷正負。</li><li>溢出標誌 <code>OF</code> (Overflow Flag)：反映（有符號數）運算結果是否溢出，有爲1。</li><li>輔助進位標誌/調整標誌 <code>AF</code> (Auxiliary Carry Flag/Adjust Flag)：反映加減運算最低半字節（$D_3$向$D_4$）有無進位/借位，有爲1（由處理器內部使用，一般不必關心）。  </li><li>方向標誌 <code>DF</code> (Direction Flag)：用於串操作指令中控制地址的變化方向，0爲自動增加，1爲自動減少。<ul><li><code>CLD</code>指令復位：<code>DF</code>=0 </li><li><code>STD</code>指令置位：<code>DF</code>=1</li></ul></li><li>中斷允許標誌 <code>IF</code> (Interrupt-enable Flag)：控制外部可屏蔽中斷是否可以被處理器響應，1爲允許中斷，0爲禁止中斷。<ul><li><code>CLI</code>指令復位：<code>IF</code>=0 </li><li><code>STI</code>指令置位：<code>IF</code>=1</li></ul></li><li>陷阱標誌 <code>TF</code> (Trap Flag)：控制處理器是否進入單步操作方式，0爲正常工作，1爲單步執行指令。</li></ul><h2 id="指令指針寄存器-IP"><a href="#指令指針寄存器-IP" class="headerlink" title="指令指針寄存器 IP"></a>指令指針寄存器 <code>IP</code></h2><p>與代碼段寄存器<code>CS</code>聯用，確定下一條指令的物理地址。<br>計算機通過<code>CS:IP</code>控制指令序列執行流程。<br>而<code>IP</code>具有自動增量功能，不能直接賦值修改。</p><h2 id="段寄存器"><a href="#段寄存器" class="headerlink" title="段寄存器"></a>段寄存器</h2><ul><li><code>CS</code> 代碼段寄存器：指明代碼段起始地址</li><li><code>SS</code> 堆棧段寄存器：指明堆棧段起始地址</li><li><code>DS</code> 數據段寄存器：指明數據段起始地址</li><li><code>ES</code> 附加段寄存器：指明附加段起始地址</li></ul><h1 id="存儲器組織"><a href="#存儲器組織" class="headerlink" title="存儲器組織"></a>存儲器組織</h1><h2 id="數據存儲格式"><a href="#數據存儲格式" class="headerlink" title="數據存儲格式"></a>數據存儲格式</h2><ul><li>Word 字：2字節  </li><li>Double Word 雙字：4字節</li></ul><p>小端方式：字或雙字存放時，低字節存入低地址，高字節存入高地址；字或雙字單元的地址用它的低地址表示。<br>邊界對齊（Align）：16位2字節數據起始偶地址，32位4字節數據起始模4地址。</p><h2 id="分段管理"><a href="#分段管理" class="headerlink" title="分段管理"></a>分段管理</h2><p>8086CPU用16位字長可表達16位存儲器地址（0000H<del>FFFFH），即$2^{16}\rm{B}=64\rm{KB}$容量。但是，8086CPU的地址線有20位，最大可尋址空間爲$2^{20}\rm{B}=1\rm{MB}$，其物理地址範圍爲00000H</del>FFFFFH。  </p><p>邏輯段（Segment）：最大64KB。<br>段基地址（段地址）：邏輯段在主存中的起始位置。8086段地址必須是模16地址，即<code>xxxx0H</code>形式。<br>段內偏移地址：距離段起始位置的偏移量。</p><p><strong>物理地址</strong>（絕對地址）：每個存儲器單元唯一的20位地址。<br><strong>邏輯地址</strong>：形式爲「<code>段地址:偏移地址</code>」。如，邏輯地址<code>1460H:100H</code>表示物理地址<code>14700H</code>。</p><h3 id="段超越前綴指令"><a href="#段超越前綴指令" class="headerlink" title="段超越前綴指令"></a>段超越前綴指令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">cs:                         ; 代碼段超越，使用代碼段數據<br>ss:                         ; 堆棧段超越，使用堆棧段數據<br>ds:                         ; 數據段超越，使用數據段數據<br>es:                         ; 附加段超越，使用附加段數據<br></code></pre></td></tr></table></figure><h1 id="尋址方式"><a href="#尋址方式" class="headerlink" title="尋址方式"></a>尋址方式</h1><h2 id="8086的機器代碼格式"><a href="#8086的機器代碼格式" class="headerlink" title="8086的機器代碼格式"></a>8086的機器代碼格式</h2><table><thead><tr><th align="center">1/2字節</th><th align="center">0/1字節</th><th align="center">0/1/2字節</th><th align="center">0/1/2字節</th></tr></thead><tbody><tr><td align="center">操作碼</td><td align="center">mod reg r/m</td><td align="center">位移量</td><td align="center">立即數</td></tr><tr><td align="center">指令</td><td align="center">尋址方式</td><td align="center">某些尋址方式需要的偏移量</td><td align="center">立即尋址方式需要的數值本身</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     dest, src<br></code></pre></td></tr></table></figure><h2 id="立即數尋址方式"><a href="#立即數尋址方式" class="headerlink" title="立即數尋址方式"></a>立即數尋址方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     al, 05h<br>mov     ax, 0102h<br></code></pre></td></tr></table></figure><h2 id="寄存器尋址方式"><a href="#寄存器尋址方式" class="headerlink" title="寄存器尋址方式"></a>寄存器尋址方式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     ax, 1234h<br>mov     bx, ax<br></code></pre></td></tr></table></figure><h2 id="存儲器尋址方式"><a href="#存儲器尋址方式" class="headerlink" title="存儲器尋址方式"></a>存儲器尋址方式</h2><h3 id="直接尋址方式"><a href="#直接尋址方式" class="headerlink" title="直接尋址方式"></a>直接尋址方式</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     ax, [2000h]<br></code></pre></td></tr></table></figure><p>默認情況下，有效地址要與<code>DS</code>一起構成操作數所在物理單元的物理地址。<br>數據也可存放於附加段、代碼段、堆棧段中，此時指令應指明段超越前綴。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     ax, es:[2000h]<br></code></pre></td></tr></table></figure><h3 id="寄存器間接尋址方式"><a href="#寄存器間接尋址方式" class="headerlink" title="寄存器間接尋址方式"></a>寄存器間接尋址方式</h3><p>有效地址存放在寄存器中（<code>BX</code>/<code>SI</code>/<code>DI</code>），默認段地址在<code>DS</code>段寄存器中。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     ax, [si]<br></code></pre></td></tr></table></figure><h3 id="寄存器相對尋址方式"><a href="#寄存器相對尋址方式" class="headerlink" title="寄存器相對尋址方式"></a>寄存器相對尋址方式</h3><p>操作數有效地址<code>EA</code>=<code>BX</code>/<code>BP</code>/<code>SI</code>/<code>DI</code>+8/16位位移量。<br>基址寄存器使用<code>BX</code>/<code>SI</code>/<code>DI</code>，默認段爲<code>DS</code>；基址寄存器使用<code>BP</code>，默認段爲<code>SS</code>。  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     ax, [di+06h]<br>mov     ax, [bp+06h]<br>mov     ax, [bp]<br></code></pre></td></tr></table></figure><h3 id="基址變址尋址方式"><a href="#基址變址尋址方式" class="headerlink" title="基址變址尋址方式"></a>基址變址尋址方式</h3><p>操作數有效地址<code>EA</code>=<code>BX</code>/<code>BP</code>+<code>SI</code>/<code>DI</code>。<br>基址寄存器使用<code>BX</code>，默認段爲<code>DS</code>；基址寄存器使用<code>BP</code>，默認段爲<code>SS</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     ax, [bx+si]<br>mov     ax, [bp]<br></code></pre></td></tr></table></figure><h3 id="相對基址變址尋址方式"><a href="#相對基址變址尋址方式" class="headerlink" title="相對基址變址尋址方式"></a>相對基址變址尋址方式</h3><p>操作數有效地址<code>EA</code>=<code>BX</code>/<code>BP</code>+<code>SI</code>/<code>DI</code>+8/16位位移量。<br>基址寄存器使用<code>BX</code>/<code>SI</code>/<code>DI</code>，默認段爲<code>DS</code>；基址寄存器使用<code>BP</code>，默認段爲<code>SS</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">mov     ax, [bx+si+06h]<br></code></pre></td></tr></table></figure><p><strong>注意</strong>：<br>位移量可用符號表示，如<code>mov      ax, [si+count]</code>。<br>統一尋址方式可寫成不同方式。</p><h2 id="數據尋址的結合"><a href="#數據尋址的結合" class="headerlink" title="數據尋址的結合"></a>數據尋址的結合</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">指令助記符  reg, imm/reg/mem<br>指令助記符  mem, imm/reg<br></code></pre></td></tr></table></figure><h1 id="常用debug指令"><a href="#常用debug指令" class="headerlink" title="常用debug指令"></a>常用<code>debug</code>指令</h1><h2 id="a（彙編）"><a href="#a（彙編）" class="headerlink" title="a（彙編）"></a><code>a</code>（彙編）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-a                      ; 不指定地址  <br>-a [addr]               ; 指定地址<br></code></pre></td></tr></table></figure><h2 id="u（反彙編）"><a href="#u（反彙編）" class="headerlink" title="u（反彙編）"></a><code>u</code>（反彙編）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-u [start_addr]<br>-u [start_addr end_addr] <br></code></pre></td></tr></table></figure><h2 id="t（跟蹤）（單步執行）"><a href="#t（跟蹤）（單步執行）" class="headerlink" title="t（跟蹤）（單步執行）"></a><code>t</code>（跟蹤）（單步執行）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-t                      ; 執行一條指令<br>-t 10                   ; 執行下面10H(16)條指令<br>-t=3 2                  ; 從指定IP=0003開始執行下面2條指令<br></code></pre></td></tr></table></figure><h2 id="g（斷點執行）"><a href="#g（斷點執行）" class="headerlink" title="g（斷點執行）"></a><code>g</code>（斷點執行）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-g                      ; 從程序當前位置執行至斷點處，若無斷點則直到程序結束<br>-g 200                  ; 從程序當前位置執行至斷點處（200H）結束<br>-g=200 260              ; 從指定地址（200H）執行至斷點處（260H）結束 <br></code></pre></td></tr></table></figure><h2 id="d（數據顯示）"><a href="#d（數據顯示）" class="headerlink" title="d（數據顯示）"></a><code>d</code>（數據顯示）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-d                      ; 顯示從上一次結果處開始80H個字節的內容    <br>-d 200                  ; 顯示從DS:200H處開始80H個字節的內容<br>...<br></code></pre></td></tr></table></figure><h2 id="e（修改數據）"><a href="#e（修改數據）" class="headerlink" title="e（修改數據）"></a><code>e</code>（修改數據）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-e                      ; 修改數據<br>-e 200 (xx..)           ; 修改從DS:200H處的內容爲兩位十六進制數xx（可修改多個）<br>...<br></code></pre></td></tr></table></figure><h2 id="r（寄存器）"><a href="#r（寄存器）" class="headerlink" title="r（寄存器）"></a><code>r</code>（寄存器）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-r                      ; 顯示所有寄存器內容  <br>...<br></code></pre></td></tr></table></figure><h2 id="h（十六進制運算）"><a href="#h（十六進制運算）" class="headerlink" title="h（十六進制運算）"></a><code>h</code>（十六進制運算）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-h 20 19                ; 輸出兩個數的加減運算結果<br>0039 0007<br></code></pre></td></tr></table></figure><h2 id="q（退出）"><a href="#q（退出）" class="headerlink" title="q（退出）"></a><code>q</code>（退出）</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Assembly">-q<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>Assembly</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Assembly</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>己亥臨元旦書懷步賴和韻</title>
    <link href="/poem/Near2020/"/>
    <url>/poem/Near2020/</url>
    
    <content type="html"><![CDATA[<blockquote><p><em>半暝無眠，賦詩一首。期末其勉之。</em>  </p></blockquote><span id="more"></span><p><strong>自冉</strong><sup id="fnref:1" class="footnote-ref"><a href="#fn:1" rel="footnote"><span class="hint--top hint--rounded" aria-label="借大員小英「自自冉冉歡喜新春」之不學自嘲。">[1]</span></a></sup>經年繼晷身<br>欣憂並論過新春<br>時情豈有超然輩<br>現世安尋遁跡人<br>巧算精求<strong>資構</strong><sup id="fnref:2" class="footnote-ref"><a href="#fn:2" rel="footnote"><span class="hint--top hint--rounded" aria-label="數據（資料）結構（data structure）。  ">[2]</span></a></sup>切<br>致思窮究<strong>統推</strong><sup id="fnref:3" class="footnote-ref"><a href="#fn:3" rel="footnote"><span class="hint--top hint--rounded" aria-label="統計推斷（statistical inference）。  ">[3]</span></a></sup>真<br><strong>三時奈悒</strong><sup id="fnref:4" class="footnote-ref"><a href="#fn:4" rel="footnote"><span class="hint--top hint--rounded" aria-label="雙關。既有時或忍憂之義，「三時sam-sî」當以漳語解之；又兼sometimes naive之音意譯，「奈悒nāi-ip」宜以漳音對焉。  ">[4]</span></a></sup>終開悟<br>幸遇平凡摯友親  </p><section class="footnotes"><h3>註</h3><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span>借大員小英「自自冉冉歡喜新春」之不學自嘲。<a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span>數據（資料）結構（data structure）。<a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:3" class="footnote-text"><span>統計推斷（statistical inference）。<a href="#fnref:3" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:4" class="footnote-text"><span>雙關。既有時或忍憂之義，「<ruby>三時<rt>sam-sî</rt></ruby>」當以漳語解之；又兼sometimes naive之音意譯，「<ruby>奈悒<rt>nāi-ip</rt></ruby>」宜以漳音對焉。<a href="#fnref:4" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    <categories>
      
      <category>詩詞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>詩</tag>
      
      <tag>七言律詩</tag>
      
      <tag>2020</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenCV編譯學習隨錄</title>
    <link href="/opencv/OpenCVCompilationNotes/"/>
    <url>/opencv/OpenCVCompilationNotes/</url>
    
    <content type="html"><![CDATA[<p>前幾日學習OpenCV，愛用遘SIFT/SURF。但是OpenCV3以後兮官方版本默認無<code>nonfree.hpp</code>。  </p><span id="more"></span><p>不過，佇<a href="https://github.com/opencv">OpenCV官方GitHub倉庫</a>兮<code>opencv_contrib</code>內底，猶有<code>opencv2/xfeatures2d/nonfree.hpp</code>。只是需要配合<code>opencv</code>自行<ruby>編譯<rt>phian-e̍k</rt></ruby>。於是參考了網頂兮博文：<a href="https://blog.csdn.net/Gordon_Wei/article/details/85775328">【OpenCV】opencv4.0.1+opencv_contrib4.0.1+VS2015的编译</a>，如法炮製，用CMake編譯OpenCV4.1.2(+opencv_contrib)。期間狀況頻頻，一言難盡。  </p><p>編譯成功了後，刪除之前下載兮OpenCV4.0.1版本，換做家己編譯兮。<br>用Visual Studio 2019新建解決方案，<ruby>調試<rt>tiâu-tshì</rt></ruby>時竟然報錯：<code>无法打开文件“opencv_world401d.lib”</code>。<br>檢查<ruby>項目屬性<rt>hāng-bo̍k sio̍k-sèng</rt></ruby> - <ruby>鏈接器<rt>liān-tsiap-khì</rt></ruby>-<ruby>輸入<rt>si-ji̍p</rt></ruby>，發現已經刪除兮<code>opencv_world401d.lib</code>竟然猶囥佇<ruby>附加依賴項<rt>hū-kee i-nāi-hāng</rt></ruby>繼承兮項目默認設置：<code>%(AdditionalDependencies)</code>內底，而且無法直接通過<ruby>窗口<rt>thang-kháu</rt></ruby> <ruby>編輯<rt>phian-tship</rt></ruby> <ruby>移除<rt>î-tî</rt></ruby>。  </p><p>佇中文網站<ruby>搜尋<rt>sou-sîm</rt></ruby>如何修改<code>%(AdditionalDependencies)</code>未果，好佳哉佇<a href="https://stackoverflow.com/questions/6714269/vs-2010-unable-to-remove-inherited-additional-dependencies">Stack Overflow</a> 揣着辦法：<br>只要修改<code>C:\Users\%USERPROFILE%\AppData\Local\Microsoft\MSBuild\v4.0</code>內底兮項目屬性文件<code>Microsoft.Cpp.Win32.user.props</code>（按：OpenCV64位版本愛對應修改<code>Microsoft.Cpp.x64.user.props</code>），着解使刪除鏈接器繼承兮附加依賴項。  </p><p>最後，呵咾Stack Overflow社區，成熟兼專業。</p>]]></content>
    
    
    <categories>
      
      <category>OpenCV</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
      <tag>OpenCV</tag>
      
      <tag>CMake</tag>
      
      <tag>Visual Studio</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>臺灣閩南語Unicode擴展漢字</title>
    <link href="/hokkien/TaiwaneseHokkienCJKExt/"/>
    <url>/hokkien/TaiwaneseHokkienCJKExt/</url>
    
    <content type="html"><![CDATA[<p>根據《臺灣閩南語漢字輸入法》所附CJK擴展區及私用區漢字整理。<br>凡<strong>異寫</strong>字加粗者，乃對岸頒佈之「推薦用字」（即所謂「正字」）。<em>斜體</em>字乃未出現於《臺灣閩南語常用詞辭典》，惟賴他處資料補正，仍有缺漏。</p><span id="more"></span><h1 id="CJK擴展A區"><a href="#CJK擴展A區" class="headerlink" title="CJK擴展A區"></a>CJK擴展A區</h1><table><thead><tr><th align="center">漢字</th><th align="center">Unicode</th><th align="center">臺羅</th><th align="center">異寫</th><th align="center">釋義</th><th align="center">備註</th></tr></thead><tbody><tr><td align="center">㔂</td><td align="center">U+3502</td><td align="center">lan5</td><td align="center"></td><td align="center">&lt;動&gt;削掉外皮或突出的枝椏部分。</td><td align="center"></td></tr><tr><td align="center">㤉</td><td align="center">U+3909</td><td align="center">ge5</td><td align="center"></td><td align="center">&lt;動&gt;討厭、嫌惡。</td><td align="center">替字，不合規律。雲霄語gei5</td></tr><tr><td align="center">㧌</td><td align="center">U+39CC</td><td align="center">mau1</td><td align="center"></td><td align="center">&lt;動&gt;揍、打。以拳頭或棍棒用力地打下去。&lt;名&gt;凹陷。</td><td align="center"></td></tr><tr><td align="center">㧎</td><td align="center">U+39CE</td><td align="center">khe5</td><td align="center"></td><td align="center">&lt;動&gt;卡住。&lt;形&gt;不通順的、不順暢的、不和睦的。</td><td align="center">漳腔khee5</td></tr><tr><td align="center">㧒</td><td align="center">U+39D2</td><td align="center">hiat4</td><td align="center"></td><td align="center">&lt;動&gt;丟棄、亂扔。</td><td align="center">雲霄語hat4</td></tr><tr><td align="center">㧣</td><td align="center">U+39E3</td><td align="center">tu1</td><td align="center"></td><td align="center">&lt;動&gt;1.推。2.硬塞、推塞。3.推出。指推某人做某事。4.抵抗、抵擋、將就。5.出言反駁、爭辯。6.撅。</td><td align="center"></td></tr><tr><td align="center">㧳</td><td align="center">U+39F3</td><td align="center">pue2</td><td align="center"><strong>掰</strong></td><td align="center">&lt;動&gt;1.撥、拂。2.擋開。</td><td align="center"></td></tr><tr><td align="center">㧻</td><td align="center">U+39FB</td><td align="center">tok4</td><td align="center"></td><td align="center">&lt;動&gt;敲擊。</td><td align="center"></td></tr><tr><td align="center">㨂</td><td align="center">U+3A02</td><td align="center">tang3</td><td align="center"></td><td align="center">&lt;動&gt;用指甲掐入皮膚，使其留下指痕，產生劇痛。</td><td align="center"></td></tr><tr><td align="center">㨑</td><td align="center">U+3A11</td><td align="center">tsang1</td><td align="center"></td><td align="center">&lt;動&gt;1.逮到、捉到。通常用在抓到別人的把柄。2.將東西捆起來、束起來。</td><td align="center"></td></tr><tr><td align="center">㨨</td><td align="center">U+3A28</td><td align="center">liu5</td><td align="center"></td><td align="center">&lt;動&gt;解開線紬或布條。</td><td align="center"></td></tr><tr><td align="center">㨻</td><td align="center">U+3A3B</td><td align="center">tsann7</td><td align="center"></td><td align="center">&lt;動&gt;撈。將湯上面的浮渣舀掉。也指類似的動作。</td><td align="center"></td></tr><tr><td align="center">㪗</td><td align="center">U+3A97</td><td align="center">thau2</td><td align="center"></td><td align="center">&lt;動&gt;1.解開。2.通暢。3.聲名遠播。4.走運。</td><td align="center"></td></tr><tr><td align="center">㴘</td><td align="center">U+3D18</td><td align="center">bauh8</td><td align="center"></td><td align="center">&lt;動&gt;沖泡。</td><td align="center"></td></tr><tr><td align="center">㴙</td><td align="center">U+3D19</td><td align="center">tshap8</td><td align="center"></td><td align="center">擬聲詞，水滴聲。如：「㴙㴙滴」tsha̍p-tsha̍p-tih &lt;動&gt;滴瀝瀝、滴個不停、滴滴答答。</td><td align="center">雲霄語tshop8</td></tr><tr><td align="center">㷮</td><td align="center">U+3DEE</td><td align="center">tsau1</td><td align="center"></td><td align="center">「柴㷮」tshâ-tsau &lt;名&gt;未燒盡的木炭、木頭。</td><td align="center"></td></tr><tr><td align="center">㽎</td><td align="center">U+3F4E</td><td align="center">sim3</td><td align="center"></td><td align="center">&lt;動&gt;上下晃動、上下彈動。指柔軟有彈性。</td><td align="center"></td></tr><tr><td align="center">㾀</td><td align="center">U+3F80</td><td align="center">khiap4</td><td align="center"></td><td align="center">&lt;動&gt;變壞、搞壞。&lt;形&gt;醜、不好看。</td><td align="center"></td></tr><tr><td align="center">㾪</td><td align="center">U+3FAA</td><td align="center">san2</td><td align="center"><strong>瘦</strong></td><td align="center">&lt;形&gt;1.沒油水、沒脂肪的樣子。2.貧瘠。</td><td align="center"></td></tr><tr><td align="center">䀐</td><td align="center">U+4010</td><td align="center">siam1</td><td align="center"></td><td align="center">&lt;動&gt;瞄、偷看。迅速地看一下子。</td><td align="center"></td></tr><tr><td align="center">䆀</td><td align="center">U+4180</td><td align="center">bai2</td><td align="center"></td><td align="center">&lt;形&gt;1.醜陋。2.惡劣、糟糕。3.差勁、不好。</td><td align="center"></td></tr><tr><td align="center">䈄</td><td align="center">U+4204</td><td align="center">ham1</td><td align="center"></td><td align="center">&lt;名&gt;竹節。「竹䈄」tik-ham &lt;名&gt;兩竹目間的段落。</td><td align="center"></td></tr><tr><td align="center">䉔</td><td align="center">U+4254</td><td align="center">tshuann1</td><td align="center"><strong>扦</strong></td><td align="center">&lt;動&gt;刺。通常用在被細尖物刺入皮膚。&lt;名&gt;竹子或木頭的尖細小刺，也指形狀相似的東西。</td><td align="center"></td></tr><tr><td align="center">䖙</td><td align="center">U+4599</td><td align="center">the1</td><td align="center"></td><td align="center">&lt;動&gt;身體半躺臥，小憩。</td><td align="center"></td></tr><tr><td align="center">䖳</td><td align="center">U+45B3</td><td align="center">the7</td><td align="center"></td><td align="center">&lt;名&gt;水母。刺絲胞動物（腔腸動物）。身體呈現透明，上有如傘的頭蓋，其下有多隻觸角，品種繁多，常有劇毒，亦有可食者。可食者曬乾後製成「海蜇皮」，為口感爽脆富彈性的涼拌菜。</td><td align="center">漳腔thee7</td></tr><tr><td align="center">䘥</td><td align="center">U+4625</td><td align="center">kah4</td><td align="center"></td><td align="center">「䘥仔」kah-á &lt;名&gt;背心。無袖無領的上衣。</td><td align="center"></td></tr><tr><td align="center">䘼</td><td align="center">U+463C</td><td align="center">ng2</td><td align="center"></td><td align="center">&lt;名&gt;袖子。</td><td align="center">漳腔uinn2</td></tr><tr><td align="center">䠡</td><td align="center">U+4821</td><td align="center">tshe5</td><td align="center"></td><td align="center">&lt;動&gt;1.以手撐地，臀部靠著地面，拖行前進。指瘸腿的人或嬰幼兒前進的一種方式。2.雙腳或過長的衣物在地上摩擦。</td><td align="center">雲霄語tshei5</td></tr><tr><td align="center">䢢</td><td align="center">U+48A2</td><td align="center">tshiang7</td><td align="center"></td><td align="center">「拄䢢」tú-tshiāng &lt;副&gt;碰巧，剛好。</td><td align="center">雲霄語tshiong7</td></tr><tr><td align="center"><em>䩉</em></td><td align="center">U+4A49</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center"><em>䫀</em></td><td align="center">U+4AC0</td><td align="center">kun2</td><td align="center"><strong>頸</strong></td><td align="center">&lt;名&gt;脖子。</td><td align="center"></td></tr><tr><td align="center">䫌</td><td align="center">U+4ACC</td><td align="center">phue2</td><td align="center"></td><td align="center">&lt;名&gt;頰或臀部整片肌肉的部分。</td><td align="center">雲霄語phei2</td></tr><tr><td align="center">䲅</td><td align="center">U+4C85</td><td align="center">kui1</td><td align="center"></td><td align="center">「刺䲅」tshì-kui &lt;名&gt;六斑刺河豚。魚類。全身除吻端和尾鰭外，密佈長棘，頭部的棘較身體上之棘為長，無毒，味道鮮美，是饕客喜歡品嚐的一種海鮮。</td><td align="center"></td></tr></tbody></table><h1 id="CJK擴展B區"><a href="#CJK擴展B區" class="headerlink" title="CJK擴展B區"></a>CJK擴展B區</h1><table><thead><tr><th align="center">漢字</th><th align="center">IDS</th><th align="center">Unicode</th><th align="center">臺羅</th><th align="center">異寫</th><th align="center">釋義</th><th align="center">備註</th></tr></thead><tbody><tr><td align="center">𠕆</td><td align="center">⿵冇一</td><td align="center">U+20546</td><td align="center">ting7</td><td align="center"></td><td align="center">&lt;形&gt;硬的、堅實的。</td><td align="center">雲霄語ten7(teng7)</td></tr><tr><td align="center">𠕇</td><td align="center">⿵冇丶</td><td align="center">U+20547</td><td align="center">ting7</td><td align="center"></td><td align="center">（同上）</td><td align="center"></td></tr><tr><td align="center">𠞩</td><td align="center">⿰率刂</td><td align="center">U+207A9</td><td align="center">tsui5</td><td align="center"></td><td align="center">&lt;動&gt;刀子在圓柱型的東西上，以刀口與平面垂直的方式邊切邊繞圈，漸漸將東西切斷。</td><td align="center"></td></tr><tr><td align="center">𠞭</td><td align="center">⿰婁刂</td><td align="center">U+207AD</td><td align="center">lio5</td><td align="center"></td><td align="center">&lt;動&gt;1.用刀子割取、刮取薄薄的表層或切成片狀。2.用刀子在章魚、腰子等食物上面淺淺地畫花紋。3.切割、割除。</td><td align="center"></td></tr><tr><td align="center">𠢕</td><td align="center">⿱敖力</td><td align="center">U+20895</td><td align="center">gau5</td><td align="center"></td><td align="center">&lt;形&gt;能幹、有本事。&lt;副&gt;1.擅長於做某事。2.易發生某事。</td><td align="center"></td></tr><tr><td align="center">𠯗</td><td align="center">⿰口帀</td><td align="center">U+20BD7</td><td align="center">tsip8</td><td align="center"></td><td align="center">&lt;動&gt;小口地吸吮飲品。</td><td align="center"></td></tr><tr><td align="center">𠲿</td><td align="center">⿰口束</td><td align="center">U+20CBF</td><td align="center">suh4</td><td align="center"></td><td align="center">（=欶）&lt;動&gt;吸。</td><td align="center"></td></tr><tr><td align="center">𡢃</td><td align="center">⿰女間</td><td align="center">U+21883</td><td align="center">kan2</td><td align="center"></td><td align="center">&lt;名&gt;婢女。</td><td align="center"></td></tr><tr><td align="center"><em>𡨞</em></td><td align="center">⿳⿱宀彐冖又</td><td align="center">U+21A1E</td><td align="center">tshim2</td><td align="center"><strong>寢</strong></td><td align="center">&lt;副&gt;纔。剛才，不久之前。</td><td align="center"></td></tr><tr><td align="center">𡳞</td><td align="center">⿸尸粦</td><td align="center">U+21CDE</td><td align="center">lan7</td><td align="center">膦卵</td><td align="center">&lt;名&gt;男性或雄性動物的生殖器。</td><td align="center"></td></tr><tr><td align="center">𢓜</td><td align="center">⿰彳各</td><td align="center">U+224DC</td><td align="center">kah4</td><td align="center"><strong>甲</strong></td><td align="center">&lt;動&gt;到。表示抵達某個地點、時間或狀態。&lt;副&gt;到……的地步。表示所達到的結果或程度。&lt;連&gt;既然，表示事情的前提。&lt;疑&gt;哪會、怎麼會、怎麼可能，用於反詰。</td><td align="center"></td></tr><tr><td align="center">𢪱</td><td align="center">⿰扌勿</td><td align="center">U+22AB1</td><td align="center">but8</td><td align="center"></td><td align="center">&lt;動&gt;用力敲擊下去。指用棍、棒等由上往下，或由內往外用力打下去。</td><td align="center"></td></tr><tr><td align="center">𢯾</td><td align="center">⿰扌冒</td><td align="center">U+22BFE</td><td align="center">mooh4</td><td align="center"></td><td align="center">&lt;動&gt;緊抱、緊貼。</td><td align="center"></td></tr><tr><td align="center">𢲸</td><td align="center">⿰扌鹵</td><td align="center">U+22CB8</td><td align="center">loo7</td><td align="center"></td><td align="center">&lt;形&gt;因為不牢固而動搖。</td><td align="center"></td></tr><tr><td align="center">𢼌</td><td align="center">⿰包攴</td><td align="center">U+22F0C</td><td align="center">pa1</td><td align="center"></td><td align="center">&lt;動&gt;用手掌拍打頭部、臉部。</td><td align="center"></td></tr><tr><td align="center">𣁳</td><td align="center">⿰舌斗</td><td align="center">U+23073</td><td align="center">khat4</td><td align="center"></td><td align="center">&lt;名&gt;杓子、水瓢。&lt;動&gt;舀。</td><td align="center"></td></tr><tr><td align="center">𣍐</td><td align="center">⿰勿會</td><td align="center">U+23350</td><td align="center">be7/bue7</td><td align="center"><strong>袂</strong></td><td align="center">&lt;副&gt;不。否定詞。</td><td align="center"></td></tr><tr><td align="center">𣛮</td><td align="center">⿰木盛</td><td align="center">U+236EE</td><td align="center">siann7</td><td align="center"></td><td align="center">&lt;名&gt;扛臺。容器名。結婚或祝壽時裝運禮物的雙人抬的紅色長方形大木箱，通常為木製。&lt;量&gt;擔、臺、籃。</td><td align="center"></td></tr><tr><td align="center">𣮈</td><td align="center">⿱屈毛</td><td align="center">U+23B88</td><td align="center">khut8</td><td align="center"></td><td align="center">「孤𣮈」koo-khu̍t&lt;名&gt;無父無母無兄弟姊妹、親戚的光棍。&lt;形&gt;孤僻。不喜歡交際。</td><td align="center"></td></tr><tr><td align="center">𣻸</td><td align="center">⿰氵常</td><td align="center">U+23EF8</td><td align="center">siunn5</td><td align="center"></td><td align="center">&lt;名&gt;黏液。&lt;形&gt;黏滑的。</td><td align="center"></td></tr><tr><td align="center">𤆬</td><td align="center">⿱毛灬</td><td align="center">U+241AC</td><td align="center">tshua7</td><td align="center"></td><td align="center">&lt;動&gt;1.帶領、引導。2.照顧、養育。3.引誘、誘拐。</td><td align="center"></td></tr><tr><td align="center">𤉙</td><td align="center">⿰火君</td><td align="center">U+24259</td><td align="center">kun5</td><td align="center"></td><td align="center">&lt;動&gt;將食物放在水裡長時間熬煮。</td><td align="center"></td></tr><tr><td align="center">𤏸</td><td align="center">⿰火著</td><td align="center">U+243F8</td><td align="center">toh8</td><td align="center"><strong>著</strong></td><td align="center">&lt;動&gt;1.燃、燒。2.點燈。把燈點亮。</td><td align="center"></td></tr><tr><td align="center">𤞚</td><td align="center">⿰犭肖</td><td align="center">U+2479A</td><td align="center">siau2</td><td align="center"></td><td align="center">&lt;動&gt;1.瘋狂、神經錯亂。2.動物發情。&lt;形&gt;形容精神失常、發狂的樣子。&lt;動&gt;沉迷。</td><td align="center"></td></tr><tr><td align="center">𤲍</td><td align="center">⿰甲夾</td><td align="center">U+24C8D</td><td align="center">kheh4/khueh4</td><td align="center"></td><td align="center">&lt;動&gt;擠。&lt;形&gt;擁擠。</td><td align="center"></td></tr><tr><td align="center">𤶃</td><td align="center">⿸疒兆</td><td align="center">U+24D83</td><td align="center">thiau7</td><td align="center"></td><td align="center">&lt;名&gt;青春痘、面皰。</td><td align="center"></td></tr><tr><td align="center">𤺅</td><td align="center">⿸疒⿰祟又</td><td align="center">U+24E85</td><td align="center">tshe3</td><td align="center"></td><td align="center">「魚鱗𤺅仔」hî/hû-lân-tshè-á &lt;名&gt;病名。一種皮膚病。患者皮膚因病毒感染而產生病變，長出一顆顆贅疣，狀如魚鱗。</td><td align="center"></td></tr><tr><td align="center">𤺪</td><td align="center">⿸疒善</td><td align="center">U+24EAA</td><td align="center">sian7</td><td align="center"></td><td align="center">&lt;形&gt;1.身體上疲倦、疲憊的樣子。2.心理上覺得厭倦、厭煩。指經常或過多的接觸而產生。</td><td align="center"></td></tr><tr><td align="center">𤿎</td><td align="center">⿰比皮</td><td align="center">U+24FCE</td><td align="center">pit4</td><td align="center"><strong>必</strong></td><td align="center">&lt;動&gt;1.皮膚因為缺乏滋潤而皸裂。2.東西產生裂痕。</td><td align="center"></td></tr><tr><td align="center"><em>𥌚</em></td><td align="center">⿰目賣</td><td align="center">U+2531A</td><td align="center">mai7</td><td align="center"><strong>覓</strong></td><td align="center">動詞後綴。有表示試探的意思。</td><td align="center"></td></tr><tr><td align="center">𥍉</td><td align="center">⿰目聶</td><td align="center">U+25349</td><td align="center">liap4&#124;nih4</td><td align="center">睰</td><td align="center">&lt;動&gt;眨。眼睛一開一合。&#124;&lt;動&gt;眨。眼睛一開一合。後用來引申時間很短。</td><td align="center"></td></tr><tr><td align="center">𥐵</td><td align="center">⿰石匹</td><td align="center">U+25435</td><td align="center">phiat4</td><td align="center"></td><td align="center">&lt;名&gt;碟子、盤子。又稱「𥐵仔」。&lt;量&gt;盤、碟。計算盤形物數量的單位。</td><td align="center"></td></tr><tr><td align="center">𥑮</td><td align="center">⿰石古</td><td align="center">U+2546E</td><td align="center">koo2</td><td align="center"></td><td align="center">「硓𥑮石」lóo-kóo-tsio̍h &lt;名&gt;一種珊瑚礁化石，被當作石灰岩建材使用，外貌多孔，澎湖地區遺留許多硓𥑮石牆，成為深具地方特色的景觀。</td><td align="center"></td></tr><tr><td align="center">𥰔</td><td align="center">⿱竹品</td><td align="center">U+25C14</td><td align="center">phin2</td><td align="center"></td><td align="center">&lt;名&gt;橫笛。樂器名。上面有孔洞。現今的笛子開八孔，最左邊的是吹孔，其次是膜孔，之下有六個指孔，橫吹按孔以發聲。所吹奏的音調範圍極廣，可伴奏亦可獨奏。</td><td align="center"></td></tr><tr><td align="center">𥱊</td><td align="center">⿱竹席</td><td align="center">U+25C4A</td><td align="center">tshioh8</td><td align="center"><strong>蓆</strong></td><td align="center">&lt;名&gt;以草莖或竹子編成，用來坐臥的墊子。</td><td align="center"></td></tr><tr><td align="center">𥴊</td><td align="center">⿱竹敢</td><td align="center">U+25D0A</td><td align="center">kam2</td><td align="center"></td><td align="center">&lt;名&gt;圓型盛物的淺竹筐。多說成「𥴊仔」（kám-á）。&lt;量&gt;簍。計算竹簍、竹筐的單位。</td><td align="center"></td></tr><tr><td align="center">𦉎</td><td align="center">⿰缶崔</td><td align="center">U+2624E</td><td align="center">sui1</td><td align="center"></td><td align="center">&lt;名&gt;龜頭。</td><td align="center"></td></tr><tr><td align="center">𦊓</td><td align="center">⿱罒令</td><td align="center">U+26293</td><td align="center">ling5</td><td align="center"></td><td align="center">&lt;名&gt;漁網的一種，為固定式的長網。&lt;動&gt;以長網捕魚。</td><td align="center"></td></tr><tr><td align="center">𦜆</td><td align="center">⿰月函</td><td align="center">U+26706</td><td align="center">ham1</td><td align="center"></td><td align="center">&lt;名&gt;顎。口腔內部上下壁部分。</td><td align="center"></td></tr><tr><td align="center">𦟪</td><td align="center">⿰月連</td><td align="center">U+267EA</td><td align="center">lian5</td><td align="center"></td><td align="center">「肝𦟪」kuann-liân &lt;名&gt;肝連、豬肝連肌。位於豬隻第十二根和第十四根肋骨之間，靠近背脊柱處的一塊柔軟富紋理的橢圓形肌肉。在臺灣小吃中，肝𦟪肉是很受歡迎的小菜。</td><td align="center"></td></tr><tr><td align="center"><em>𦠖</em></td><td align="center">⿰月⿱⿳十中冖包</td><td align="center">U+26816</td><td align="center"></td><td align="center"></td><td align="center"></td><td align="center"></td></tr><tr><td align="center">𧉟</td><td align="center">⿰虫台</td><td align="center">U+2725F</td><td align="center">tai5</td><td align="center"></td><td align="center">一種會附著於雞、鴨、鵝等家禽羽毛上的小蟲，米或糠放久了也會長出這種小蟲。</td><td align="center"></td></tr><tr><td align="center">𧌄</td><td align="center">⿰虫奄</td><td align="center">U+27304</td><td align="center">am1</td><td align="center"></td><td align="center">「𧌄蜅蠐」am-poo-tsê &lt;名&gt;蟬。動物名。俗稱「知了」。頭短體長，有兩隻突出的複眼，翅膀兩對，薄且透明。雄蟬腹部有發聲器，叫聲尖銳，夏天會連續叫個不停。</td><td align="center"></td></tr><tr><td align="center">𧮙</td><td align="center">⿱⿰⿶丵臼殳言</td><td align="center">U+27B99</td><td align="center">tshoh4</td><td align="center"></td><td align="center">用粗鄙的話罵人。</td><td align="center"></td></tr><tr><td align="center">𧿬</td><td align="center">⿰足屯</td><td align="center">U+27FEC</td><td align="center">thun2</td><td align="center"></td><td align="center">&lt;動&gt;亂踩、踐踏。</td><td align="center"></td></tr><tr><td align="center">𧿳</td><td align="center">⿰足弗</td><td align="center">U+27FF3</td><td align="center">phut8</td><td align="center"></td><td align="center">「𧿳𧿳跳」phu̍t-phu̍t-thiàu &lt;動&gt;1.生氣或開心的時候不停的直跳腳。2.活蹦亂跳、充滿生氣。</td><td align="center"></td></tr><tr><td align="center">𨂾</td><td align="center">⿰足南</td><td align="center">U+280BE</td><td align="center">lam2</td><td align="center"></td><td align="center">&lt;動&gt;用腳使勁踹、用力踢。</td><td align="center"></td></tr><tr><td align="center">𨂿</td><td align="center">⿰足歪</td><td align="center">U+280BF</td><td align="center">uainn2</td><td align="center"></td><td align="center">&lt;動&gt;足踝扭到。</td><td align="center"></td></tr><tr><td align="center">𨑨</td><td align="center">⿺辶日</td><td align="center">U+28468</td><td align="center">tshit4</td><td align="center"></td><td align="center">「𨑨迌」tshit-thô &lt;動&gt;1.遊玩。2.玩弄。&lt;形&gt;好玩的。</td><td align="center"></td></tr><tr><td align="center">𩑾</td><td align="center">⿰氐頁</td><td align="center">U+2947E</td><td align="center">tshih4</td><td align="center"></td><td align="center">&lt;動&gt;頭向下低垂。&lt;形&gt;形容頭低垂下來的樣子。</td><td align="center"></td></tr><tr><td align="center">𩚨</td><td align="center">⿰飠丘</td><td align="center">U+296A8</td><td align="center">khiu7</td><td align="center"></td><td align="center">&lt;形&gt;形容食物柔軟而有彈性、韌性。</td><td align="center"></td></tr><tr><td align="center">𩛩</td><td align="center">⿰飠夾</td><td align="center">U+296E9</td><td align="center">kauh4</td><td align="center"></td><td align="center">&lt;動&gt;夾進、捲入。&lt;名&gt;成捲的食物、包在一起的食物。&lt;量&gt;捲。計算成捲物品的單位。&lt;動&gt;1.把肥料犁入土中。2.嬰兒皮膚受刺激而紅腫。</td><td align="center"></td></tr><tr><td align="center">𩟗</td><td align="center">⿱漸食</td><td align="center">U+297D7</td><td align="center">tsiann2</td><td align="center"><strong>汫</strong></td><td align="center">&lt;形&gt;味道淡、不鹹。</td><td align="center"></td></tr><tr><td align="center">𩵱</td><td align="center">⿰魚午</td><td align="center">U+29D71</td><td align="center">ngoo2</td><td align="center"></td><td align="center">&lt;名&gt;馬鱍魚。魚類。喜歡棲息在沙泥底質地形中，在臺灣沿岸、河口、紅樹林等半淡鹹水域中可以看到蹤跡。每年秋末到來年初春是主要的漁期，是高經濟價值魚種。</td><td align="center"></td></tr><tr><td align="center">𩸙</td><td align="center">⿰魚隶</td><td align="center">U+29E19</td><td align="center">tai7</td><td align="center"></td><td align="center">&lt;名&gt;鯉魚。魚類。嘴的外觀呈鈍圓形，有長短觸鬚各一對。脊鰭長、尾鰭分叉。以水草及魚蝦貝類為食物。現在大多以人工飼養為主，主要做為食用魚。</td><td align="center"></td></tr><tr><td align="center">𩸶</td><td align="center">⿰魚岩</td><td align="center">U+29E36</td><td align="center">gam7</td><td align="center"></td><td align="center">「狗𩸶仔」káu-gām-á &lt;名&gt;蝦虎魚。魚類。屬鱸魚的一種，為淡水魚，活動於淺水岩石間，因體輕，魚腹有吸盤可吸附在石頭上，以避免被激流沖走。</td><td align="center"></td></tr><tr><td align="center">𪁎</td><td align="center">⿰肖鳥</td><td align="center">U+2A04E</td><td align="center">tshio1</td><td align="center"></td><td align="center">&lt;形&gt;形容雄性動物發情的樣子。</td><td align="center"></td></tr><tr><td align="center">𪐞</td><td align="center">⿰黑乇</td><td align="center">U+2A41E</td><td align="center">too3</td><td align="center"></td><td align="center">&lt;動&gt;1.染、傳染。2.暈開。液體滴在紙或布上而散開、滲透。3.描。以半透明紙覆蓋原圖上，照著線條畫。</td><td align="center"></td></tr></tbody></table><h1 id="CJK擴展C區及以後（含未定義）"><a href="#CJK擴展C區及以後（含未定義）" class="headerlink" title="CJK擴展C區及以後（含未定義）"></a>CJK擴展C區及以後（含未定義）</h1><table><thead><tr><th align="center">漢字</th><th align="center">IDS</th><th align="center">Unicode</th><th align="center">臺羅</th><th align="center">異寫</th><th align="center">釋義</th><th align="center">備註</th></tr></thead><tbody><tr><td align="center"></td><td align="center"><em>⿰金森</em></td><td align="center">-</td><td align="center">som1?</td><td align="center"><strong>參</strong></td><td align="center">「貴參參」kuì-som-som &lt;形&gt;非常昂貴的。</td><td align="center"></td></tr><tr><td align="center"><em>𫝞</em></td><td align="center">⿰口霧</td><td align="center">U+2B75E</td><td align="center">bu7</td><td align="center"><strong>霧</strong></td><td align="center">&lt;動&gt;1.水往上冒出來，常用在煮湯或燒開水沸騰時，鍋中湯水溢出鍋外。2.口中先含液體再將其噴出。</td><td align="center"></td></tr><tr><td align="center">𫝛</td><td align="center">⿱相同</td><td align="center">U+2B75B</td><td align="center">siang7</td><td align="center">侗</td><td align="center">&lt;形&gt;形容相同、相似或一樣的樣子。</td><td align="center"></td></tr><tr><td align="center">𫟊</td><td align="center">⿰月席</td><td align="center">U+2B7CA</td><td align="center">sioh8</td><td align="center"><strong>液</strong></td><td align="center">&lt;名&gt;皮膚似汗的分泌物。</td><td align="center"></td></tr><tr><td align="center">𪜶</td><td align="center">⿰亻因</td><td align="center">U+2A736</td><td align="center">in1</td><td align="center">怹</td><td align="center">&lt;代&gt;1.他們。第三人稱複數。2.第三人稱的所有格。</td><td align="center"></td></tr><tr><td align="center"></td><td align="center">⿰勿愛</td><td align="center">-</td><td align="center">mai3</td><td align="center"><strong>莫</strong></td><td align="center">&lt;動&gt;不要。表示禁止或勸阻之意。</td><td align="center"></td></tr><tr><td align="center">𫞼</td><td align="center">⿰立在</td><td align="center">U+2B7BC</td><td align="center">tshai7</td><td align="center"></td><td align="center">&lt;動&gt;1.豎立。2.呆呆站著、僵立。</td><td align="center"></td></tr><tr><td align="center">𬦰</td><td align="center">⿰足百</td><td align="center">U+2C9B0</td><td align="center">peh4</td><td align="center"></td><td align="center">&lt;動&gt;爬。攀登。</td><td align="center">漳腔peeh4</td></tr><tr><td align="center"></td><td align="center">⿸疒哥</td><td align="center">-</td><td align="center">ko1</td><td align="center">哥</td><td align="center">「癩~」thái-ko&lt;名&gt;痲瘋病。病名。&lt;形&gt;骯髒。</td><td align="center"></td></tr><tr><td align="center">𫝙</td><td align="center">⿱向上</td><td align="center">U+2B759</td><td align="center">tshio3</td><td align="center"><strong>笑</strong></td><td align="center">「笑桮」tshiò-pue &lt;名&gt;陽筊。祭祀或占卜擲杯筊，兩個都是平面向上的情況。「笑」是借音字，為「面朝上」之意。民間則有「說明不清、神佛主意未定，所以微笑以對」的詮釋。</td><td align="center"></td></tr><tr><td align="center">𫝏</td><td align="center">⿰冫彥</td><td align="center">U+2B74F</td><td align="center">gan3</td><td align="center"></td><td align="center">&lt;動&gt;1.凍、冰冷。2.使冷。3.淬鍊。4.將祭拜的酒倒幾滴到即將燒完的紙錢中，完成祭拜儀式。</td><td align="center"></td></tr><tr><td align="center">𫝺</td><td align="center">⿰扌甩</td><td align="center">U+2B77A</td><td align="center">hiu3</td><td align="center"></td><td align="center">&lt;動&gt;1.灑。指少量而快速地。2.甩。</td><td align="center"></td></tr><tr><td align="center">𫝻</td><td align="center">⿰扌回</td><td align="center">U+2B77B</td><td align="center">hue5</td><td align="center"></td><td align="center">&lt;動&gt;1.輕輕地抹、輕輕地摩擦。2.正反面來回輕磨幾下。</td><td align="center"></td></tr><tr><td align="center">𫟂</td><td align="center">⿰糹寒</td><td align="center">U+2B7C2</td><td align="center">han5</td><td align="center"></td><td align="center">&lt;動&gt;1.輕輕地束縛住。2.虛掩。</td><td align="center"></td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>閩南語</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Unicode</tag>
      
      <tag>CJK</tag>
      
      <tag>漢字</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>語類續篇·莊師談藝術</title>
    <link href="/essay/MrTsngAnalects2Art/"/>
    <url>/essay/MrTsngAnalects2Art/</url>
    
    <content type="html"><![CDATA[<blockquote><p><em>根據 2019/8/19 暝昏座談莊生所言大意整理</em></p></blockquote><span id="more"></span><ul><li><p>「專業是咱安身立命兮基礎。但是呢，汝佇這個專業內面有競爭兮壓力，久而久之有時陣嘛解<ruby>癔<rt>ià</rt></ruby>，甚至按解失去興趣。抑若佇專業之外，有一項業餘兮，做為一種興趣是袂䆀……我當其時若選擇音樂做專業，我本身著面對佮別儂兮競爭，按遐我練手風琴兮時陣，煞著按鐳這方面去考慮。按遐就失去了伊原本兮意義，怎解享受著音樂兮趣味呢？」</p></li><li><p>「寫格律詩較好……汝看現在所謂現代詩，莫講格律，<ruby>含<rt>hām</rt></ruby>押韻都攏無講究，按遐敢<ruby>聽<rt>thèng</rt></ruby>叫做詩啊？當代遮真濟詩人，心內想著啥現寫落來，現表露出來，若講做為散文是猶泛泛，敢聽叫詩？拄按咱畫尪仔，愛落鄉去野外採風，看著啥照實畫落來，做為寫生是解使，但是，寫生敢解使算正式作品？……所以講，寫詩著愛將咱目睭所見、心內所想兮<ruby>交<rt>ka</rt></ruby>提煉出來，並且儘量講究平仄押韻，按遐正解使叫詩。」</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>隨筆</category>
      
    </categories>
    
    
    <tags>
      
      <tag>莊師</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>莊師語類</title>
    <link href="/essay/MrTsngAnalects/"/>
    <url>/essay/MrTsngAnalects/</url>
    
    <content type="html"><![CDATA[<blockquote><p><em>2022/7/30: 補遺。</em><br><em>2019/7/10: Create the article, fix some errors, and update the style.</em><br><em>Edited from personal Qzone Shuoshuo on 2019/2/1.</em></p></blockquote><span id="more"></span><h1 id="序"><a href="#序" class="headerlink" title="序"></a>序</h1><blockquote><p>高中前兩年，幸遇莊師，承蒙教誨，受益匪淺。<br>高三溯昔，偶憶莊師言語，嘗略作整理。<br>今重加校勘，編成 <strong>《語類》</strong> 凡九篇。<br>謹錄懿言，不避讜論，僅偶略過激之語，唯求實錄耳。<br>凡普通話以漢語拼音注音，閩南語以羅馬字注音。<br><em>2019/7/10新註：輔以國際音標。</em><br>戊戌臘月廿七 某學生謹識</p></blockquote><h1 id="治學篇第一"><a href="#治學篇第一" class="headerlink" title="治學篇第一"></a>治學篇第一</h1><ul><li>你可以看不起我，但不可以看不起數學。</li><li>讀書要由薄變厚，由厚變薄。</li><li>要對得起自己的良心。</li><li>無志之士常立志，有志之士立常志。</li><li>道路是曲折的，前途是光明的。</li><li>在前進中曲折，在曲折中前進。</li><li>我出的這些考卷，都是我知識的結晶。</li><li>如果你現在把我上課的板書都做成一本筆記，到了高三，有什麼知識點忘記了，翻開一看，都歷歷在目。現在有些學校到高三纔把概念印出來給學生，到高三來不及了。</li><li>讀書不能只是爲了高考。我15屆的一個學生很感激我，他上高中時，這些知識我上課都有補充，都有詳細講過，到大學教授都不怎麼講，所以他才聽得很輕鬆。</li><li>平時的排名/成績都不算數，只有最後的那次才算數。</li><li>把練習當作考試，把考試當作練習。</li><li>在一片繁華聲中，靜下心來做學問。</li><li>你們是相信我還是相信答案？</li></ul><h1 id="教學篇第二"><a href="#教學篇第二" class="headerlink" title="教學篇第二"></a>教學篇第二</h1><ul><li><p>解清楚袂？</p></li><li><p>三角函數的<ruby>誘<rt>yǒu</rt></ruby>導公式</p></li><li><p>sin, cos, cos, sin, αβαβ</p></li><li><p>正切的另外兩個半角公式像疊羅漢一樣。</p><blockquote><p>$$tan\frac{α}{2}=\frac{sinα}{1+cosα}=\frac{1-cosα}{sinα}$$</p></blockquote></li><li><p>你聽說過小高斯的故事嗎？ </p></li><li><p><ruby>拉格朗日<rt>la22 ge22 lang51 ri21</rt></ruby>中值定理</p></li></ul><h1 id="紀律篇第三"><a href="#紀律篇第三" class="headerlink" title="紀律篇第三"></a>紀律篇第三</h1><ul><li><ruby>又<rt>iū22</rt></ruby>有儂咧講話。</li><li><ruby>彼誰<rt>hit-tsuêe</rt></ruby>又<ruby>覆<rt>phak</rt></ruby>咧遐睏？</li><li><ruby>按遐<rt>án-hiann</rt></ruby>欲怎解戰鬥着？</li><li>我感覺恁這屆實驗班……</li></ul><h1 id="同學門生篇第四"><a href="#同學門生篇第四" class="headerlink" title="同學門生篇第四"></a>同學門生篇第四</h1><ul><li><p>我的同學方/t͡ʃɔu⁵⁵ t͡sɹ̩²¹/：</p><ul><li>他上高中的時候，上課都很認真聽，注意做筆記</li><li>他平時還很喜歡寫詩 </li></ul></li><li><p>09屆的羅/ᵐbin³⁵/：</p><ul><li>高考數學144</li><li>他現在還時常和我聯繫</li></ul></li></ul><h1 id="領導篇第五"><a href="#領導篇第五" class="headerlink" title="領導篇第五"></a>領導篇第五</h1><ul><li>我感覺我咧恁心目中是排咧<ruby>尾掌指<rt>bué-tsím-tsái</rt></ruby>兮……學堂有啥消息我攏是上慢知兮……</li><li>又有學生家長咧領導面頭前講……</li><li>行外的總要指導行內的。</li><li>我大不了教師工作辭了，開車養活自己。</li><li>領導只有以前教育局那位吳局長我最佩服他。</li><li>那些所謂的領導……</li></ul><h1 id="課改篇第六"><a href="#課改篇第六" class="headerlink" title="課改篇第六"></a>課改篇第六</h1><ul><li>十年課改，算是以失敗告終。</li><li>新課標引入信息技術，這點我最欣賞。</li><li>新課標教材前後順序都打亂了，知識系統支離破碎！</li><li>現在都講究一個「<ruby>核<rt>hè</rt></ruby>心素養」。</li><li>我沒有資格開公開課。</li></ul><h1 id="音樂篇第七"><a href="#音樂篇第七" class="headerlink" title="音樂篇第七"></a>音樂篇第七</h1><ul><li>現在那些歌曲，動不動就是「我愛你」「你愛我」的。</li><li>數學與音樂是有共通之處的。</li><li>我大學時自學音樂，後來還譜了一首曲子。</li><li>我大學剛畢業到二中教書，就花了八百塊買了手風琴。</li><li>我決定退休後要舉辦一場個人音樂會。</li></ul><h1 id="省質檢篇第八"><a href="#省質檢篇第八" class="headerlink" title="省質檢篇第八"></a>省質檢篇第八</h1><blockquote><p>涉及2017年福建省質檢泄題事件。<em>斜體熟語</em>詳見下篇</p></blockquote><ul><li>從試卷中我嗅到了那些專家的味道。</li><li>那些所謂的專家都是事後諸葛亮。</li><li>遐專家，透日食飽<ruby>紥<rt>tsah</rt></ruby>手提電腦遘全省各地開講座，<em>「王兄柳弟」</em>，<ruby>今<rt>tann</rt></ruby> <em>「嚴官出惡賊」</em>。</li><li>我最欣賞全國卷的題目，言簡意賅。</li></ul><h1 id="熟語篇第九"><a href="#熟語篇第九" class="headerlink" title="熟語篇第九"></a>熟語篇第九</h1><ul><li>「<strong>曲館墘豬母解敲鉢</strong>」Khiok-kuán kînn⁵⁵ ti-bó ēi khà puah：耳濡目染</li><li>「<strong>拳頭師予豬母犁倒</strong>」Kûn-thâu-sai khō ti-bó lêi--tó</li><li>「<strong>擒豬尾趁暢</strong>」 Khîm ti-bué thàn thiòng</li><li>「<strong>王兄柳弟</strong>」Ông-hiann Liú-tī：狐朋狗友</li><li>「<strong>嚴官出惡賊</strong>」Giâm-kuann tshut ok-tsha̍t</li></ul>]]></content>
    
    
    <categories>
      
      <category>隨筆</category>
      
    </categories>
    
    
    <tags>
      
      <tag>莊師</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>縷瑣</title>
    <link href="/essay/trifles/"/>
    <url>/essay/trifles/</url>
    
    <content type="html"><![CDATA[<p>才疏學淺。愚拙幼稚。</p><span id="more"></span><h1 id="Tsi̍t-ni-e-khuai-lo̍k-kah-iu-siang"><a href="#Tsi̍t-ni-e-khuai-lo̍k-kah-iu-siang" class="headerlink" title="Tsi̍t-nî ê khuài-lo̍k kah iu-siang"></a>Tsi̍t-nî ê khuài-lo̍k kah iu-siang</h1><p>即蜀年，khuài-lo̍k與iu-siang並存。</p><h1 id="Sim-suinn-suinn"><a href="#Sim-suinn-suinn" class="headerlink" title="Sim suinn-suinn"></a>Sim suinn-suinn</h1><p><em>From the diary on 2019/7/8.</em></p><p>「遷延日久，大為失計。」</p><h1 id="Unfinished-Dreams"><a href="#Unfinished-Dreams" class="headerlink" title="Unfinished Dreams"></a>Unfinished Dreams</h1><p>當然，永恆目標是追求幸福。<br>儘管隨儂有怹家己兮fate。</p><p>貧懶佇網誌唱明偌濟遠大理想，究竟是着蜀步蜀步來。</p><p><u><em>Kánn tâng ak-kuí tsenn kuâinn-kēe,<br>M̄ hiònn pà-hêng niō tshùn-pun!</em></u></p>]]></content>
    
    
    <categories>
      
      <category>隨筆</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/uncategorized/hello-world/"/>
    <url>/uncategorized/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="/">Enatsu’s Site</a>!</p><span id="more"></span><h6 id="hello-world-cpp"><a href="#hello-world-cpp" class="headerlink" title="hello_world.cpp"></a>hello_world.cpp</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs C++"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;iostream&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    cout&lt;&lt;<span class="hljs-string">&quot;Hello World&quot;</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure><h6 id="HelloWorld-java"><a href="#HelloWorld-java" class="headerlink" title="HelloWorld.java"></a>HelloWorld.java</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloWorld</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        System.out.println(<span class="hljs-string">&quot;Hello World&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>開篇</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
